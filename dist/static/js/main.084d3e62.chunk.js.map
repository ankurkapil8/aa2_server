{"version":3,"sources":["agent.js","models/BaseUrl.js","constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/finance-Itr/ItrPopup.js","components/home/InqueryForm.js","components/layout/SectionMenu.js","components/layout/SectionOffers.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/layout/Header.js","components/home/Home.js","components/layout/ListErrors.js","components/users/Registration.js","models/user.js","components/layout/Loader.js","components/users/Login.js","components/finance-Itr/FillItr.js","components/layout/InnerHeader.js","components/layout/Leftbar.js","components/layout/TopNav.js","components/layout/InnerLayout.js","components/food-order/AddCartButton.js","components/food-order/CategoryList.js","components/food-order/MyCart.js","components/food-order/PlaceOrder.js","components/food-order/OrderSuccess.js","components/Admin/CategoryManagement.js","components/Admin/orders/OrderHistory.js","components/Admin/AddCategory.js","components/Admin/products/ProductManagement.js","components/Admin/products/AddProduct.js","components/Admin/products/EditProduct.js","components/Admin/finance/FinanceRequests.js","components/Admin/finance/Form16Requests.js","components/Admin/Home.js","components/users/UserOrderHistory.js","components/users/user-actions/UserAction.js","components/food-order/OrderFailed.js","models/masterRecord.js","components/masterRecord/memberGroup/MemberGroup.js","components/masterRecord/memberGroup/AddMemberGroup.js","models/memberDetails.js","components/masterRecord/member/AddMember.js","components/masterRecord/member/Member.js","components/masterRecord/member/MemberViewDetails.js","models/groupLoan.js","components/groupLoan/Scheme.js","components/groupLoan/AddScheme.js","components/dashboard/Dashboard.js","components/groupLoan/LoanApplication.js","components/groupLoan/LoanApproval.js","components/groupLoan/DisburseLoan.js","components/groupLoan/LoanApprovalDetails.js","components/groupLoan/AllApplications.js","components/groupLoan/EmiCalculator.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","responseBody","encodeURIComponent","res","errorBody","err","response","token","tokenPlugin","req","set","requests","url","get","use","then","body","post","Auth","login","email","password","register","userDetails","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","data","getCategoryAdmin","getOrdersHistoryAdmin","page","getOrderHistoryByUserEmail","addCategory","deleteCategory","del","editCategory","put","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","Inquery","submitInquery","getToken","setToken","_token","REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","message","role","record","id","statusCode","jwtToken","isLoginSuccess","subtype","key","value","common","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","prod","rootReducer","undefined","promiseMiddleware","store","next","v","dispatch","currentView","getState","viewChangeCounter","skipTracking","currentState","promise","error","localStorageMiddleware","window","localStorage","setItem","agent","createStore","reducer","composeWithDevTools","applyMiddleware","ItrPopup","props","Modal","show","isopen","onHide","hide","centered","className","Header","closeButton","Title","Body","to","pathname","query","InqueryForm","useState","fullName","business","dob","Date","gender","service","Phone","setState","dobstate","setdobstate","setmessage","loading","setloading","handleChange","e","target","name","console","log","Alert","variant","onClose","dismissible","Form","onSubmit","ev","preventDefault","serviceType","reset","Row","Group","as","Col","controlId","Label","Control","onChange","placeholder","selected","date","dateFormat","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","maxDate","defaultValue","readOnly","Button","disabled","Component","LogedInView","currentUser","aactiveClassName","LogedOutView","useDispatch","history","useHistory","split","isAdmin","isPrimeMember","onClick","push","handleITRPopup","this","connect","Home","ListErrors","Registration","submitForm","isLoading","required","Text","React","username","Loader","Spinner","animation","relative","Login","isShowLoader","user","changeEmail","onChangeEmail","changePassword","onChangePassword","onUnload","FillItr","setstate","isphoneinvalid","setisphoneinvalid","isemailinvalid","setiisemailinvalid","isaadharinvalid","setiisaadharinvalid","form16","setform16","handlePay","checkValidate","orderForService","location","onlinePayment","returnType","amount","options","updatePaymentState","rzp1","Razorpay","on","open","alert","status","obj","paymentObj","razorpay_order_id","paymentStatus","paymentResponse","metadata","order_id","handleSubmit","onFileUpload","paymentMode","formData","FormData","append","isInvalid","Feedback","rows","File","Input","accept","files","InnerHeader","Leftbar","useSelector","Nav","Item","Link","href","class","eventKey","TopNav","Navbar","collapseOnSelect","expand","bg","toggleSidebar","Toggle","Collapse","InnerLayout","component","rest","showSidebar","setshowSidebar","useEffect","innerWidth","checkLogin","jwt","getItem","hasOwnProperty","render","Container","fluid","md","sm","AddCartButton","initialAddItem","addItemInitial","increaseQuantity","decreaseQuantity","nextprops","arr","length","filter","Badge","CategoryList","getInitialData","a","showloader","all","categories","products","categoryList","itemList","changeCategory","catName","selectedTab","ListGroup","defaultActiveKey","active","index","CardColumns","Card","border","Img","src","imageUrl","title","Subtitle","description","Footer","MyCart","priceTotal","reduce","prevValue","currentValue","parseInt","Table","responsive","striped","bordered","colSpan","PlaceOrder","authState","shipingDetails","setShipingDetails","showPayementModel","setshowPayementModel","isnameinvalid","setisnameinvalid","isaddressinvalid","setisaddressinvalid","totalQuantity","totalPrice","shippingObj","address","phone","city","street","landmark","items","shipping","selectPaymentMode","forEach","element","borderless","OrderSuccess","Heading","CategoryManagement","setShow","heading","setalert","handleClose","showLoader","getCategories","useMemo","col1","col2","col3","columns","accessor","useTable","initialState","pageIndex","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","pageOptions","previousPage","pageSize","gotoPage","nextPage","canPreviousPage","setPageSize","canNextPage","changeTab","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","width","height","viewBox","fill","xmlns","d","OrderHistory","getOrders","orderHistory","setorderHistory","selectedorder","setselectedorder","totalPage","settotalPage","isopenpopup","setisopenpopup","selectedPage","setselectedPage","number","Pagination","changePage","paginationBasic","totalOrders","datePlaced","itm","viewOrderPopUp","hover","isDiscountApplied","totalBillAmount","AddCategory","ProductManagement","col4","col5","col6","category","col7","Image","thumbnail","editProduct","AddProduct","setcategory","EditProduct","storeProduct","FinanceRequests","ITRrequests","setITRrequests","getITRrequests","firstName","lastName","aadhar","zip","Form16Requests","form16requests","setform16requests","getForm16requests","filePathArr","filePath","setisShowLoader","setselectedTab","tab","UserOrderHistory","UserAction","OrderFailed","getMemberGroups","saveMemberGroups","MemberGroup","memberGroupRecords","setMemberGroupsRecords","getMemberGroup","masterRecord","size","group","group_code","group_name","remark","moment","created_at","format","AddMemberGroup","values","setValues","isShow","showToast","setShowToast","formik","useFormik","initialValues","validate","resetForm","prevValues","Toast","autohide","delay","touched","getMemberDetailsData","saveMemberDetails","deleteMember","AddMember","enrollmentDate","setEnrollmentDate","setDob","groups","setGroups","enrollment_date","date_of_birth","member_name","age","marital_status","mobile_number","email_id","member_group_id","aadhar_number","pan_card_number","driving_license_number","voter_id_number","ration_card_number","memberDetails","merital_status","Members","showDeleteModel","setShowDeleteModel","deleteID","setDeleteID","memberRecords","setMemberRecords","memberRecord","UpdatedList","member","idx","member_id","deleteHandle","getScheme","saveScheme","deleteScheme","getLoanAppInitialData","applyForloan","getApprovalList","getDisburseList","getLoanDetailbyId","approveRejectLoan","getAllLoanApplications","disburseRejectLoan","calculateEMI","Scheme","schemes","setSchemes","getSchemes","groupLoan","scheme","scheme_code","scheme_name","max_amount","interest_rate","EMI_type","AddScheme","min","Dashboard","xs","text","style","LoanApplication","schemeRecords","setSchemeRecords","selectedScheme","setSelectedScheme","getSchemesAndMembers","scheme_id","application_date","loan_amount","EMI_payout","tenure","schems","LoanApproval","loanlist","setLoanlist","getLoanList","loan","loan_id","DisburseLoan","LoanApprovalDetails","isShowEMILoader","setisShowEMILoader","emiData","setEmiData","loanDetails","setLoanDetails","showApprovalButton","setShowApprovalButton","showDisburseButton","setShowDisburseButton","getLoanDetails","calculateEmi","Tenure","EmiData","is_approved","is_disbursed","actionOnLoan","actionType","actionDisburseLoan","header","EMI","principal","int_amount","outstanding","AllApplications","formatedData","actionStatus","EmiCalculator","calculatedData","setCalculatedData","loanStartDate","Routes","exact","path","MemberViewDetails","AdminHome","Member","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.084d3e62.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = '/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  // del: url =>\r\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\r\n  // put: (url, body) =>\r\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (email, password) =>\r\n    requests.post('/user/login',  { email, password } ),\r\n  register: (userDetails) =>\r\n    requests.post('/user/registration',  userDetails ),\r\n};\r\n\r\nconst Order = {\r\n  getProductsByCat:(catname)=>\r\n  requests.get(`/products?category=${catname}`),\r\n  getCatgoryInitialData:()=>{\r\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\r\n  },\r\n  placeOrder:(data)=>{\r\n    //requests.post(\"/orders/place-order\",data)\r\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\r\n  },\r\n  getCategoryAdmin(){\r\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\r\n  },\r\n  getOrdersHistoryAdmin(page){\r\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\r\n  },\r\n  getOrderHistoryByUserEmail(){\r\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\r\n  },\r\n  addCategory(data){\r\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  deleteCategory(data){\r\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\r\n  },\r\n  editCategory(data){\r\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  getProducts(){\r\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\r\n  },\r\n  deleteProduct(data){\r\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\r\n  },\r\n  addProducts(data){\r\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  },\r\n  editProducts(data){\r\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Payment = {\r\n  getRazorpayOrderId(data){\r\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\r\n  },\r\n  updatePaymentStatus(data){\r\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Finance = {\r\n  fillItr(data){\r\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\r\n  },\r\n  getAdminItr(){\r\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\r\n  },\r\n  uploadForm16(data){\r\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\r\n  },\r\n  getAdminForm16(){\r\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\r\n  },\r\n  downloadForm16(data){\r\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\r\n  }\r\n \r\n}\r\nconst Inquery = {\r\n  submitInquery(data){\r\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\r\n  }\r\n}\r\nexport default {\r\n  Auth,\r\n  Order,\r\n  Payment,\r\n  Finance,\r\n  Inquery,\r\n  getToken:()=>{return token},\r\n  setToken: _token => { token = _token; }\r\n};","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nexport const superagent = superagentPromise(_superagent, global.Promise);\r\nexport const API_ROOT = 'https://aa2microfinance.herokuapp.com/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\nexport const requests = {\r\n    del: url =>\r\n      superagent.del(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    get: url =>\r\n      superagent.get(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    // put: (url, body) =>\r\n    //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n    post: (url, body) =>\r\n      superagent.post(`${API_ROOT}${url}`, body).then(responseBody,errorBody)\r\n  };","\r\n  \r\nexport const APP_LOAD = 'APP_LOAD';\r\nexport const REDIRECT = 'REDIRECT';\r\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\r\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\r\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\r\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\r\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\r\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\nexport const SET_PAGE = 'SET_PAGE';\r\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\r\nexport const CHANGE_TAB = 'CHANGE_TAB';\r\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\r\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\r\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\r\nexport const ASYNC_START = 'ASYNC_START';\r\nexport const ASYNC_END = 'ASYNC_END';\r\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\r\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const REMOVE_TAG = 'REMOVE_TAG';\r\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\r\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\r\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\r\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const RESET_ORDER = 'RESET_ORDER';\r\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\r\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';","import {\r\n    ADD_ITEM_INITIAL,\r\n    INCREASE_QUANTITY,\r\n    DECREASE_QUANTITY,\r\n    RESET_ORDER\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    addedItem: [],\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case ADD_ITEM_INITIAL:\r\n            const addedItem =[...state.addedItem,{\r\n                productId:action.item._id,\r\n                quantity:1,\r\n                perItemPrice:action.item.price,\r\n                item:action.item\r\n            }]\r\n            return {...state, addedItem};\r\n        case INCREASE_QUANTITY:\r\n             state.addedItem.map(record=>{\r\n                if(record.productId == action.productId){\r\n                    record.quantity +=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case DECREASE_QUANTITY:\r\n            state.addedItem.map(record=>{\r\n                if(record.productId == action.productId && record.quantity !=0){\r\n                        record.quantity -=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case RESET_ORDER:\r\n            state.addedItem = []\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import {\r\n    STORE_EDIT_PRODUCT,\r\n    GET_EDIT_PRODUCT,\r\n    UPDATE_PRODUCT_FIELD\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    product: {},\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case STORE_EDIT_PRODUCT:\r\n            return {...state,\r\n                product:action.data \r\n            };\r\n        case GET_EDIT_PRODUCT:\r\n            return {...state};\r\n        case UPDATE_PRODUCT_FIELD:\r\n            let prod = state.product;\r\n            prod[action.data.key]=action.data.value;\r\n           return {...state,product:prod}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import auth from './reducers/auth';\r\nimport common from './reducers/common';\r\nimport order from './reducers/order';\r\nimport product from './reducers/product';\r\nimport { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  common,\r\n  order,\r\n  product\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\nexport default rootReducer\r\n// export default combineReducers({\r\n//   auth,\r\n//   common,\r\n//   order,\r\n//     //router: routerReducer\r\n//   });","import {\r\n    LOGIN,\r\n    REGISTER,\r\n    LOGIN_PAGE_UNLOADED,\r\n    REGISTER_PAGE_UNLOADED,\r\n    ASYNC_START,\r\n    UPDATE_FIELD_AUTH,\r\n    LOGOUT\r\n  } from '../constants/actionTypes';\r\n  \r\n  export default (state = {}, action) => {\r\n  //console.log(action);\r\n    switch (action.type) {\r\n      case LOGIN:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload.message,\r\n          role:action.payload.record[0]?.role,\r\n          id:action.payload.record[0]?.id,\r\n          statusCode:action.payload.jwtToken != \"\"?\"200\":\"\",\r\n          isLoginSuccess:action.payload.jwtToken != \"\"? true:false\r\n        }\r\n      case REGISTER:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload.statusCode\r\n        };\r\n      case LOGIN_PAGE_UNLOADED:\r\n      return{\r\n        ...state,\r\n        //errors: action.payload,\r\n        //userDetails:\r\n      }\r\n      case REGISTER_PAGE_UNLOADED:\r\n        return {};\r\n      case ASYNC_START:\r\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\r\n          return { ...state, inProgress: true };\r\n        }\r\n        break;\r\n      case UPDATE_FIELD_AUTH:\r\n        return { ...state, [action.key]: action.value };\r\n      default:\r\n        return state;\r\n    }\r\n    return state;\r\n  };","import {\r\n    LOGOUT,\r\n    REDIRECT\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0\r\n  };\r\n  \r\n  export default (state = {}, action) => {\r\n    //console.log(action);\r\n      switch (action.type) {\r\n        case REDIRECT:\r\n            return { ...state, redirectTo: null };\r\n        // case LOGOUT:\r\n        //     return { redirectTo: '/login', token: null, currentUser: null };\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import agent from './agent';\r\nimport {\r\n  ASYNC_START,\r\n  ASYNC_END,\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER\r\n} from './constants/actionTypes';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\r\n\r\n    const currentView = store.getState().viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === LOGIN && action.payload != undefined) {\r\n    if (action.payload.jwtToken!=\"\") {\r\n      window.localStorage.setItem('jwt', action.payload.jwtToken);\r\n      agent.setToken(action.payload.jwtToken);\r\n    }\r\n  } else if (action.type === LOGOUT) {\r\n    window.localStorage.setItem('jwt','');\r\n    agent.setToken(null);\r\n  }\r\n\r\n   next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nconst getMiddleware = () => {\r\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\r\n  };\r\nexport const store = createStore(reducer,composeWithDevTools(getMiddleware()));","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//import \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction ItrPopup(props) {\r\n    return (\r\n    <Modal show={props.isopen} onHide={props.hide} centered className=\"text-center\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Tax Return</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'fill'}}}  className=\"btn btn-danger btn-sm\">Start Your Tax Return</Link>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'uploadForm16'}}} className=\"btn btn-danger btn-sm\">Upload Form-16 Now</Link>\r\n            </Modal.Body>\r\n        </Modal>\r\n        )\r\n}\r\n\r\nexport default ItrPopup\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Col, Row, Container, Modal,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction InqueryForm(props) {\r\n    const [state, setState] = useState(\r\n        {fullName:\"\",\r\n            email:\"\",\r\n            business:\"\",\r\n            dob:new Date(),\r\n            gender:\"\",\r\n            service:\"\",\r\n            Phone:\"\"\r\n        });\r\n    const [dobstate, setdobstate] = useState(new Date());\r\n    const [message, setmessage] = useState({type:\"\",message:\"\"})\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const handleChange = (e)=>{\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n    }\r\n    const handleSubmit = (ev)=>{\r\n        ev.preventDefault();\r\n\r\n        state[\"dob\"] = dobstate;\r\n        state[\"service\"] = props.serviceType;\r\n        setState(state);\r\n        console.log(state);\r\n        setloading(true);\r\n        agent.Inquery.submitInquery(state).then((res=>{\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                message.type = \"success\";\r\n                message.message = \"Your Details has been submited. Our agent will contact you soon.\"\r\n            }else{\r\n                message.type = \"error\";\r\n                message.message = \"Something went wrong. Please try again.\"\r\n            }\r\n            setmessage(message);\r\n            setloading(false);\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n\r\n        <Modal show={props.isopen} onHide={props.hide} >\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Enquiry</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {  message.type != \"\"? \r\n                message.type ==\"success\"?\r\n                <Alert key={message.type} variant={\"success\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:<Alert key={message.type} variant={\"danger\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:\"\"        \r\n                }\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                            <Form.Label>Full Name</Form.Label>\r\n                            <Form.Control onChange={handleChange} type=\"text\" name=\"fullName\"/>\r\n                        </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" onChange={handleChange} name=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Business</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"business\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Date of Birth</Form.Label>\r\n                        <DatePicker\r\n                         selected={dobstate} \r\n                         onChange={date=>setdobstate(date)}\r\n                         dateFormat=\"dd/MM/yyyy\"\r\n                         showYearDropdown\r\n                         dateFormatCalendar=\"MMMM\"\r\n                         yearDropdownItemNumber={50}\r\n                         scrollableYearDropdown\r\n                         maxDate={new Date()}\r\n                         />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Gender</Form.Label>\r\n                    <Form.Control name=\"gender\" as=\"select\" onChange={handleChange} defaultValue=\"Choose...\">\r\n                        <option>Choose...</option>\r\n                        <option value=\"male\">Male</option>\r\n                        <option value=\"female\">Female</option>\r\n                    </Form.Control>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Service</Form.Label>\r\n                        <Form.Control onChange={handleChange} type=\"text\" name=\"service\" value={props.serviceType} readOnly/>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"phone\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Submit\"}\r\n\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InqueryForm\r\n","import React, { Component} from 'react'\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\nimport InqueryForm from '../home/InqueryForm'\r\nimport {Link} from 'react-router-dom';\r\n\r\n  class SectionMenu extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false,\r\n        openEnqueryForm:false,\r\n        serviceType:\"\"\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n      this.setState({\r\n        isopen:this.state.isopen?false:true\r\n      })\r\n    }\r\n    handleEnqueryForm = (serviceType = \"\")=>{\r\n      console.log(serviceType);\r\n      this.setState({\r\n        openEnqueryForm:this.state.openEnqueryForm?false:true,\r\n        serviceType:serviceType\r\n      })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n          <>\r\n            <section className=\"text-center \">\r\n            <div className=\"container\">\r\n              <div className=\"col-md-12 shadow-sm p-5 service \">\r\n                <div className=\"row roww\">\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={this.handleITRPopup}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/itr.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Fill ITR</h5>\r\n                  </div>\r\n                 \r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box \">\r\n                  <Link to=\"/CategoryList\">\r\n                    <img  src={process.env.PUBLIC_URL + '/assets/img/food.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">FOOD</h5></Link>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Catering\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/catering.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Catering</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Balance Sheet\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/finance.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Financial Consultancy</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Investment Planning\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/investment.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Investment Planning</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"GST filing\")}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/gst.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">GST Filing </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n          <InqueryForm isopen={this.state.openEnqueryForm} serviceType={this.state.serviceType} hide={this.handleEnqueryForm}/>         \r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default SectionMenu\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SectionOffers extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"text-center\">\r\n                <div className=\"container\">\r\n                    <h4 className=\"h4-responsive font-weight-bold my-3 text-primary\">Best Offers</h4>\r\n                    <div className=\"row my-5\">\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-1.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 1</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 50% Off\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-2.jpg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 2</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 60% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-4.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 3</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Up to 50% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-3.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 4</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Standard EMI Options Available\r\n                  </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\n\r\nfunction LogedInView(props) {\r\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\r\n        return (\r\n\r\n        <li className=\"nav-item\">\r\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default LogedInView\r\n","import React from 'react'\r\nimport { Route, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    LOGOUT\r\n  } from '../../constants/actionTypes';\r\nfunction LogedOutView(props) {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const logout = ()=>{\r\n         dispatch({ type: LOGOUT })\r\n           console.log(\"hollo\");\r\n           history.push(\"/\");\r\n       }\r\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\r\n        let name = props.currentUser.email.split(\"@\");\r\n\r\n        return (<>\r\n            \r\n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\r\n            <li className=\"nav-item\">\r\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\r\n            </li>\r\n                \r\n            </li>:\"\"}            \r\n            <li className=\"nav-item\">\r\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\r\n                    {name[0]}\r\n\r\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \r\n\r\n                    \r\n                    </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\r\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\r\n            </li>\r\n        </>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LogedOutView\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass Header extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n  \r\n    render(){\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                            {/* <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                            </li>\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                                <NavLink activeClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                                \r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"view\">\r\n                <div className=\"mask rgba-gradient d-flex justify-content-center align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 white-text text-center mx-auto  mb-5 wow fadeInLeft\" data-wow-delay=\"0.3s\">\r\n                                <h1 className=\"my-3 text-center mx-auto font-weight-bold wow fadeInLeft\">Services, on demand.</h1>\r\n\r\n                                <div className=\"ml-auto mr-auto main-search \">\r\n\r\n                                    <form action=\"\" className=\"search-service\">\r\n                                        <input className=\"search-form form-control form-control-lg\" type=\"text\" placeholder=\"Search Services\" />\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport SectionMenu from '../layout/SectionMenu'\r\nimport SectionOffers from '../layout/SectionOffers'\r\nimport Header from '../layout/Header'\r\nimport Footer from '../layout/Footer'\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <SectionMenu />\r\n            {/* <SectionOffers /> */}\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\n\r\nexport default class ListErrors extends Component {\r\n    render() {\r\n        const errors = this.props.errors;\r\n        const statusCode = this.props.statusCode;\r\n        if (errors) {\r\n            return (\r\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\r\n                    {errors}\r\n              </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\n\r\n\r\nclass Registration extends React.Component {    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userDetails: {},\r\n            errors:\"\",\r\n            statusCode:\"\",\r\n            isLoading:false\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        this.setState({ userDetails: state });\r\n        \r\n    }\r\n    submitForm=() => ev =>{\r\n        ev.preventDefault();\r\n        this.setState({ isLoading: true });\r\n        agent.Auth.register(this.state.userDetails).then((res=>{\r\n            this.setState({ errors: res, statusCode:res.statusCode, isLoading:false});\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                //this.props.history.push('/login')\r\n            }\r\n        }));\r\n    }\r\n    render() {\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <ListErrors errors={this.state.errors} statusCode={this.state.statusCode} />\r\n            <Form className=\"login-form\" onSubmit={this.submitForm()}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\" >\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"phone\" name=\"phone\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your phone no with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col}  controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\"  onChange={this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.state.isLoading}>\r\n                        \r\n                        {this.state.isLoading ? 'Loading…' : \"Register\"}\r\n                    </Button>\r\n                </Form.Row>\r\n\r\n            </Form>\r\n        </div>\r\n\r\n    )}\r\n}\r\n\r\nexport default Registration\r\n","import { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n\r\nconst Auth = {\r\n    login: (username, password) =>\r\n    superagent.post(`${API_ROOT}/user/login`,  { username, password } ),\r\n  };\r\n  \r\n  export default {Auth};\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader(props) {\r\n    if(props.show){\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\" className={props?.relative?\"loader-relative\":\"loader\"}>\r\n            </Spinner>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component}  from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\nimport user from \"../../models/user\";\r\nimport Loader from '../layout/Loader';\r\nimport {\r\n    UPDATE_FIELD_AUTH,\r\n    LOGIN,\r\n    LOGIN_PAGE_UNLOADED\r\n} from '../../constants/actionTypes';\r\n\r\nclass Login extends Component {\r\n   // let history = useHistory();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={isShowLoader:false};\r\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\r\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\r\n    }\r\n    submitForm=ev=> {\r\n        ev.preventDefault();\r\n        this.setState({isShowLoader:true});\r\n        user.Auth.login(this.props.username, this.props.password).then(res=>{\r\n            this.setState({isShowLoader:false});\r\n            console.log(res);\r\n            this.props.onSubmit(res.body);\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.isLoginSuccess){\r\n            this.props.history.push('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.props.onUnload();\r\n      }\r\n    render() {\r\n        const username = this.props.username;\r\n        const password = this.props.password;\r\n        return (\r\n            <>\r\n            <div className=\"login-div\">\r\n            <Loader show={this.state.isShowLoader} />\r\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\r\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\r\n                <Form className=\"login-form\" onSubmit={this.submitForm}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={this.changeEmail} required/>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={password}  onChange={this.changePassword} required/>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row >\r\n                        <Col>\r\n                        <Button variant=\"primary\" disabled={this.props.inProgress} type=\"submit\">{this.props.inProgress ? 'Loading…' : \"Login\"}</Button>\r\n\r\n                        </Col>\r\n                    </Form.Row>\r\n                    {/* <Form.Row>\r\n                        <Link as={Col} to=\"/registration\" > SignUp</Link>\r\n                    </Form.Row> */}\r\n\r\n                </Form>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeEmail: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\r\n    onChangePassword: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n    onSubmit: (data) =>\r\n        dispatch({ type: LOGIN, payload: data }),\r\n    onUnload: () =>\r\n        dispatch({ type: LOGIN_PAGE_UNLOADED })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React,{useState} from 'react'\r\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';\r\nimport './Finance.css';\r\nimport agent from '../../agent'\r\n// import {KEY_ID,KEY_SECRET} from '../../constants/paymantConstants'\r\n\r\nfunction FillItr(props) {\r\n    const [state, setstate] = useState({});\r\n    const [loading, setloading] = useState(false);\r\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\r\n    const [isemailinvalid,setiisemailinvalid] = useState(false);\r\n    const [isaadharinvalid,setiisaadharinvalid] = useState(false);\r\n    const [form16, setform16] = useState([]);\r\n    console.log(props);\r\n    const handleChange = (e) => {\r\n        state[e.target.name] = e.target.value;\r\n        setstate(state);\r\n    }\r\n\r\n    const handlePay=()=>{\r\n        setloading(true);\r\n        if(checkValidate()){\r\n            console.log(\"Valid Form\");\r\n            let orderForService = \"Form16\";\r\n            if(props.location.query?.type == \"fill\"){\r\n                orderForService = \"ITR\"\r\n            }\r\n            onlinePayment(orderForService);\r\n        }else{\r\n            console.log(\"invalid from\")\r\n            setloading(false);\r\n\r\n        }\r\n    } \r\n\r\n    const checkValidate=()=>{\r\n        let returnType = true;\r\n        setisphoneinvalid(false);\r\n        setiisemailinvalid(false);            \r\n        setiisaadharinvalid(false);\r\n\r\n        if(state[\"phone\"] ==undefined || state[\"phone\"] ==\"\"){\r\n            setisphoneinvalid(true);\r\n            returnType = false\r\n        }\r\n        if((state[\"email\"] ==undefined || state[\"email\"] ==\"\") && props.location.query?.type == \"fill\" ){\r\n            setiisemailinvalid(true);            \r\n            returnType = false\r\n        } \r\n        if((state[\"aadhar\"] ==undefined || state[\"aadhar\"] ==\"\") && props.location.query?.type == \"fill\"){\r\n            setiisaadharinvalid(true);\r\n            returnType = false\r\n        } \r\n        return returnType;\r\n    } \r\n\r\n    const onlinePayment = (orderForService = \"ITR\")=>{\r\n        let amount = 300;\r\n        agent.Payment.getRazorpayOrderId({amount:amount,orderForService:orderForService}).then((res=>{\r\n            if(res.statusCode == 200){\r\n                console.log(res);\r\n                var options = {\r\n                    \"key\": \"1234\", // Enter the Key ID generated from the Dashboard\r\n                    \"amount\": amount*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n                    \"currency\": \"INR\",\r\n                    \"name\": \"Guest\",\r\n                    \"description\": \"ITR Fill Transaction\",\r\n                    \"image\": \"https://example.com/your_logo\",\r\n                    \"order_id\": res.body.record.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n                    \"handler\": function (response){\r\n                        updatePaymentState(\"success\",response);\r\n                    },                \r\n                    \"theme\": {\r\n                        \"color\": \"#3399cc\"\r\n                    }\r\n                };   \r\n                // console.log(options); \r\n                const rzp1 = new window.Razorpay(options);\r\n                rzp1.on('payment.failed', function (response){\r\n                    updatePaymentState(\"failed\",response);\r\n    \r\n                });            \r\n                rzp1.open();\r\n    \r\n            }else{\r\n                setloading(false);\r\n\r\n                alert(res.body)\r\n\r\n            }\r\n        }));\r\n    \r\n    }\r\n    const updatePaymentState=(status,obj)=>{\r\n        let orderId = \"\";\r\n        let paymentObj = {\r\n            razorpay_order_id:\"\",\r\n            paymentStatus:\"\",\r\n            paymentResponse:\"\"\r\n        }\r\n        if(status == \"success\"){\r\n            paymentObj.razorpay_order_id = obj.razorpay_order_id;\r\n            paymentObj.paymentStatus = status;\r\n            paymentObj.paymentResponse = obj;\r\n        }\r\n        if(status == \"failed\"){\r\n            paymentObj.razorpay_order_id = obj.error.metadata.order_id;\r\n            paymentObj.paymentStatus = status;\r\n            paymentObj.paymentResponse = obj;\r\n        }\r\n        try{\r\n            agent.Payment.updatePaymentStatus(paymentObj).then((res=>{\r\n                if(res.statusCode ==200 && status == \"success\"){\r\n                    if(props.location.query?.type == \"fill\"){\r\n                        handleSubmit(paymentObj.razorpay_order_id);\r\n                    }else{\r\n                        onFileUpload(paymentObj.razorpay_order_id);\r\n                    }\r\n                }\r\n                if(res.statusCode ==200 && status == \"failed\"){\r\n                    setloading(false);\r\n                    props.history.push('/orderFailed')\r\n    \r\n                }\r\n    \r\n            }),(err)=>{\r\n                console.log(err.response.body.message);\r\n            });\r\n        }catch(err){\r\n            alert(err);\r\n        }\r\n    }\r\n    const handleSubmit = ( razorpay_order_id, paymentMode=\"online\") =>{\r\n        state[\"razorpay_order_id\"] = razorpay_order_id;\r\n        state[\"paymentMode\"] = paymentMode;\r\n        setstate(state);\r\n        agent.Finance.fillItr(state).then((res=>{\r\n            setloading(false);\r\n            if(res.statusCode ==200){\r\n                props.history.push('/orderSuccess');\r\n            }\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });\r\n    } \r\n    const handleFileUpload = (e)=>{\r\n        setform16(e.target.files[0]);   \r\n    }\r\n    const onFileUpload=(razorpay_order_id)=>{\r\n        const formData = new FormData(); \r\n        formData.append( \r\n          \"myFile\", \r\n          form16, \r\n          form16.name\r\n        ); \r\n        formData.append(\"razorpay_order_id\",razorpay_order_id);        \r\n        formData.append(\"phone\",state[\"phone\"]);        \r\n        agent.Finance.uploadForm16(formData).then((res=>{\r\n            setloading(false);\r\n            if(res.statusCode ==200){\r\n                props.history.push('/orderSuccess');\r\n            }\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });   \r\n\r\n    }\r\n    if(props.location.query?.type == \"fill\"){\r\n        return (\r\n            <>\r\n            <h4 className=\"py-5 text-center\"><b>Fill ITR</b></h4>\r\n            <Form className=\"m-5\">\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">First name</Form.Label>\r\n                        <Form.Control name=\"firstName\" onChange={handleChange}  type=\"text\"  />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridlastName\">\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control name=\"lastName\" onChange={handleChange} type=\"text\"  />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">Phone*</Form.Label>\r\n                        <Form.Control name=\"phone\" onChange={handleChange}  type=\"text\"  isInvalid={isphoneinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a phone number.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n    \r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridBusiness\">\r\n                        <Form.Label>Business Name</Form.Label>\r\n                        <Form.Control name=\"business\" onChange={handleChange} type=\"text\" placeholder=\"ABC limited\" />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group  as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Email*</Form.Label>\r\n                        <Form.Control name=\"email\" onChange={handleChange} type=\"email\" placeholder=\"you@example.com\" isInvalid={isemailinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a Email.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridAadhar\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control name=\"address\" onChange={handleChange} as=\"textarea\" rows={3} />\r\n                    </Form.Group>\r\n                    </Form.Row><Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAadhar\">\r\n                        <Form.Label>Aadhar Number*</Form.Label>\r\n                        <Form.Control name=\"aadhar\" onChange={handleChange} type=\"text\" isInvalid={isaadharinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide aadhar number.\r\n                        </Form.Control.Feedback>                    \r\n    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Service</Form.Label>\r\n                        <Form.Control name=\"service\" onChange={handleChange} as=\"select\" defaultValue=\"Choose...\">\r\n                            <option>Choose...</option>\r\n                            <option>Balance Sheet</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress\">\r\n                        <Form.Label>PAN Number</Form.Label>\r\n                        <Form.Control name=\"pan\" onChange={handleChange} type=\"text\" />\r\n                    </Form.Group>\r\n    \r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridZip\">\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange} name=\"zip\"/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button variant=\"danger\" className=\"center\" type=\"button\" onClick={handlePay} disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Pay Now\"}\r\n                </Button>\r\n            </Form>\r\n            </>\r\n            )\r\n    \r\n    }else{\r\n        return (  <div className=\"login-div\">\r\n                <Form className=\"login-form\">\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">Phone*</Form.Label>\r\n                        <Form.Control name=\"phone\" onChange={handleChange}  type=\"text\"  isInvalid={isphoneinvalid}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We will contact you at this phone number.\r\n                        </Form.Text>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a phone number.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.File id=\"formcheck-api-regular\">\r\n                        <Form.Label variant=\"primary\">Form16*</Form.Label>\r\n                            <Form.File.Input accept=\".pdf\" onChange={handleFileUpload}/>\r\n                        </Form.File>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Only PDF file.\r\n                        </Form.Text>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Button variant=\"danger\"  type=\"button\" onClick={handlePay} disabled={loading}>{loading ? 'Loading…' : \"Pay Now\"}\r\n                    </Button>\r\n                    </Form.Row>\r\n                </Form>\r\n                </div>\r\n    )\r\n    }       \r\n}\r\n\r\nexport default FillItr\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass InnerHeader extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n    render(){\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\r\n                <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                                {/* <a className=\"nav-link\" href=\"#\">Home\r\n                    <span className=\"sr-only\">(current)</span>\r\n                                </a> */}\r\n                            {/* </li> */}\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\"> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\r\n                                {/* <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n\r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\r\n","import React from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, Nav,  } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nexport default function Leftbar() {\r\n    const auth = useSelector(state => state.auth);\r\n    return (\r\n        // <Col md={2} id=\"sidebar-col\" className=\"pr-0\">\r\n            <nav id=\"sidebar\">\r\n                <div className=\"sidebar-header\">\r\n                    <h5>AA2 MutualHelp</h5>\r\n                </div>\r\n                <Nav className=\"list-unstyled components flex-column\" as=\"ul\" >\r\n                <Nav.Item as=\"li\" className=\"active\">\r\n                <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                     Dashboard\r\n            </Nav.Link>\r\n            </LinkContainer>\r\n                </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                   \r\n                        <Nav.Link href=\"#homeSubmenu\" className=\"dropdown-toggle\" data-toggle=\"collapse\" aria-expanded=\"false\">Master Record</Nav.Link>\r\n                        \r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"homeSubmenu\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/memberGroup\">\r\n                                <Nav.Link href=\"/home\">Member Group</Nav.Link>\r\n                                </LinkContainer>\r\n                                {/* <NavLink to=\"/memberGroup\">Member Group</NavLink> */}\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/member\">\r\n                                <Nav.Link eventKey=\"link-1\">Members</Nav.Link>\r\n                            </LinkContainer>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#groupLoan\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Group Loan</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"groupLoan\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/emiCalculator\">\r\n                                <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/scheme\">\r\n                                <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/loanApplication\">\r\n                                <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/loanApproval\">\r\n                                <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>:\"\"}\r\n                            {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/disburseLoan\">\r\n                                <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>:\"\"}\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/allApplications\">\r\n                                <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#processingFee\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"processingFee\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"#\">List Processing Fee</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#expense\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Expense</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"expense\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"#\">List Expense</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#payments\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Payment to collect</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"payments\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"#\">Payment to collect(Loan)</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </nav>\r\n        // </Col>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router';\r\nimport {LOGOUT} from '../../constants/actionTypes';\r\n\r\nexport default function TopNav(props) {\r\nconst auth = useSelector(state => state.auth);\r\nconst dispatch = useDispatch();\r\nlet history = useHistory();\r\nconst logout = ()=>{\r\n     dispatch({ type: LOGOUT })\r\n       history.push(\"/login\");\r\n   }\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\r\n            <button type=\"button\" onClick={props.toggleSidebar} class=\"btn btn-dark\">\r\n                <i class=\"fas fa-align-left\"></i>\r\n            </button>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link href=\"#\">{auth.username}</Nav.Link>\r\n                    <Nav.Link eventKey={2} onClick={logout}>\r\n                        Logout\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport InnerHeader from './InnerHeader';\r\nimport Footer from './Footer';\r\nimport Leftbar from './Leftbar';\r\nimport TopNav from './TopNav';\r\nimport { useHistory } from 'react-router';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst InnerLayout = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const [showSidebar, setshowSidebar] = useState(true)\r\n    useEffect(() => {\r\n        setshowSidebar(window.innerWidth <= 768 ? false : true);\r\n        checkLogin();\r\n    }, [Component]);\r\n    const toggleSidebar = () => {\r\n\r\n        console.log(window);\r\n        setshowSidebar(showSidebar ? false : true)\r\n        // this.setState({\r\n        //   isopen:this.state.isopen?false:true\r\n        // })\r\n    }\r\n    const checkLogin = () =>{\r\n        let jwt = \"\";\r\n         jwt = localStorage.getItem(\"jwt\");\r\n         console.log(jwt);\r\n         if(jwt==\"\" || !auth.hasOwnProperty(\"username\")){\r\n             history.push(\"/login\");\r\n         }\r\n    }\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <>\r\n            \r\n            <Container fluid className=\"pl-0 pr-0\">\r\n            <Row>\r\n                <Col>\r\n                <TopNav toggleSidebar={toggleSidebar} />\r\n                </Col>\r\n            \r\n            </Row>\r\n                \r\n                <Row>\r\n                    \r\n                        {showSidebar ?<Col md={2} sm={2} id=\"sidebar-col\" className=\"bg-info\"><Leftbar/></Col> : \"\"}\r\n                        \r\n                   \r\n                    <Col sm={showSidebar ? 10 : 12} >\r\n                        <div id=\"content\">\r\n\r\n                            <Component {...props} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* <Footer /> */}\r\n                </Container>\r\n            </>\r\n        )} />)\r\n}\r\n\r\nexport default InnerLayout\r\n","import React ,{Component}from 'react'\r\nimport { Badge } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    ADD_ITEM_INITIAL,\r\n    DECREASE_QUANTITY,\r\n    INCREASE_QUANTITY\r\n} from '../../constants/actionTypes';\r\n \r\nclass AddCartButton extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(props);\r\n        this.initialAddItem = (item) => ev => {\r\n            ev.preventDefault();\r\n            this.props.addItemInitial(item);\r\n        };\r\n        this.increaseQuantity = (productId) =>ev =>{\r\n            ev.preventDefault();\r\n            this.props.increaseQuantity(productId);\r\n        }\r\n        this.decreaseQuantity = (productId) =>ev =>{\r\n            ev.preventDefault();\r\n            this.props.decreaseQuantity(productId);\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops){\r\n    }\r\n    render(){\r\n    let arr = []\r\n     arr= this.props.addedItem.filter(record=>record.productId==this.props.item._id);\r\n    let length = arr.length;\r\n    console.log(length);\r\n    console.log(this.props.addedItem);\r\n    if(!length){\r\n        return (\r\n            <Badge variant=\"danger\" className=\"pointer\" onClick={this.initialAddItem(this.props.item)}>ADD+</Badge> \r\n        )\r\n    }else{\r\n        return (\r\n            <>\r\n                <Badge className=\"pointer\" variant=\"primary\" onClick={this.decreaseQuantity(arr[0].productId)}>-</Badge> \r\n                <Badge variant=\"danger\">{arr[0].quantity}</Badge> \r\n                <Badge className=\"pointer\" variant=\"primary\" onClick={this.increaseQuantity(arr[0].productId)}>+</Badge> \r\n            </>\r\n        )}\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.order });\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItemInitial: item =>\r\n        dispatch({ type: ADD_ITEM_INITIAL, item }),\r\n    increaseQuantity: productId =>\r\n        dispatch({ type: INCREASE_QUANTITY, productId }),\r\n    decreaseQuantity: productId =>\r\n        dispatch({ type: DECREASE_QUANTITY, productId }),\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddCartButton)\r\n","import React, { Component } from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport AddCartButton from './AddCartButton';\r\nimport Loader from '../layout/Loader';\r\nexport class CategoryList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categoryList:[],\r\n            itemList:[],\r\n            showloader:false,\r\n            selectedTab:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n     // this.getCategories();\r\n     //this.getInitialData();\r\n    }\r\n    selectItem(ev){\r\n        console.log(ev);\r\n    }\r\n     getInitialData=async ()=>{\r\n        this.setState({\r\n            showloader:true\r\n        })\r\n\r\n        const [categories, products] =await Promise.all(agent.Order.getCatgoryInitialData())\r\n        if(categories.statusCode == 200){\r\n            this.setState({\r\n                categoryList:categories.body.record\r\n            })\r\n        }\r\n        if(products.statusCode == 200){\r\n            this.setState({\r\n                itemList:products.body.record\r\n            })\r\n        }\r\n        this.setState({\r\n            showloader:false\r\n        })\r\n\r\n\r\n    }\r\n    changeCategory= (catName=\"\") => ev =>{\r\n        this.setState({\r\n            showloader:true\r\n        })\r\n        this.setState({\r\n            selectedTab:catName\r\n        })\r\n        agent.Order.getProductsByCat(catName).then(products=>{\r\n            this.setState({\r\n                showloader:false\r\n            })\r\n    \r\n            if(products.statusCode == 200){\r\n                this.setState({\r\n                    itemList:products.body.record\r\n                })\r\n            }\r\n    \r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col  md={3} className=\"p-4\" >\r\n                            <ListGroup defaultActiveKey=\"all\">\r\n                            <ListGroup.Item className=\"mobile-list\" key={\"all\"} active={this.state.selectedTab==\"\"?true:false}  onClick={this.changeCategory()}>All category</ListGroup.Item>\r\n                                {this.state.categoryList.map(\r\n                                    (item,index)=><ListGroup.Item className=\"mobile-list\" key={index} active={this.state.selectedTab==item.name?true:false}  action onClick={this.changeCategory(item.name)}>{item.name}</ListGroup.Item>\r\n                                    )}\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={9} className=\"p-4 production-col\" >\r\n                        <Loader show={this.state.showloader}/>\r\n                            <CardColumns>\r\n                            {this.state.itemList.map(\r\n                                (item,index)=> \r\n                                <Card border=\"danger\" key={index}>\r\n                                    <Card.Img variant=\"top\" src={item.imageUrl} />\r\n                                    <Card.Body>\r\n                                        <Card.Title>{item.title}</Card.Title>\r\n                                        <Card.Subtitle className=\"mb-2 text-muted\"><span>&#8377;</span>{item.price}</Card.Subtitle>\r\n                                        <Card.Text>\r\n                                        {item.description}\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                    <Card.Footer>\r\n                                        <AddCartButton  item={item}/>\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                                    )}\r\n\r\n                            </CardColumns>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CategoryList\r\n","import React, {Component} from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport AddCartButton from './AddCartButton'\r\nclass MyCart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        const priceTotal = this.props.addedItem.reduce(\r\n            (prevValue, currentValue) => prevValue + (currentValue.quantity * parseInt(currentValue.perItemPrice)),\r\n            0\r\n          );\r\n        \r\n        return (\r\n            <Table responsive striped bordered className=\"cart-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product</th>\r\n                        <th>Quantity</th>\r\n                        <th>Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.addedItem.map(record=>\r\n                    <tr>\r\n                        <td>{record.item.title}</td>\r\n                        <td><AddCartButton  item={record.item}/></td>\r\n                        <td><span>&#8377;</span>{parseInt(record.perItemPrice)*record.quantity}</td>\r\n                    </tr>\r\n                    \r\n                    )}\r\n                </tbody>\r\n                <tfoot>\r\n                    {/* <tr>\r\n                        <td colSpan=\"2\">\r\n                            Prime member discount\r\n                        </td>\r\n                        <td>\r\n                            10%\r\n                        </td>\r\n    \r\n                    </tr> */}\r\n                    <tr>\r\n                        <td colSpan=\"2\">\r\n                            <h5>Total</h5>\r\n                        </td>\r\n                        <td>\r\n                        <span>&#8377;</span> {priceTotal}\r\n                        </td>\r\n    \r\n                    </tr>\r\n                </tfoot>\r\n            </Table>)\r\n    \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.order });\r\nconst mapDispatchToProps = dispatch => ({\r\n    // addItemInitial: item =>\r\n    //     dispatch({ type: ADD_ITEM_INITIAL, item }),\r\n    // increaseQuantity: productId =>\r\n    //     dispatch({ type: INCREASE_QUANTITY, productId }),\r\n    // decreaseQuantity: productId =>\r\n    //     dispatch({ type: DECREASE_QUANTITY, productId }),\r\n});\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MyCart)\r\n","import React,{useState} from 'react'\r\nimport { Table, Container, Row, Col,Form, Button, Modal} from 'react-bootstrap';\r\nimport { useSelector } from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport agent from '../../agent'\r\n// import {KEY_ID,KEY_SECRET} from '../../constants/paymantConstants'\r\n//import Razorpay from 'razorpay';\r\nfunction PlaceOrder(props) {\r\n    const order = useSelector(state => state.order);\r\n    const authState = useSelector(state => state.auth);\r\n    const [shipingDetails, setShipingDetails] = useState([]);\r\n    const [showPayementModel, setshowPayementModel] = useState(false);\r\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\r\n    const [isnameinvalid,setisnameinvalid] = useState(false);\r\n    const [isaddressinvalid,setisaddressinvalid] = useState(false);\r\n\r\n    let totalQuantity = 0;\r\n    let totalPrice = 0;\r\n\r\n    const products = order.addedItem.map(record=>                        \r\n    <tr>\r\n        <td>\r\n        {record.quantity} x {record.item.title}\r\n        </td>\r\n        <td>\r\n        <span>&#8377;</span> {record.quantity*parseInt(record. perItemPrice)}\r\n        </td>\r\n    </tr>\r\n);\r\nconst handleSubmit=(paymentMode=\"COD\", razorpay_order_id=\"\")=>{\r\n    let shippingObj = {\r\n        name:shipingDetails[\"name\"],\r\n        address:shipingDetails[\"address\"],\r\n        phone:shipingDetails[\"phone\"],\r\n        city:\"barh\",\r\n        street:shipingDetails[\"street\"],\r\n        landmark:shipingDetails[\"landmark\"]\r\n    } \r\n    let data = {\r\n        items:order.addedItem, \r\n        shipping:shippingObj,\r\n        paymentMode:paymentMode,\r\n        razorpay_order_id:razorpay_order_id\r\n    };\r\n    agent.Order.placeOrder(data).then((res=>{\r\n        if(res.statusCode == 200){\r\n            props.history.push('/orderSuccess')\r\n        }\r\n    }),(err)=>{\r\n        alert(err.response.body.message);\r\n    });\r\n\r\n}\r\nconst selectPaymentMode = ()=>{\r\n    if(checkValidate()){\r\n        setshowPayementModel(showPayementModel?false:true);\r\n    }\r\n}\r\nconst handleChange = (e) => {\r\n    shipingDetails[e.target.name] = e.target.value;\r\n    setShipingDetails(shipingDetails);\r\n}\r\n\r\norder.addedItem.forEach(element => {\r\n    totalQuantity += element.quantity;\r\n    totalPrice += parseInt(element.quantity)*element.perItemPrice;\r\n});\r\nif(authState?.errors?.body.record.isPrimeMember){\r\n    totalPrice -= ((totalPrice*10)/100)\r\n}\r\nconst onlinePayment = ()=>{\r\n    agent.Payment.getRazorpayOrderId({amount:totalPrice,orderForService:\"Food Order\"}).then((res=>{\r\n        if(res.statusCode == 200){\r\n            console.log(res);\r\n            var options = {\r\n                \"key\": \"123\", // Enter the Key ID generated from the Dashboard\r\n                \"amount\": res.body.record.amount*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n                \"currency\": \"INR\",\r\n                \"name\": \"Guest\",\r\n                \"description\": \"Food Order Transaction\",\r\n                \"image\": \"https://example.com/your_logo\",\r\n                \"order_id\": res.body.record.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n                \"handler\": function (response){\r\n                    updatePaymentState(\"success\",response);\r\n                },                \r\n                \"theme\": {\r\n                    \"color\": \"#3399cc\"\r\n                }\r\n            };   \r\n            const rzp1 = new window.Razorpay(options);\r\n            rzp1.on('payment.failed', function (response){\r\n                updatePaymentState(\"failed\",response);\r\n\r\n            });            \r\n            rzp1.open();\r\n\r\n        }else{\r\n            alert(res.body)\r\n        }\r\n    }));\r\n\r\n}\r\nconst updatePaymentState=(status,obj)=>{\r\n    console.log(\"status\",status);\r\n    console.log(\"returnobj\",obj);\r\n    let orderId = \"\";\r\n    let paymentObj = {\r\n        razorpay_order_id:\"\",\r\n        paymentStatus:\"\",\r\n        paymentResponse:\"\"\r\n    }\r\n    if(status == \"success\"){\r\n        paymentObj.razorpay_order_id = obj.razorpay_order_id;\r\n        paymentObj.paymentStatus = status;\r\n        paymentObj.paymentResponse = obj;\r\n    }\r\n    if(status == \"failed\"){\r\n        paymentObj.razorpay_order_id = obj.error.metadata.order_id;\r\n        paymentObj.paymentStatus = status;\r\n        paymentObj.paymentResponse = obj;\r\n    }\r\n    try{\r\n        agent.Payment.updatePaymentStatus(paymentObj).then((res=>{\r\n            console.log(res.body.record)\r\n            if(res.statusCode ==200 && status == \"success\"){\r\n                handleSubmit(\"online\",paymentObj.razorpay_order_id);\r\n            }\r\n            if(res.statusCode ==200 && status == \"failed\"){\r\n                props.history.push('/orderFailed')\r\n\r\n            }\r\n\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });\r\n    }catch(err){\r\n        alert(err);\r\n    }\r\n}\r\nconst checkValidate=()=>{\r\n    let returnType = true;\r\n    setisnameinvalid(false);\r\n    setisaddressinvalid(false);\r\n    setisphoneinvalid(false);\r\n\r\n    if((shipingDetails[\"name\"] ==undefined || shipingDetails[\"name\"] ==\"\")){\r\n        setisnameinvalid(true);            \r\n        returnType = false\r\n    } \r\n\r\n    if(shipingDetails[\"phone\"] ==undefined || shipingDetails[\"phone\"] ==\"\"){\r\n        setisphoneinvalid(true);\r\n        returnType = false\r\n    }\r\n    if((shipingDetails[\"address\"] ==undefined || shipingDetails[\"address\"] ==\"\") ){\r\n        setisaddressinvalid(true);            \r\n        returnType = false\r\n    } \r\n    return returnType;\r\n} \r\n\r\nconst token = agent.getToken();\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n            <Row className=\"p-3 order-summary\">\r\n                <Col md={6} >\r\n                    <h4>Shipping Details</h4>\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"name\"  onChange={handleChange} isInvalid={isnameinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your name.\r\n                            </Form.Control.Feedback>                    \r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"address\" placeholder=\"Line 1\" onChange={handleChange} isInvalid={isaddressinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your address.\r\n                            </Form.Control.Feedback>                    \r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Street/Mohalla</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"street\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Landmark</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"landmark\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Mobile no.</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"phone\"  onChange={handleChange} isInvalid={isphoneinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your phone no..\r\n                            </Form.Control.Feedback>                    \r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control type=\"text\"  name=\"city\" onChange={handleChange} value=\"barh\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <Button variant=\"danger\" type=\"button\"  onClick={(ev)=>selectPaymentMode()}>\r\n                            Place Order\r\n                        </Button>\r\n                            {/* {token==null?<Form.Label>Please <Link to=\"/login\" className=\"underline\">login</Link> for place order </Form.Label>:\"\"} */}\r\n                            \r\n                        </Form.Group>\r\n                    </Form>               \r\n                     </Col>\r\n                <Col md={6} >\r\n                    <p>Order Summary</p>\r\n                    <h5>You have {totalQuantity} items in your food cart</h5>\r\n                    <Table borderless>\r\n                        <tbody className=\"order-summary-border\">\r\n                            {products}\r\n                        </tbody>\r\n                        <tfoot >\r\n                            {authState?.errors?.body.record.isPrimeMember?                            <tr>\r\n                                <td>\r\n                                    <b>Prime member discount</b>\r\n                                </td>\r\n                                <td>\r\n                                    10%\r\n                                </td>\r\n                            </tr>:\"\"}\r\n                            <tr>\r\n                                <td>\r\n                                    <b>Total</b>\r\n                                </td>\r\n                                <td>\r\n                                <span>&#8377;</span> {totalPrice}\r\n                                </td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        <Modal show={showPayementModel} onHide={selectPaymentMode} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Payment Mode</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Button variant=\"success\" onClick={()=>handleSubmit()}>Cash on Delivery</Button>\r\n            <Button variant=\"primary\"onClick={onlinePayment}>Pay Now</Button>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrder\r\n","import React from 'react'\r\nimport { Alert, Button} from 'react-bootstrap';\r\nimport {useDispatch } from \"react-redux\";\r\nimport orderR from '../../reducers/order';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {\r\n    RESET_ORDER\r\n} from '../../constants/actionTypes';\r\n\r\nfunction OrderSuccess() {\r\n    // const [show, setShow] = useState(true);\r\n    const dispatch = useDispatch();\r\n    dispatch({type:RESET_ORDER})\r\n    return (\r\n      <>\r\n        <Alert show={true} className=\"login-div\">\r\n          <Alert.Heading>Success!</Alert.Heading>\r\n          <p>\r\n         Our representative will call you for order confirmation within 2 minutes. If you not get a call please dial <b>9990708074</b>.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n              <Link to=\"/\">\r\n              <Button variant=\"danger\">\r\n              Ok\r\n            </Button>\r\n\r\n              </Link>\r\n          </div>\r\n        </Alert>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OrderSuccess\r\n","import React,{useState,useEffect, useMemo} from 'react'\r\nimport { Table, Nav, Button, Modal } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport {Link} from 'react-router-dom';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\nfunction CategoryManagement(props) {\r\n      const initialState = {\r\n          categoryList:[]\r\n      }\r\n      const [state, setstate] = useState([]) \r\n      const [show, setShow] = useState(false);\r\n      const [alert, setalert] = useState({heading:\"\",message:\"\",data:{}});\r\n        const handleClose = (action) => {\r\n            if(action==\"yes\"){\r\n                props.showLoader(true);\r\n                agent.Order.deleteCategory(alert.data.name).then((res=>{\r\n                    props.showLoader(false);\r\n                    console.log(res);\r\n                    if(res.statusCode == 200){\r\n                        getCategories()\r\n                    }else{\r\n                    }\r\n                }));\r\n        \r\n            }\r\n            setShow(false)\r\n        };\r\n      const handleShow = () => setShow(true);\r\n    \r\n      useEffect(() => {\r\n        if(props.selectedTab==\"categories\"){\r\n            getCategories()\r\n        }\r\n    },[props.selectedTab])\r\n\r\n    const getCategories =()=>{\r\n        console.log(\"category run\")\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res=>{\r\n            props.showLoader(false);\r\n            if(res.statusCode == 200){\r\n                setstate(res.body.record);\r\n            }else{\r\n                setstate([]);\r\n            }\r\n        }));\r\n    }\r\n    const deleteCategory = (data)=>{\r\n        console.log(data);\r\n        setalert({\r\n            heading:`Delete Category: ${data.name}`,\r\n            message:`Are you sure you want to delete category: ${data.name}`,\r\n            data:data\r\n        })\r\n        handleShow();    \r\n    }\r\n    const data = useMemo(\r\n        () => \r\n            state.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.name,\r\n                col3:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [state]\r\n      )   \r\n      const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Name',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col3',\r\n          },\r\n\r\n        ],\r\n        []\r\n      )    \r\n      \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n    if(props.selectedTab == \"categories\"){\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={()=>props.changeTab(\"addCategory\")} variant=\"danger\">Add Category</Button>\r\n                <Table {...getTableProps()} responsive>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                            >\r\n                                {column.render('Header')}\r\n                                <span>\r\n                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                </span>\r\n\r\n                            </th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col3\"){\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }else{\r\n                                    return (\r\n                                        <td>\r\n                                        <span onClick={()=>deleteCategory(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </td>\r\n        \r\n                                    )\r\n                                }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n    <div>\r\n     <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n        Previous Page\r\n      </button>\r\n       <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n         Next Page\r\n       </button>\r\n       <div>\r\n         Page{' '}\r\n         <em>\r\n           {pageIndex + 1} of {pageOptions.length}\r\n         </em>\r\n       </div>\r\n     </div>                                              \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{alert.heading}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{alert.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\r\n                        Cancel\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal> \r\n            </>)\r\n    \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default CategoryManagement\r\n","import React, { useEffect, useState } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\n\r\nfunction OrderHistory(props) {\r\n    //let active = 0;\r\n    let items = [];\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"orders\"){\r\n            getOrders()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const [orderHistory, setorderHistory] = useState([])\r\n    const [selectedorder, setselectedorder] = useState([]);\r\n    const [totalPage, settotalPage] = useState(0);\r\n    const [isopenpopup, setisopenpopup] = useState(false);\r\n    const [selectedPage,setselectedPage] = useState(0);\r\n    const handleClose = () => setisopenpopup(false);\r\n    for (let number = 0; number <= totalPage; number++) {\r\n        if(totalPage >0){\r\n            items.push(\r\n                <Pagination.Item onClick={() => changePage(number)} key={number} active={number == selectedPage}>\r\n                  {number+1}\r\n                </Pagination.Item>,\r\n              );\r\n        }\r\n      }         \r\n      const paginationBasic = (\r\n        <div>\r\n          <Pagination>{items}</Pagination>\r\n        </div>\r\n      ); \r\n\r\n    const viewOrderPopUp = (record) => {\r\n        setselectedorder(record);\r\n        setisopenpopup(true);\r\n    }\r\n    let history = useHistory();\r\n    const getOrders = (page=0) => {\r\n        props.showLoader(true);\r\n        agent.Order.getOrdersHistoryAdmin(page).then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record)\r\n            setorderHistory(res.body.record);\r\n            let totalRecord = res.body.totalOrders;\r\n            let totalPage = parseInt(res.body.totalOrders)/10;\r\n            console.log(\"totalPage\",totalPage);\r\n            settotalPage(totalPage);\r\n        }), (err) => {\r\n            console.log(err.response.body.message);\r\n            if (err.response.body.message == \"jwt must be provided\") {\r\n                console.log(\"login required\");\r\n                history.push(\"/login\");\r\n            }\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const changePage=(number) =>{\r\n        console.log(\"page\",number);\r\n        setselectedPage(number);\r\n        getOrders(number);\r\n    }\r\n    if (props.selectedTab == \"orders\") {\r\n        return (\r\n            <>\r\n                <Table responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Customer</th>\r\n                            <th>Date</th>\r\n                            <th>Details</th>\r\n                            <th>Number</th>\r\n                            <th>Action</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orderHistory.map((record, index) =>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{record.shipping.name}</td>\r\n                                <td>{record.datePlaced}</td>\r\n                                <td>{record.items.map(itm => <span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                                <td>{record.shipping.phone}</td>\r\n\r\n                                <td>\r\n                                    <Button type=\"button\" onClick={() => viewOrderPopUp(record)}>View</Button>\r\n                                </td>\r\n                            </tr>\r\n\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n                {paginationBasic}\r\n                <Modal show={isopenpopup} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Order Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"6\"><h4>Shipping Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                                    <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                                    <td><b>Street:</b> {selectedorder?.shipping?.street}</td>\r\n                                    <td><b>Landmark:</b> {selectedorder?.shipping?.landmark}</td>\r\n\r\n                                    <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                                    <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                            <tbody>{selectedorder?.items?.map(itm => <tr>\r\n                                <td><b>Title:</b> {itm.item.title}</td>\r\n                                <td><b>Description:</b> {itm.item.description}</td>\r\n                                <td><b>Quantity:</b> {itm.quantity}</td>\r\n                                <td><b>Total Price:</b> {parseInt(itm.quantity) * itm.perItemPrice}</td>\r\n                            </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Payment Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Payment Mode: </b>{selectedorder.paymentMode}</td>\r\n                                    <td><b>Razorpay Order id: </b>{selectedorder.razorpay_order_id}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n\r\n\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                {selectedorder.isDiscountApplied ? <tr>\r\n                                    <td>\r\n                                        <b>\r\n                                            Prime Member Discount:\r\n                                </b>\r\n                                    </td>\r\n                                    <td>10%</td>\r\n                                </tr> : \"\"}\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Total Bill Amount</b>\r\n                                    </td>\r\n                                    <td>{selectedorder.totalBillAmount}</td>\r\n                                </tr>\r\n                            </tbody>\r\n\r\n                        </Table>\r\n\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            </>\r\n        )\r\n\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default OrderHistory\r\n","import React,{useState} from 'react'\r\nimport { Button,Form, Col} from 'react-bootstrap';\r\nimport agent from '../../agent'\r\n\r\nfunction AddCategory(props) {\r\n    const [state, setstate] = useState(\"\")\r\n    const handleSubmit=(ev) =>{\r\n        props.showLoader(false);\r\n        agent.Order.addCategory({name:state}).then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                console.log(props);\r\n                props.changeTab(\"categories\");\r\n            }else{\r\n                //setstate([]);\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n    const handleChange = (e) => {\r\n        setstate(e.target.value);\r\n    }    \r\n    if (props.selectedTab == \"addCategory\") {\r\n\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                <Form.Group as={Col} md=\"4\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Category Name:</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"\" onChange={handleChange}/>\r\n                </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                </Button>\r\n            </Form>\r\n            )\r\n\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default AddCategory\r\n","import React,{useState,useEffect, useMemo} from 'react'\r\nimport { Table, Nav, Pagination, Button, Modal, Image } from 'react-bootstrap';\r\nimport agent from '../../../agent'\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch } from \"react-redux\";\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\n\r\nimport {\r\n    STORE_EDIT_PRODUCT\r\n} from '../../../constants/actionTypes';\r\n\r\nfunction ProductManagement(props) {\r\n    \r\n    useEffect(() => {\r\n        if(props.selectedTab==\"products\"){\r\n            getProducts()\r\n        }\r\n    },[props.selectedTab])\r\n\r\n    const [state, setstate] = useState([]) \r\n    const [show, setShow] = useState(false);\r\n    const [alert, setalert] = useState({heading:\"\",message:\"\",data:{}});\r\n    const dispatch = useDispatch()\r\n    \r\n    const getProducts =()=>{\r\n        props.showLoader(true);\r\n        agent.Order.getProducts().then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                setstate(res.body.record);\r\n            }else{\r\n                setstate([]);\r\n            }\r\n        }));\r\n    }\r\n    const handleClose = (action) => {\r\n        if(action==\"yes\"){\r\n            props.showLoader(true);\r\n            agent.Order.deleteProduct(alert.data.title).then((res=>{\r\n                props.showLoader(false);\r\n                if(res.statusCode == 200){\r\n                    getProducts()\r\n                }else{\r\n                }\r\n            }));\r\n    \r\n        }\r\n        setShow(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n    const deleteProduct = (data)=>{\r\n        console.log(data);\r\n        setalert({\r\n            heading:`Delete Product: ${data.title}`,\r\n            message:`Are you sure you want to delete Product: ${data.title}`,\r\n            data:data\r\n        })\r\n        handleShow();    \r\n    }\r\n    const editProduct = (data)=>{\r\n        dispatch({type:STORE_EDIT_PRODUCT,data})\r\n        props.changeTab(\"editProduct\")\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Image',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Title',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Description',\r\n            accessor: 'col4',\r\n          },\r\n          {\r\n            Header: 'Price',\r\n            accessor: 'col5',\r\n          },\r\n          {\r\n            Header: 'Category',\r\n            accessor: 'col6',\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col7',\r\n          },\r\n\r\n        ],\r\n        []\r\n    )    \r\n\r\n    const data = useMemo(\r\n        () => \r\n            state.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.imageUrl,\r\n                col3:record.title,\r\n                col4:record.description,\r\n                col5:record.price,\r\n                col6:record.category,\r\n                col7:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [state]\r\n      )  \r\n\r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n\r\n    if(props.selectedTab == \"products\"){\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={()=>props.changeTab(\"addProduct\")} variant=\"danger\">Add Product</Button>\r\n                <Table {...getTableProps()} responsive>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                            >\r\n                                {column.render('Header')}\r\n                                <span>\r\n                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                </span>\r\n\r\n                            </th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id ==\"col2\"){\r\n                                    return(<td>{cell.value !=\"\"?<Image src={cell.value} className=\"product-image\" thumbnail />:\"No Image\"}</td>)\r\n                                }                                \r\n                                if(cell.column.id !=\"col7\"){\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }else{\r\n                                    return (\r\n                                        <td>\r\n                                        <span onClick={()=>deleteProduct(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                        <span className=\"ml-2\" onClick={()=>editProduct(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </td>\r\n        \r\n                                    )\r\n                                }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n                <div>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                </div>                                              \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{alert.heading}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{alert.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\r\n                        Cancel\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>               \r\n            </>)\r\n    \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default ProductManagement\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Button, Form, Col } from 'react-bootstrap';\r\nimport agent from '../../../agent';\r\n\r\nfunction AddProduct(props) {\r\n    const [category, setcategory] = useState([])\r\n    const [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"addProduct\"){\r\n            getCategories()\r\n        }\r\n    },[props.selectedTab])\r\n    const getCategories =()=>{\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                //setstate(res.body.record);\r\n                setcategory(res.body.record)\r\n            }else{\r\n                //setstate([]);\r\n                setcategory([])\r\n            }\r\n        }));\r\n    }\r\n    const handleChange = (e) => {\r\n\r\n        //const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n        \r\n    }\r\n\r\n    const handleSubmit=(ev) =>{\r\n        props.showLoader(false);\r\n        console.log(state);\r\n        agent.Order.addProducts(state).then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                //console.log(props);\r\n                props.changeTab(\"products\");\r\n            }else{\r\n                //setstate([]);\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n\r\n    if (props.selectedTab == \"addProduct\") {\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>Select Category</Form.Label>\r\n                <Form.Control as=\"select\" name=\"category\" onChange={handleChange} required>\r\n                <option key={\"\"}>Select Category</option>\r\n                    {category.map(item=><option key={item.name}>{item.name}</option>)}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control type=\"text\"  name=\"title\" onChange={handleChange} required/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} name=\"description\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control type=\"number\" name=\"price\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>ImageURL</Form.Label>\r\n                <Form.Control type=\"text\"  name=\"imageURL\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n            </Button>    \r\n            </Form>   \r\n         )\r\n        \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default AddProduct\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport agent from '../../../agent';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {\r\n    UPDATE_PRODUCT_FIELD\r\n} from '../../../constants/actionTypes';\r\n\r\nfunction EditProduct(props) {\r\n    const storeProduct = useSelector(state => state.product);\r\n\r\n    const [category, setcategory] = useState([])\r\n    const [state, setState] = useState({})\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (props.selectedTab == \"editProduct\") {\r\n            getCategories()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getCategories = () => {\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res => {\r\n            props.showLoader(false);\r\n\r\n            if (res.statusCode == 200) {\r\n                setcategory(res.body.record)\r\n            } else {\r\n                setcategory([])\r\n            }\r\n        }));\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let data = {key:e.target.name,value:e.target.value}\r\n        dispatch({type:UPDATE_PRODUCT_FIELD,data});\r\n    }\r\n\r\n    const handleSubmit = (ev) => {\r\n        console.log(storeProduct);\r\n        props.showLoader(false);\r\n        agent.Order.editProducts(storeProduct.product).then((res => {\r\n            props.showLoader(false);\r\n            if (res.statusCode == 200) {\r\n                props.changeTab(\"products\");\r\n            } else {\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n\r\n    if (props.selectedTab == \"editProduct\") {\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Select Category</Form.Label>\r\n                        <Form.Control as=\"select\" value={storeProduct.product?.category} name=\"category\" onChange={handleChange} required>\r\n                            <option key={\"\"}>Select Category</option>\r\n                            {category.map(item => <option key={item.name}>{item.name}</option>)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" value={storeProduct.product?.title} name=\"title\" onChange={handleChange} required />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" value={storeProduct.product?.description} rows={3} name=\"description\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"number\" value={storeProduct.product?.price} name=\"price\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlInput5\">\r\n                        <Form.Label>ImageURL</Form.Label>\r\n                        <Form.Control type=\"text\" value={storeProduct.product?.imageUrl} name=\"imageUrl\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n            </Button>\r\n            </Form>\r\n        )\r\n\r\n    } else {\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport default EditProduct\r\n","import React, { useEffect, useState,useMemo } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\n\r\nfunction FinanceRequests(props) {\r\n    const [ITRrequests, setITRrequests] = useState([])\r\n    const [isopenpopup, setisopenpopup] = useState(false);\r\n    const [selectedorder, setselectedorder] = useState([]);\r\n\r\n    const handleClose = () => setisopenpopup(false);\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"finance\"){\r\n            getITRrequests()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getITRrequests = () => {\r\n        props.showLoader(true);\r\n        agent.Finance.getAdminItr().then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record);\r\n            setITRrequests(res.body.record);\r\n        }), (err) => {\r\n            // if (err.response.body.message == \"jwt must be provided\") {\r\n            //     console.log(\"login required\");\r\n            //     history.push(\"/login\");\r\n            // }\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'FirstName',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'LastName',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Phone',\r\n            accessor: 'col4',\r\n          },\r\n          {\r\n            Header: 'Email',\r\n            accessor: 'col5',\r\n          },\r\n          // {\r\n          //   Header: 'Address',\r\n          //   accessor: 'col6',\r\n          // },\r\n          // {\r\n          //   Header: 'Aadhar',\r\n          //   accessor: 'col7',\r\n          // },\r\n          // {\r\n          //   Header: 'Business',\r\n          //   accessor: 'col8',\r\n          // },\r\n          // {\r\n          //   Header: 'Zip',\r\n          //   accessor: 'col9',\r\n          // },\r\n          // {\r\n          //   Header: 'Service',\r\n          //   accessor: 'col10',\r\n          // },\r\n          {\r\n            Header:'Action',\r\n            accessor: 'col6'\r\n          }\r\n        ],\r\n        []\r\n    )    \r\n    const data = useMemo(\r\n        () => \r\n        ITRrequests.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.firstName,\r\n                col3:record.lastName,\r\n                col4:record.phone,\r\n                col5:record.email,\r\n                col6:record\r\n                // col6:record.address,\r\n                // col7:record.aadhar,\r\n                // col8:record.business,\r\n                // col9:record.zip,\r\n                // col10:record.service\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [ITRrequests]\r\n      )  \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n    const viewOrderPopUp = (record) => {\r\n        setselectedorder(record);\r\n        setisopenpopup(true);\r\n    }\r\n\r\n    if (props.selectedTab == \"finance\") {\r\n    return (\r\n        <>\r\n        <Table {...getTableProps()} responsive>\r\n        <thead>\r\n            {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                <th\r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                >\r\n                    {column.render('Header')}\r\n                    <span>\r\n                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                    </span>\r\n\r\n                </th>\r\n                ))}\r\n            </tr>\r\n            ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n            {page.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n                <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                                if(cell.column.id ==\"col6\"){\r\n                                  return(\r\n                                  <td>\r\n                                    <Button type=\"button\" onClick={() => viewOrderPopUp(cell.value)}>View</Button>\r\n                                    </td>\r\n                                  )\r\n                              } else{\r\n                                return (\r\n                                  <td {...cell.getCellProps()}>\r\n                                      {cell.render('Cell')}\r\n                                  </td>\r\n                                  )\r\n          \r\n                              }                               \r\n\r\n                })}\r\n                </tr>\r\n            )\r\n            })}\r\n        </tbody>\r\n    </Table>\r\n                <div>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                </div> \r\n                <Modal show={isopenpopup} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>User Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>First Name: </b></td>\r\n                                    <td>{selectedorder.firstName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Last Name: </b></td>\r\n                                    <td>{selectedorder.lastName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Phone: </b></td>\r\n                                    <td>{selectedorder.phone}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Email: </b></td>\r\n                                    <td>{selectedorder.email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Address: </b></td>\r\n                                    <td>{selectedorder.address}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Aadhar: </b></td>\r\n                                    <td>{selectedorder.aadhar}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Business: </b></td>\r\n                                    <td>{selectedorder.business}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Zip: </b></td>\r\n                                    <td>{selectedorder.zip}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Service: </b></td>\r\n                                    <td>{selectedorder.service}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Razorpay order id: </b></td>\r\n                                    <td>{selectedorder.razorpay_order_id}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                </>    \r\n                                                       \r\n\r\n)\r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default FinanceRequests\r\n","import React, { useEffect, useState,useMemo } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Form16Requests(props) {\r\n    const [form16requests, setform16requests] = useState([])\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"form16\"){\r\n            getForm16requests()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getForm16requests = () => {\r\n        props.showLoader(true);\r\n        agent.Finance.getAdminForm16().then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record);\r\n            setform16requests(res.body.record);\r\n        }), (err) => {\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const downloadForm16=(filepath=\"\")=>{\r\n        console.log(filepath);\r\n        let filePathArr = filepath.split(\"/\");\r\n        let fileName = filePathArr[filePathArr.length -1];\r\n        console.log(fileName);\r\n        agent.Finance.downloadForm16({fileName:fileName}).then(res => {\r\n            console.log(res);\r\n\r\n        });\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Phone',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Form16',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Razorpay Order Id',\r\n            accessor: 'col4',\r\n          }\r\n\r\n\r\n        ],\r\n        []\r\n    )    \r\n    const data = useMemo(\r\n        () => \r\n        form16requests.map((record,index)=>\r\n                { \r\n                    let filePathArr = record.filePath.split(\"/\");\r\n                    let fileName = filePathArr[filePathArr.length -1];\r\n                return {col1:index+1,\r\n                col2:record.phone,\r\n                col3:fileName,\r\n                col4:record.razorpay_order_id,\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [form16requests]\r\n      )  \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n\r\n    if(props.selectedTab == \"form16\"){\r\n        return (\r\n            <>\r\n            <Table {...getTableProps()} responsive>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {headerGroup.headers.map(column => (\r\n                    <th\r\n                        {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                    >\r\n                        {column.render('Header')}\r\n                        <span>\r\n                        {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                        </span>\r\n    \r\n                    </th>\r\n                    ))}\r\n                </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {page.map(row => {\r\n                prepareRow(row)\r\n                return (\r\n                    <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                                if(cell.column.id ==\"col3\"){\r\n                                    return(<td>\r\n                                        {/* <a target={\"_blank\"}  href = \"http://localhost:3000/api/download?fileName=16057165121892019-08-30-12-14-11-448_1567147451448_XXXPK9512X_Acknowledgement.pdf\">Download</a> */}\r\n                                        <Link className=\"btn btn-danger\" target={\"_blank\"} to={`/api/download?fileName=${cell.value}`}>Download</Link>\r\n                                        {/* <Button type=\"button\" onClick={()=>downloadForm16(cell.value)} variant=\"danger\"> Download</Button>  */}\r\n                                         </td>)\r\n                                }else{\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }                                \r\n\r\n                    })}\r\n                    </tr>\r\n                )\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n                    <div>\r\n                    <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                        Previous Page\r\n                    </button>\r\n                    <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                        Next Page\r\n                    </button>\r\n                    <div>\r\n                        Page{' '}\r\n                        <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                        </em>\r\n                    </div>\r\n                    </div>   \r\n                    </>                                           \r\n    \r\n            )\r\n        }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default Form16Requests\r\n","import React,{useState,useEffect} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../layout/Loader';\r\nimport OrderHistory from '../Admin/orders/OrderHistory';\r\nimport AddCategory from '../Admin/AddCategory';\r\nimport ProductManagement from '../Admin/products/ProductManagement'\r\nimport AddProduct from '../Admin/products/AddProduct'\r\nimport EditProduct from '../Admin/products/EditProduct'\r\nimport FinanceRequests from '../Admin/finance/FinanceRequests';\r\nimport Form16Requests from '../Admin/finance/Form16Requests';\r\n\r\nfunction Home(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [selectedTab, setselectedTab] = useState(\"categories\")\r\n    const showLoader =(value)=>{\r\n        setisShowLoader(value);\r\n    }\r\n    const changeTab=(tab=\"\")=>{\r\n        setselectedTab(tab);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n            <Row>\r\n                <Col md={3} className=\"p-4\">\r\n                    <ListGroup >\r\n                        <ListGroup.Item key={\"categories\"} active={selectedTab==\"categories\"?true:false} action  onClick={()=>changeTab(\"categories\")}>Category Management</ListGroup.Item>\r\n                        <ListGroup.Item key={\"products\"} active={selectedTab==\"products\"?true:false} action onClick={()=>changeTab(\"products\")}>Product Management</ListGroup.Item>\r\n                        <ListGroup.Item key={\"orders\"} active={selectedTab==\"orders\"?true:false} action onClick={()=>changeTab(\"orders\")}>Order History</ListGroup.Item>\r\n                        <ListGroup.Item key={\"finance\"}  active={selectedTab==\"finance\"?true:false} action onClick={()=>changeTab(\"finance\")}>ITR Requests</ListGroup.Item>\r\n                        <ListGroup.Item key={\"form16\"}  active={selectedTab==\"form16\"?true:false} action onClick={()=>changeTab(\"form16\")}>Form16 Requests</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={9} className=\"p-4 production-col\" >\r\n                    <Loader show={isShowLoader}/>\r\n                    \r\n                    <CategoryManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <ProductManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <OrderHistory  selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <AddCategory changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <AddProduct changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <EditProduct changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <FinanceRequests changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <Form16Requests changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Home\r\n","import React,{useEffect,useState} from 'react'\r\nimport agent from '../../agent'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table, Nav, Pagination,Button,Modal } from 'react-bootstrap';\r\n\r\nfunction UserOrderHistory(props) {\r\n    useEffect(() => {\r\n        getOrders()\r\n  },[])\r\n  const [orderHistory, setorderHistory] = useState([])\r\n  const [selectedorder,setselectedorder] = useState([]);\r\n  const [isopenpopup, setisopenpopup] = useState(false)\r\n  const handleClose = () => setisopenpopup(false);\r\n\r\n  const viewOrderPopUp = (record)=>{\r\n      setselectedorder(record);\r\n      setisopenpopup(true);\r\n  }\r\n  let history = useHistory();\r\n  const getOrders =()=>{\r\n      props.showLoader(true);\r\n      agent.Order.getOrderHistoryByUserEmail().then((res=>{\r\n          props.showLoader(false);\r\n          console.log(res.body.record)\r\n\r\n          setorderHistory(res.body.record);\r\n      }),(err)=>{\r\n          console.log(err.response.body.message);\r\n          if(err.response.body.message ==\"jwt must be provided\"){\r\n              console.log(\"login required\");\r\n            history.push(\"/login\");\r\n          }\r\n          props.showLoader(false);\r\n\r\n      });\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <Table responsive>\r\n        <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Details</th>\r\n                <th>Number</th>\r\n                <th>Action</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {orderHistory.map((record,index)=>\r\n            <tr>\r\n                <td>{index+1}</td>\r\n                <td>{record.shipping.name}</td>\r\n                <td>{record.datePlaced}</td>\r\n                <td>{record.items.map(itm=><span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                <td>{record.shipping.phone}</td>\r\n\r\n                <td>\r\n                    <Button type=\"button\" onClick={()=>viewOrderPopUp(record)}>View</Button>\r\n                </td>\r\n            </tr>\r\n\r\n            )}\r\n        </tbody>\r\n    </Table>\r\n    <Modal show={isopenpopup} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Order Details</Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Shipping Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                            <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                            <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                            <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                    <tbody>{selectedorder?.items?.map(itm=><tr>\r\n                    <td><b>Title:</b> {itm.item.title}</td>\r\n                    <td><b>Description:</b> {itm.item.description}</td>\r\n                    <td><b>Quantity:</b> {itm.quantity}</td>\r\n                    <td><b>Total Price:</b> {parseInt(itm.quantity)*itm.perItemPrice}</td>\r\n                    </tr>)}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Table striped bordered hover responsive>\r\n                <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        {selectedorder.isDiscountApplied?<tr>\r\n                            <td>\r\n                                <b>\r\n                                Prime Member Discount:\r\n                                </b>\r\n                            </td>\r\n                            <td>10%</td>\r\n                        </tr>:\"\"}\r\n                        <tr>\r\n                            <td>\r\n                                <b>Total Bill Amount</b>\r\n                            </td>\r\n                            <td>{selectedorder.totalBillAmount}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Modal.Body>\r\n      </Modal>\r\n\r\n    </>\r\n)\r\n}\r\n\r\nexport default UserOrderHistory\r\n","import React,{useState} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n// import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../../layout/Loader';\r\nimport UserOrderHistory from '../UserOrderHistory';\r\nfunction UserAction(props) {\r\n\r\nconst [isShowLoader, setisShowLoader] = useState(false)\r\nconst showLoader =(value)=>{\r\n    setisShowLoader(value);\r\n}\r\nreturn (\r\n    <>\r\n    <Container fluid>\r\n        <Row>\r\n            <Col md={3} className=\"p-4\">\r\n                <ListGroup>\r\n                    {/* <ListGroup.Item  active action>Category Management</ListGroup.Item>\r\n                    <ListGroup.Item  action>Product Management</ListGroup.Item> */}\r\n                    <ListGroup.Item  action active>Order History</ListGroup.Item>\r\n                    {/* <ListGroup.Item  action>Finance</ListGroup.Item> */}\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={9} className=\"p-4 production-col\" >\r\n                <Loader show={isShowLoader}/>\r\n                {/* <CategoryManagement showLoader={showLoader}/> */}\r\n                <UserOrderHistory showLoader={showLoader}/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</>\r\n)\r\n\r\n}\r\nexport default UserAction\r\n","import React from 'react'\r\nimport { Alert, Button} from 'react-bootstrap';\r\nimport {useDispatch } from \"react-redux\";\r\nimport orderR from '../../reducers/order';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction OrderFailed() {\r\n    // const [show, setShow] = useState(true);\r\n    return (\r\n      <>\r\n        <Alert show={true} className=\"login-div\">\r\n          <Alert.Heading>Filed!</Alert.Heading>\r\n          <p>\r\nSomething went wrong to place order. Please try again.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n              <Link to=\"/placeOrder\">\r\n              <Button variant=\"danger\">\r\n              Ok\r\n            </Button>\r\n\r\n              </Link>\r\n          </div>\r\n        </Alert>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OrderFailed\r\n","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberGroupModel = {\r\n  getMemberGroups(){\r\n    return superagent.get(`${API_ROOT}/memberGroups/entry`)\r\n  },\r\n  saveMemberGroups(data){\r\n    return superagent.post(`${API_ROOT}/memberGroups/entry`,data)\r\n  }\r\n  }\r\n    export default {MemberGroupModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nfunction MemberGroup(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [memberGroupRecords,setMemberGroupsRecords]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        masterRecord.MemberGroupModel.getMemberGroups().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberGroupsRecords(res.body.message);\r\n            }else{\r\n                setMemberGroupsRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Member Groups</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMemberGroup\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Member Group\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Group Code</th>\r\n                    <th>Name</th>\r\n                    <th>Remark</th>\r\n                    <th>Created At</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {memberGroupRecords.map((group,id)=>(<tr>\r\n                    <td>{group.group_code}</td>\r\n                    <td>{group.group_name}</td>\r\n                    <td>{group.remark}</td>\r\n                    <td>{moment(group.created_at).format(\"DD-MM-YYYY HH:SS\") }</td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default MemberGroup;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\n\r\nfunction AddMemberGroup(props) {\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false,type:\"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.group_code) {\r\n      errors.group_code = 'Group Code is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      group_code: '',\r\n      group_name: '',\r\n      remark: '',\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await masterRecord.MemberGroupModel.saveMemberGroups(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          formik.resetForm();\r\n        } else {\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Member Group</h2>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Group Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"group_code\"\r\n                  placeholder=\"Enter group code\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.group_code}\r\n\r\n                />\r\n                {formik.touched.group_code && formik.errors.group_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.group_code}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Group Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"group_name\"\r\n                  placeholder=\"Enter group name\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.group_name}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Remark</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} name=\"remark\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.remark} />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddMemberGroup;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberDetailModel = {\r\n  getMemberDetailsData(){\r\n    return superagent.get(`${API_ROOT}/member/entry`)\r\n  },\r\n  saveMemberDetails(data){\r\n    return superagent.post(`${API_ROOT}/member/entry`,data)\r\n\r\n  },\r\n  deleteMember(id){\r\n    return superagent.del(`${API_ROOT}/member/entry/${id}`)\r\n  }  \r\n    \r\n  }\r\n    export default {MemberDetailModel};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useFormik } from 'formik';\r\nimport memberDetails from \"../../../models/memberDetails\"\r\nimport masterRecord from '../../../models/masterRecord';\r\n\r\nimport Loader from '../../layout/Loader';\r\n\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nfunction AddMember(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [dob, setDob] = useState();\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [groups, setGroups] = useState([])\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n        getMemberGroups();\r\n    }, [])\r\n    const getMemberGroups = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.getMemberGroups();\r\n            setisShowLoader(false);\r\n            setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.member_name) {\r\n            errors.member_name = 'Please provide member name';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            enrollment_date: enrollmentDate,\r\n            date_of_birth: dob,\r\n            member_name: '',\r\n            gender: \"\",\r\n            age: \"\",\r\n            marital_status: \"\",\r\n            mobile_number: \"\",\r\n            email_id: \"\",\r\n            member_group_id: \"\",\r\n            aadhar_number: \"\",\r\n            pan_card_number: \"\",\r\n            driving_license_number: \"\",\r\n            voter_id_number: \"\",\r\n            ration_card_number: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setisShowLoader(true);\r\n            try {\r\n                values.enrollment_date = enrollmentDate;\r\n                values.date_of_birth = dob;\r\n\r\n                let response = await memberDetails.MemberDetailModel.saveMemberDetails(values);\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: response.body.message })\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        },\r\n        handleChange: () => {\r\n            setValues(prevValues => ({\r\n                ...prevValues,\r\n                // we use the name to tell Formik which key of `values` to update\r\n                [values.target.name]: values.target.value\r\n            }))\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <Toast key={1} autohide delay={3000}  show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                <Toast.Header>\r\n                    <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                </Toast.Header>\r\n                <Toast.Body className=\"Dark\">\r\n                    {showToast.message}\r\n                </Toast.Body>\r\n            </Toast>\r\n\r\n            <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Member</h2>\r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Enrollment Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"enrollment_date\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridName\">\r\n                            <Form.Label >Member Name</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                placeholder=\"member name\"\r\n                                name=\"member_name\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_name}\r\n\r\n                            />\r\n                            {formik.touched.member_name && formik.errors.member_name ? (\r\n                                <div class=\"text-danger\">{formik.errors.member_name}</div>\r\n                            ) : null}\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Date of Birth</Form.Label>\r\n                            <DatePicker\r\n                                class=\"form-control\"\r\n                                selected={dob}\r\n                                onChange={(date) => setDob(date)}\r\n                                name=\"date_of_birth\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>Gender</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"gender\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.gender}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Gender</option>\r\n\r\n                                <option key=\"male\" value=\"male\">Male</option>\r\n                                <option key=\"female\" value=\"female\">Female</option>\r\n\r\n                            </select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Age</Form.Label>\r\n                            <Form.Control\r\n                                name=\"age\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.age}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Marital Status</Form.Label>\r\n                            <Form.Control\r\n                                name=\"marital_status\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.merital_status}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Phone number</Form.Label>\r\n                            <Form.Control\r\n                                name=\"mobile_number\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.mobile_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                name=\"email_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.email_id}\r\n                                type=\"text\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} md={6} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>Member Group</Form.Label>\r\n                            <select className=\"form-control\" name=\"member_group_id\" onChange={formik.handleChange}\r\n                                value={formik.values.member_group_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member Group</option>\r\n                                {groups.map((group,id)=>(\r\n                                    <option key={group.group_code} value={group.group_code}>{group.group_code}</option>\r\n                                ))}\r\n                            </select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            <h3 className=\"text-info\">KYC Information</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Aadhar no.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"aadhar_number\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.aadhar_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>PAN</Form.Label>\r\n                            <Form.Control\r\n                                name=\"pan_card_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pan_card_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Driving Licence No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"driving_license_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.driving_license_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Voter Id No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"voter_id_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.voter_id_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                            <Form.Label>Ration Card No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"ration_card_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.ration_card_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddMember;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\nconst [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMember=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await memberRecord.MemberDetailModel.deleteMember(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = memberRecords.filter((member,idx)=>member.member_id!=deleteID);\r\n                setMemberRecords(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n              \r\n    }\r\n\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMember()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Members</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMember\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Member\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Enrollment Date</th>\r\n                    <th>Member Name</th>\r\n                    <th>Member Id</th>\r\n                    <th>PAN Number</th>\r\n                    <th>Mobile Number</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {memberRecords.map((group,id)=>(<tr>\r\n                    <td>{moment(group.enrollment_date).format(\"DD-MM-YYYY HH:SS\") }</td>\r\n                    <td>{group.member_name}</td>\r\n                    <td>{group.member_id}</td>\r\n                    <td>{group.pan_card_number }</td>\r\n                    <td>{group.mobile_number }</td>\r\n                    <td><Link to = \"/viewMemberDetail\">\r\n                    <Button size={\"sm\"} variant=\"primary\">View</Button>\r\n                        \r\n                        </Link>{' '}\r\n                    <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(group.member_id)} >Delete</Button>\r\n                        \r\n                        </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\n\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message[0]);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Member Detail - {memberRecords.member_name}</h2>\r\n\r\n            <Row className=\"mb-5 mt-3\">\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <tbody>\r\n                <tr><th>Enrollment Date</th><td>{moment(memberRecords.enrollment_date).format(\"DD-MM-YYYY HH:SS\") }</td> </tr>\r\n                <tr><th>Member Id</th>  <td>{memberRecords.member_id}</td></tr> \r\n                <tr> <th>Gender</th>  <td>{memberRecords.gender}</td></tr> \r\n                <tr><th>DOB</th>   <td>{memberRecords.date_of_birth}</td></tr> \r\n                <tr><th>Age</th> <td>{memberRecords.age}</td></tr> \r\n                <tr><th>Marital Status</th>  <td>{memberRecords.marital_status}</td></tr> \r\n                <tr><th>Mobile Number</th> <td>{memberRecords.mobile_number}</td></tr> \r\n                <tr><th>Email Id</th> <td>{memberRecords.email_id}</td></tr> \r\n                <tr> <th>Member Group Id</th>  <td>{memberRecords.member_group_id}</td></tr> \r\n                <tr> <th>Aadhar Number</th> <td>{memberRecords.aadhar_number}</td></tr> \r\n                <tr> <th>Driving License Number</th>  <td>{memberRecords.driving_license_number}</td></tr> \r\n                <tr> <th>Voter Id Number </th>  <td>{memberRecords.voter_id_number}</td></tr> \r\n                <tr>  <th>Ration Card Number</th> <td>{memberRecords.ration_card_number}</td></tr> \r\n                <tr> <th>PAN Number</th> <td>{memberRecords.pan_card_number }</td></tr> \r\n            </tbody>\r\n            </Table>\r\n            </Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst SchemeModel = {\r\n  getScheme() {\r\n    return superagent.get(`${API_ROOT}/scheme/entry`)\r\n  },\r\n  saveScheme(data) {\r\n    return superagent.post(`${API_ROOT}/scheme/entry`, data)\r\n  },\r\n  deleteScheme(id){\r\n    return superagent.del(`${API_ROOT}/scheme/entry/${id}`)\r\n  },  \r\n  getLoanAppInitialData(){\r\n      return [superagent.get(`${API_ROOT}/scheme/entry`),superagent.get(`${API_ROOT}/member/entry`)]\r\n  }\r\n\r\n}\r\nconst GroupLoanModel = {\r\n  applyForloan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/applyGroupLoan`, data)\r\n  },\r\n  getApprovalList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingApproval`);\r\n  },\r\n  getDisburseList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingDisburse`);\r\n  },\r\n  getLoanDetailbyId(id){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/${id}`);\r\n  },\r\n  approveRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/approveLoan`, data)\r\n  },\r\n  getAllLoanApplications(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/all`);\r\n  },\r\n  disburseRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/disburseLoan`, data)\r\n  },\r\n\r\n}\r\nconst EmiModel = {\r\n  calculateEMI(data){\r\n    return superagent.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  }\r\n}\r\nexport default { SchemeModel,GroupLoanModel,EmiModel };","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\n\r\nfunction Scheme(props) {\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [schemes,setSchemes]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    useEffect(() => {\r\n        getSchemes();\r\n    },[])\r\n\r\n    const getSchemes = () =>{\r\n        setisShowLoader(true);\r\n        groupLoan.SchemeModel.getScheme().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setSchemes(res.body.message);\r\n            }else{\r\n                setSchemes([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.SchemeModel.deleteScheme(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = schemes.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setSchemes(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Scheme</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Schemes</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addScheme\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Scheme\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Scheme code</th>\r\n                    <th>Scheme name</th>\r\n                    <th>Max amount</th>\r\n                    <th>Interest rate (%)</th>\r\n                    <th>EMI type</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {schemes.map((scheme,id)=>(<tr>\r\n                    <td>{scheme.scheme_code}</td>\r\n                    <td>{scheme.scheme_name}</td>\r\n                    <td>{scheme.max_amount}</td>\r\n                    <td>{scheme.interest_rate }%</td>\r\n                    <td>{scheme.EMI_type }</td>\r\n                    <td>\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(scheme.id)} className=\"ml-2\">Delete</Button>\r\n\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\n\r\nexport default Scheme;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\n\r\nfunction AddScheme(props) {\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.scheme_code) {\r\n      errors.scheme_code = 'Scheme code is Required!';\r\n    }\r\n    if (!values.scheme_name) {\r\n      errors.scheme_name = 'Scheme name is Required!';\r\n    }\r\n    if (!values.max_amount) {\r\n      errors.max_amount = 'Max amount is Required!';\r\n    }\r\n    if (!values.interest_rate) {\r\n      errors.interest_rate = 'Interest rate is Required!';\r\n    }\r\n    if (!values.EMI_type) {\r\n      errors.EMI_type = 'EMI type is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      scheme_code: '',\r\n      scheme_name: '',\r\n      max_amount: '',\r\n      interest_rate: '',\r\n      EMI_type: ''\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n        try {\r\n          let response = await groupLoan.SchemeModel.saveScheme(values);\r\n          setisShowLoader(false);\r\n          if (response.statusCode == 200) {\r\n            formik.resetForm();\r\n            setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          } else {\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n          }\r\n\r\n        } catch (error) {\r\n          setisShowLoader(false);\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n        }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Scheme</h2>\r\n      <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Scheme Code</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_code\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_code}\r\n              />\r\n                {formik.touched.scheme_code && formik.errors.scheme_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_code}</div>\r\n                ) : null}              \r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\">\r\n              <Form.Label>Scheme Name</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_name\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_name}\r\n              />\r\n                {formik.touched.scheme_name && formik.errors.scheme_name ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_name}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Max amount</Form.Label>\r\n              <Form.Control\r\n                name=\"max_amount\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.max_amount}\r\n              />\r\n                {formik.touched.max_amount && formik.errors.max_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.max_amount}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Interest Rate (in %)</Form.Label>\r\n              <Form.Control\r\n                name=\"interest_rate\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.interest_rate}\r\n              />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" md={6}>\r\n            <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n              <Form.Label>EMI type</Form.Label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"EMI_type\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.EMI_type}\r\n              >\r\n                <option key=\"\" value=\"\">Select EMI type</option>\r\n                <option key=\"flat\" value=\"flat\">Flat rate</option>\r\n                {/* <option key=\"reduceing\" value=\"reduceing\">Reduceing rate</option> */}\r\n              </select>\r\n              {formik.touched.EMI_type && formik.errors.EMI_type ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_type}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddScheme;","import React, { Component } from 'react'\r\nimport agent from '../../agent'\r\nimport Loader from '../layout/Loader';\r\nimport {  Card, Col, Row } from 'react-bootstrap';\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <div >\r\n            <Row xs={1} md={3} className=\"g-2\">\r\n                <Col>\r\n                    <Card\r\n                    bg={\"primary\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">100</h2></Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                            Received Amount(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card> \r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card\r\n                    bg={\"danger\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">10</h2> </Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                          Paid Amount(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>            \r\n                </Col>\r\n                <Col>\r\n                    <Card\r\n                    bg={\"success\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">90</h2> </Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                            Cash in hand(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>            \r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nfunction LoanApplication(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [schemeRecords, setSchemeRecords] = useState([]);\r\n    const [selectedScheme, setSelectedScheme] = useState({});\r\n\r\n    const tanure = {\"weekly\":\"Weeks\",\"monthly\":\"Months\",\"daily\":\"Days\",\"fortnight\":\"Fortnight\"};\r\n    let history = useHistory();\r\n    //const selectedSm = {\"interest_rate\":0,\"EMI_type\":\"\",\"max_amount\":0};\r\n    useEffect(()=>{\r\n        getSchemesAndMembers();\r\n    },[])\r\n    const getSchemesAndMembers=async()=>{\r\n        try{\r\n            setisShowLoader(true);\r\n            const response =await Promise.all(groupLoan.SchemeModel.getLoanAppInitialData())\r\n            setisShowLoader(false);\r\n            setSchemeRecords(response[0].body.message);\r\n            setMemberRecords(response[1].body.message);\r\n            console.log(response);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.scheme_id) {\r\n            errors.scheme_id = 'Scheme code is Required!';\r\n        }\r\n        if (!values.member_id) {\r\n            errors.member_id = 'Member name is Required!';\r\n        }\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required!';\r\n        }\r\n        if (selectedScheme?.interest_rate>0 && values.interest_rate>selectedScheme?.interest_rate) {\r\n            errors.interest_rate = `As per the Selected Scheme. Interest rate should not greater than ${selectedScheme.interest_rate}.`;\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required!';\r\n        }\r\n        if (selectedScheme?.max_amount>0 && values.loan_amount>selectedScheme.max_amount) {\r\n            errors.loan_amount = `As per the Selected Scheme. Loan amount should not greater than ${selectedScheme.max_amount}.`;\r\n        }\r\n        // if (!values.EMI_amount) {\r\n        //     errors.EMI_amount = 'EMI amount is Required!';\r\n        // }\r\n        if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required!';\r\n        }\r\n        if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required!';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            scheme_id: '',\r\n            application_date: '',\r\n            member_id: '',\r\n            address:'',\r\n            interest_rate: \"\",\r\n            loan_amount:'',\r\n            // EMI_amount: '',\r\n            EMI_payout:\"\",\r\n            EMI_type:\"\",\r\n            tenure:\"\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            console.log(values);\r\n           setisShowLoader(true);\r\n            try {\r\n                //delete values.EMI_type;\r\n                values.application_date = enrollmentDate;\r\n              let response = await groupLoan.GroupLoanModel.applyForloan(values);\r\n              setisShowLoader(false);\r\n              if (response.statusCode == 200) {\r\n                formik.resetForm();\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n              } else {\r\n                setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n              }\r\n\r\n            } catch (error) {\r\n              setisShowLoader(false);\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    const handleScheme=(e)=>{\r\n        console.log(e.target.value);\r\n        let selectedScheme = schemeRecords.filter(scheme=>scheme.scheme_code==e.target.value);\r\n        setSelectedScheme(selectedScheme[0]);\r\n         formik.values.EMI_type = selectedScheme[0].EMI_type;\r\n         formik.values.interest_rate = selectedScheme[0].interest_rate;\r\n        formik.handleChange(e);\r\n    }\r\n    return (\r\n        \r\n        <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n         <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Loan Application</h2>\r\n            \r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"application_date\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Member name</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"member_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member</option>\r\n                                {memberRecords.map((member,id)=>(\r\n                                    <option key={member.member_id} value={member.member_id}>{member.member_name}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.member_id && formik.errors.member_id ? (\r\n                  <div class=\"text-danger\">{formik.errors.member_id}</div>\r\n                ) : null}              \r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Member Address</Form.Label>\r\n                            <Form.Control\r\n                                name=\"address\"\r\n                                as=\"textarea\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.address}\r\n\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Scheme</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"scheme_id\"\r\n                                onChange={handleScheme}\r\n                                value={formik.values.scheme_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Scheme</option>\r\n                                {schemeRecords.map((schems,id)=>(\r\n                                    <option key={schems.scheme_code} value={schems.scheme_code}>{schems.scheme_code}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.scheme_id && formik.errors.scheme_id ? (\r\n                                <div class=\"text-danger\">{formik.errors.scheme_id}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Interest Rate (in %)</Form.Label>\r\n                            <Form.Control\r\n                                name=\"interest_rate\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.interest_rate}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per scheme.\r\n                            </Form.Text>                            \r\n                            {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Loan Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"loan_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.loan_amount}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            Default will be Max amount of selected scheme.\r\n                            </Form.Text>                            \r\n\r\n                            {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        {/* <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"EMI_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_amount}\r\n                            />\r\n                            {formik.touched.EMI_amount && formik.errors.EMI_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.EMI_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group> */}\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Payout</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"EMI_payout\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_payout}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Payout</option>\r\n                                {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                                <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n\r\n                            </select>\r\n                            {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                                <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Tenure(in {formik.values.EMI_payout!=\"\"?tanure[formik.values.EMI_payout]:\"Months\"})</Form.Label>\r\n                            <Form.Control\r\n                                name=\"tenure\"\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.tenure}\r\n                            />\r\n                            {formik.touched.tenure && formik.errors.tenure ? (\r\n                                <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                    <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Type</Form.Label>\r\n                            <Form.Control\r\n                                name=\"EMI_type\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_type}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per selected scheme.\r\n                            </Form.Text>                            \r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={()=>{history.push(\"/\")}} type=\"button\" className=\"ml-2\">\r\n                        Cancel\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApplication;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction LoanApproval(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getApprovalList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectApproval=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications for Approval</h2>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Interest rate</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY HH:SS\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.interest_rate }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectApproval(loan.id)}>Approve</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApproval;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nfunction DisburseLoan(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getDisburseList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectDisburse=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications For Disburse</h2>\r\n            <Row >\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Interest rate</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY HH:SS\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.interest_rate }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectDisburse(loan.id)}>Disburse</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );}\r\n\r\nexport default DisburseLoan;","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup,Modal,Toast } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction LoanApprovalDetails(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [showApproveModel, setShowApproveModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [isShowEMILoader, setisShowEMILoader] = useState(false)\r\n    const [emiData, setEmiData] = useState([])\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [showApprovalButton,setShowApprovalButton]= useState(false);\r\n    const [showDisburseButton,setShowDisburseButton]= useState(false);\r\n    //const [disburseActionButton,setDisburseActionButton]\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getLoanDetails();\r\n    }, [])\r\n\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            setisShowEMILoader(true);\r\n\r\n            let response = await groupLoan.GroupLoanModel.getLoanDetailbyId(props.location.state);\r\n            let calculateEmi ={\r\n                \"loanStartDate\":response.body.message[0].application_date,\r\n                \"interest_rate\":response.body.message[0].interest_rate,\r\n                \"tenure\":response.body.message[0].Tenure,\r\n                \"EMI_payout\":response.body.message[0].EMI_payout,\r\n                \"loan_amount\":response.body.message[0].loan_amount,\r\n                \"EMI_type\":response.body.message[0].EMI_type\r\n            }\r\n            setisShowEMILoader(true);\r\n            let EmiData = await groupLoan.EmiModel.calculateEMI(calculateEmi);\r\n            setEmiData(EmiData.body.message);\r\n            setisShowEMILoader(false);\r\n            console.log(response);\r\n\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(response.body.message[0].is_approved!=0?false:true);\r\n                setShowDisburseButton(response.body.message[0].is_approved ==1 && response.body.message[0].is_disbursed==0?true:false);\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionOnLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.approveRejectLoan(data);\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(false);\r\n                //setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionDisburseLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.disburseRejectLoan(data);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n        {/* <Modal show={showApproveModel} onHide={()=>setShowApproveModel(false)}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Delete Member</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Are you sure.You want to reject?</Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={()=>setShowApproveModel(false)}>\r\n                Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={()=>approveRejectLoan()}>\r\n                Delete\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>         */}\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n            <Loader show={isShowLoader} />\r\n            {showApprovalButton && (auth.role==\"checker\"||auth.role==\"admin\")?<Row className=\"m-5\">\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionOnLoan(1)}>\r\n                        Approve\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionOnLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            {showDisburseButton&& (auth.role==\"checker\"||auth.role==\"admin\")?<Row className=\"m-5\">\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionDisburseLoan(1)}>\r\n                        Disburse\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionDisburseLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            <Row xs={1} md={2} className=\"g-1\">\r\n                <Col>\r\n                    <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                    >\r\n                        <Card.Header className=\"bg-success text-center\"><b>Member Details</b></Card.Header>\r\n                        <Card.Body>\r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Member Name</th><td>{loanDetails.member_name}</td> </tr>\r\n                                    <tr><th>Member Group ID</th>  <td>{loanDetails.member_group_id}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>DOB</th>   <td>{moment(loanDetails.date_of_birth).format(\"DD-MM-YYYY\") }</td></tr>\r\n                                    <tr><th>Phone</th> <td>{loanDetails.mobile_number}</td></tr>\r\n                                    <tr><th>Gender</th>  <td>{loanDetails.gender}</td></tr>\r\n                                    <tr><th>Aadhar No.</th> <td>{loanDetails.aadhar_number}</td></tr>\r\n                                    <tr><th>PAN</th> <td>{loanDetails.pan_card_number}</td></tr>\r\n                                    <tr><th>Driving License</th> <td>{loanDetails.driving_license_number}</td></tr>\r\n                                    <tr><th>Ration Card No.</th> <td>{loanDetails.ration_card_number}</td></tr>\r\n                                    <tr><th>Voter ID No.</th> <td>{loanDetails.voter_id_number}</td></tr>\r\n\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card border=\"info\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                    >\r\n                        <Card.Header className=\"bg-info text-center\"><b>Application Details</b></Card.Header>\r\n                        <Card.Body>\r\n                            \r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\") }</td> </tr>\r\n                                    <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                                    <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                    <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                                    <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                                    {/* <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> */}\r\n                                    <tr><th>Tenure</th> <td>{loanDetails.Tenure}</td></tr>\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                    >\r\n                        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b></Card.Header>\r\n                        <Card.Body>\r\n                        <Loader show={isShowEMILoader} relative={true}/>\r\n                        <Table size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead>\r\n                              <tr>\r\n                                  <th>EMI date</th>\r\n                                  <th>EMI Amount</th>\r\n                                  <th>Principal</th>\r\n                                  <th>Interest</th>\r\n                                  <th>Outstanding</th>\r\n                              </tr>\r\n                          </thead>\r\n                                <tbody>\r\n                                {emiData.map((value,id)=>(<tr>\r\n                                    <td>{value.date}</td>\r\n                                    <td>{value.EMI}</td>\r\n                                    <td>{value.principal}</td>\r\n                                    <td>{value.int_amount}</td>\r\n                                    <td>{value.outstanding }</td>\r\n                                </tr>))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n            {/* <Container fluid>\r\n        <h2 className=\"text-info text-center\">Approve Loan For - {loanDetails.member_name}</h2>\r\n\r\n            <Row className=\"mb-5 mt-3\">\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <tbody>\r\n                <tr><th>Application Date</th><td>{loanDetails.application_date}</td> </tr>\r\n                <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr> \r\n                <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr> \r\n                <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr> \r\n                <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr> \r\n                <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr> \r\n                <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> \r\n            </tbody>\r\n            </Table>\r\n            </Col>\r\n            </Row>\r\n        </Container> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApprovalDetails;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Badge, Container, Row, Col, Button } from 'react-bootstrap';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nfunction AllApplications(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getAllLoanApplications();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let formatedData = response.body.message.map((loan, id)=>{\r\n                    if(loan.is_approved ==1 && loan.is_disbursed==1){\r\n                        loan[\"actionStatus\"]= \"Disbursed\";\r\n                    }else if(loan.is_approved ==1 && loan.is_disbursed==0){\r\n                        loan[\"actionStatus\"]= \"Approved\";\r\n                    }else if(loan.is_disbursed==-1){\r\n                        loan[\"actionStatus\"]= \"Disburse Rejected\";\r\n                    }else if(loan.is_approved==-1){\r\n                        loan[\"actionStatus\"]= \"Approval Rejected\";\r\n                    }else{\r\n                        loan[\"actionStatus\"]= \"Pending\";\r\n                    }\r\n\r\n                    return loan;\r\n                });\r\n                setLoanlist(formatedData);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n    //   const redirectApproval=(loan_id)=>{\r\n    //     history.push(\"/loanApprovalDetails\",loan_id);\r\n    //   }\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">All Loan Applications</h2>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Interest rate</th>\r\n                    <th>Status</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY HH:SS\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.interest_rate }</td>\r\n                    <td><Badge className={loan.actionStatus==\"Approved\" || loan.actionStatus==\"Disbursed\"?\"bg-success\":\"bg-danger\"}>{loan.actionStatus }</Badge></td>\r\n                    <td> <Button size={\"sm\"} variant=\"info\" onClick={()=>{history.push(\"/loanApprovalDetails\",loan.id)}} type=\"button\" className=\"ml-2\">\r\n                        View\r\n                    </Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );\r\n    }\r\n\r\nexport default AllApplications;","import React,{useState} from 'react';\r\nimport { Table,Button, Container, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport Loader from '../layout/Loader';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nfunction EmiCalculator(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [calculatedData,setCalculatedData] = useState([]);\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.interest_rate) {\r\n          errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required';\r\n          }\r\n          if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required';\r\n          }\r\n          if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required';\r\n          }\r\n          return errors;\r\n      };\r\n      const formik = useFormik({\r\n        initialValues: {\r\n        loanStartDate: '',\r\n        interest_rate: '',\r\n        tenure: '',\r\n        EMI_payout:'',\r\n        loan_amount:'',\r\n        EMI_type:\"flat\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n          setisShowLoader(true);\r\n          try {\r\n             values.loanStartDate = enrollmentDate;\r\n             console.log(values);\r\n            let response = await groupLoan.EmiModel.calculateEMI(values);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              //formik.resetForm();\r\n              setCalculatedData(response.body.message);\r\n            } else {\r\n              //setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n    \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            //setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n        },\r\n      });\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n            <Row >\r\n            <Col>\r\n            <Container className=\"bg-white mt-2 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group as={Col} className=\"form-group required pl-0 pr-0\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"loanStartDate\"\r\n                            />\r\n                {formik.touched.loanStartDate && formik.errors.loanStartDate ? (\r\n                  <div class=\"text-danger\">{formik.errors.loanStartDate}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Loan amount</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"loan_amount\"\r\n                  placeholder=\"Enter loan amount\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.loan_amount}\r\n                />\r\n                {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Interest rate</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"interest_rate\"\r\n                  placeholder=\"Enter interest rate\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.interest_rate}\r\n\r\n                />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Tenure</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"tenure\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.tenure}\r\n\r\n                />\r\n                {formik.touched.tenure && formik.errors.tenure ? (\r\n                  <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0\" controlId=\"formGridAddress1\">\r\n                <Form.Label>EMI payout</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"EMI_payout\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.EMI_payout}\r\n                >\r\n                    <option key=\"\" value=\"\">Select payout</option>\r\n\r\n                    {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                    <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                    <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n\r\n                </select>\r\n                {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Calculate\r\n              </Button>\r\n\r\n            </Form>\r\n            </Container>\r\n            </Col>\r\n            <Col md={8}>\r\n            <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                    >\r\n                        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b></Card.Header>\r\n                        <Card.Body>\r\n                            <Table size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead>\r\n                              <tr>\r\n                                  <th>EMI date</th>\r\n                                  <th>EMI Amount</th>\r\n                                  <th>Principal</th>\r\n                                  <th>Interest</th>\r\n                                  <th>Outstanding</th>\r\n                              </tr>\r\n                          </thead>\r\n                                <tbody>\r\n                                {calculatedData.map((value,id)=>(<tr>\r\n                                    <td>{value.date}</td>\r\n                                    <td>{value.EMI}</td>\r\n                                    <td>{value.principal}</td>\r\n                                    <td>{value.int_amount}</td>\r\n                                    <td>{value.outstanding }</td>\r\n                                </tr>))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n            </Col>\r\n\r\n    </Row>\r\n    </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmiCalculator;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/home/Home'\r\nimport Registration from './components/users/Registration'\r\nimport Login from './components/users/Login'\r\nimport FillItr from './components/finance-Itr/FillItr'\r\nimport InnerLayout from './components/layout/InnerLayout'\r\nimport CategoryList from './components/food-order/CategoryList'\r\nimport MyCart from './components/food-order/MyCart'\r\nimport PlaceOrder from './components/food-order/PlaceOrder'\r\nimport OrderSuccess from './components/food-order/OrderSuccess'\r\nimport AdminHome from './components/Admin/Home';\r\nimport CategoryManagement from './components/Admin/CategoryManagement';\r\nimport AddCategory from './components/Admin/AddCategory';\r\nimport OrderHistory from './components/Admin/orders/OrderHistory';\r\nimport UserOrderHistory from './components/users/UserOrderHistory';\r\nimport UserAction from './components/users/user-actions/UserAction';\r\nimport ProductManagement from './components/Admin/products/ProductManagement';\r\nimport AddProduct from './components/Admin/products/AddProduct';\r\nimport EditProduct from './components/Admin/products/EditProduct';\r\nimport OrderFailed from './components/food-order/OrderFailed';\r\nimport FinanceRequests from './components/Admin/finance/FinanceRequests';\r\nimport Form16Requests from './components/Admin/finance/Form16Requests';\r\nimport InqueryForm from './components/home/InqueryForm';\r\nimport MemberGroup from  './components/masterRecord/memberGroup/MemberGroup';\r\nimport AddMemberGroup from  './components/masterRecord/memberGroup/AddMemberGroup';\r\nimport AddMember from  './components/masterRecord/member/AddMember';\r\nimport Member from  './components/masterRecord/member/Member';\r\nimport MemberViewDetails from  './components/masterRecord/member/MemberViewDetails';\r\nimport Scheme from  './components/groupLoan/Scheme';\r\nimport AddScheme from  './components/groupLoan/AddScheme';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport LoanApplication from  './components/groupLoan/LoanApplication';\r\nimport LoanApproval from  './components/groupLoan/LoanApproval';\r\nimport DisburseLoan from  './components/groupLoan/DisburseLoan';\r\nimport LoanApprovalDetails from  './components/groupLoan/LoanApprovalDetails';\r\nimport AllApplications from  './components/groupLoan/AllApplications';\r\nimport EmiCalculator from  './components/groupLoan/EmiCalculator';\r\nfunction Routes() {\r\n    const checkLogin=()=>{\r\n        console.log(\"check login\")\r\n    }\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n            <InnerLayout exact path=\"/\" component={Dashboard}/>\r\n            <InnerLayout exact path=\"/memberGroup\" component={MemberGroup} />\r\n            <InnerLayout exact path=\"/addMemberGroup\" component={AddMemberGroup} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/scheme\" component={Scheme} />\r\n            <InnerLayout exact path=\"/viewMemberDetail\" component={MemberViewDetails} />\r\n            <InnerLayout exact path=\"/addScheme\" component={AddScheme} />\r\n            <InnerLayout exact path=\"/loanApplication\" component={LoanApplication} />\r\n            <InnerLayout exact path=\"/loanApproval\" component={LoanApproval} />\r\n            <InnerLayout exact path=\"/disburseLoan\" component={DisburseLoan} />\r\n            <InnerLayout exact path=\"/loanApprovalDetails\" component={LoanApprovalDetails} />\r\n            <InnerLayout exact path=\"/allApplications\" component={AllApplications} />\r\n            <InnerLayout exact path=\"/emiCalculator\" component={EmiCalculator} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <InnerLayout path=\"/registration\" component={Registration} />\r\n                <InnerLayout path=\"/fillItr\" component={FillItr} />\r\n                <InnerLayout path=\"/CategoryList\" component={CategoryList} />\r\n                <InnerLayout path=\"/myCart\" component={MyCart} />\r\n                <InnerLayout path=\"/placeOrder\" component={PlaceOrder} />\r\n                <InnerLayout path=\"/orderSuccess\" component={OrderSuccess} />\r\n                <InnerLayout path=\"/adminHome\" component={AdminHome} />\r\n                <InnerLayout path=\"/categoryManagement\" component={CategoryManagement} />\r\n                <InnerLayout path=\"/addCategory\" component={AddCategory} />\r\n                <InnerLayout path=\"/orderHistory\" component={OrderHistory} />\r\n                <InnerLayout path=\"/userOrderHistory\" component={UserOrderHistory} />\r\n                <InnerLayout path=\"/userAction\" component={UserAction} />\r\n                <InnerLayout path=\"/productManagement\" component={ProductManagement} />\r\n                <InnerLayout path=\"/addProduct\" component={AddProduct} />\r\n                <InnerLayout path=\"/editProduct\" component={EditProduct} />\r\n                <InnerLayout path=\"/orderFailed\" component={OrderFailed} />\r\n                <InnerLayout path=\"/financeRequests\" component={FinanceRequests} />\r\n                <InnerLayout path=\"/form16Requests\" component={Form16Requests} />\r\n                <InnerLayout path=\"/inqueryForm\" component={InqueryForm} />\r\n                <InnerLayout path=\"/member\" component={Member} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store} from './store';\r\n\r\nimport Routes from './Routes';\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div className=\"App\">\r\n      {/* <Header/> */}\r\n      <Routes/>\r\n    </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}