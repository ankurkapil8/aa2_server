{"version":3,"sources":["agent.js","models/BaseUrl.js","constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/finance-Itr/ItrPopup.js","components/home/InqueryForm.js","components/layout/SectionMenu.js","components/layout/SectionOffers.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/layout/Header.js","components/home/Home.js","components/layout/ListErrors.js","components/users/Registration.js","components/users/Login.js","components/finance-Itr/FillItr.js","components/layout/InnerHeader.js","components/layout/Leftbar.js","components/layout/TopNav.js","components/layout/InnerLayout.js","components/food-order/AddCartButton.js","components/layout/Loader.js","components/food-order/CategoryList.js","components/food-order/MyCart.js","components/food-order/PlaceOrder.js","components/food-order/OrderSuccess.js","components/Admin/CategoryManagement.js","components/Admin/orders/OrderHistory.js","components/Admin/AddCategory.js","components/Admin/products/ProductManagement.js","components/Admin/products/AddProduct.js","components/Admin/products/EditProduct.js","components/Admin/finance/FinanceRequests.js","components/Admin/finance/Form16Requests.js","components/Admin/Home.js","components/users/UserOrderHistory.js","components/users/user-actions/UserAction.js","components/food-order/OrderFailed.js","models/masterRecord.js","components/masterRecord/memberGroup/MemberGroup.js","components/masterRecord/memberGroup/AddMemberGroup.js","models/memberDetails.js","components/masterRecord/member/AddMember.js","components/masterRecord/member/Member.js","components/masterRecord/member/MemberViewDetails.js","models/groupLoan.js","components/groupLoan/Scheme.js","components/groupLoan/AddScheme.js","components/dashboard/Dashboard.js","components/groupLoan/LoanApplication.js","components/groupLoan/LoanApproval.js","components/groupLoan/DisburseLoan.js","components/groupLoan/LoanApprovalDetails.js","components/groupLoan/AllApplications.js","components/groupLoan/EmiCalculator.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","responseBody","encodeURIComponent","res","errorBody","err","response","token","tokenPlugin","req","set","requests","url","get","use","then","body","post","Auth","login","email","password","register","userDetails","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","data","getCategoryAdmin","getOrdersHistoryAdmin","page","getOrderHistoryByUserEmail","addCategory","deleteCategory","del","editCategory","put","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","Inquery","submitInquery","getToken","setToken","_token","REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","statusCode","undefined","isLoginSuccess","subtype","key","value","common","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","record","prod","rootReducer","promiseMiddleware","store","next","v","dispatch","currentView","getState","viewChangeCounter","skipTracking","currentState","promise","error","localStorageMiddleware","window","localStorage","setItem","jwtToken","agent","createStore","reducer","composeWithDevTools","applyMiddleware","ItrPopup","props","Modal","show","isopen","onHide","hide","centered","className","Header","closeButton","Title","Body","to","pathname","query","InqueryForm","useState","fullName","business","dob","Date","gender","service","Phone","setState","dobstate","setdobstate","message","setmessage","loading","setloading","handleChange","e","target","name","console","log","Alert","variant","onClose","dismissible","Form","onSubmit","ev","preventDefault","serviceType","reset","Row","Group","as","Col","controlId","Label","Control","onChange","placeholder","selected","date","dateFormat","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","maxDate","defaultValue","readOnly","Button","disabled","Component","LogedInView","currentUser","aactiveClassName","LogedOutView","useDispatch","history","useHistory","split","isAdmin","isPrimeMember","onClick","push","handleITRPopup","id","this","connect","Home","ListErrors","Registration","submitForm","isLoading","required","Text","React","Login","changeEmail","onChangeEmail","changePassword","onChangePassword","onUnload","FillItr","setstate","isphoneinvalid","setisphoneinvalid","isemailinvalid","setiisemailinvalid","isaadharinvalid","setiisaadharinvalid","form16","setform16","handlePay","checkValidate","orderForService","location","onlinePayment","returnType","amount","options","updatePaymentState","rzp1","Razorpay","on","open","alert","status","obj","paymentObj","razorpay_order_id","paymentStatus","paymentResponse","metadata","order_id","handleSubmit","onFileUpload","paymentMode","formData","FormData","append","isInvalid","Feedback","rows","File","Input","accept","files","InnerHeader","Leftbar","Nav","Item","Link","href","class","eventKey","TopNav","Navbar","collapseOnSelect","expand","bg","toggleSidebar","Toggle","Collapse","InnerLayout","component","rest","showSidebar","setshowSidebar","useEffect","innerWidth","render","Container","fluid","md","sm","AddCartButton","initialAddItem","addItemInitial","increaseQuantity","decreaseQuantity","nextprops","arr","length","filter","Badge","Loader","Spinner","animation","role","CategoryList","getInitialData","a","showloader","all","categories","products","categoryList","itemList","changeCategory","catName","selectedTab","ListGroup","defaultActiveKey","active","index","CardColumns","Card","border","Img","src","imageUrl","title","Subtitle","description","Footer","MyCart","priceTotal","reduce","prevValue","currentValue","parseInt","Table","responsive","striped","bordered","colSpan","PlaceOrder","useSelector","authState","shipingDetails","setShipingDetails","showPayementModel","setshowPayementModel","isnameinvalid","setisnameinvalid","isaddressinvalid","setisaddressinvalid","totalQuantity","totalPrice","shippingObj","address","phone","city","street","landmark","items","shipping","selectPaymentMode","forEach","element","borderless","OrderSuccess","Heading","CategoryManagement","setShow","heading","setalert","handleClose","showLoader","getCategories","useMemo","col1","col2","col3","columns","accessor","useTable","initialState","pageIndex","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","pageOptions","previousPage","pageSize","gotoPage","nextPage","canPreviousPage","setPageSize","canNextPage","changeTab","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","width","height","viewBox","fill","xmlns","d","OrderHistory","getOrders","orderHistory","setorderHistory","selectedorder","setselectedorder","totalPage","settotalPage","isopenpopup","setisopenpopup","selectedPage","setselectedPage","number","Pagination","changePage","paginationBasic","totalOrders","datePlaced","itm","viewOrderPopUp","hover","isDiscountApplied","totalBillAmount","AddCategory","ProductManagement","col4","col5","col6","category","col7","Image","thumbnail","editProduct","AddProduct","setcategory","EditProduct","storeProduct","FinanceRequests","ITRrequests","setITRrequests","getITRrequests","firstName","lastName","aadhar","zip","Form16Requests","form16requests","setform16requests","getForm16requests","filePathArr","filePath","isShowLoader","setisShowLoader","setselectedTab","tab","UserOrderHistory","UserAction","OrderFailed","getMemberGroups","saveMemberGroups","MemberGroup","memberGroupRecords","setMemberGroupsRecords","getMemberGroup","masterRecord","size","group","group_code","group_name","remark","moment","created_at","format","AddMemberGroup","values","setValues","isShow","showToast","setShowToast","formik","useFormik","initialValues","validate","resetForm","prevValues","Toast","autohide","delay","touched","getMemberDetailsData","saveMemberDetails","deleteMember","AddMember","enrollmentDate","setEnrollmentDate","setDob","groups","setGroups","enrollment_date","date_of_birth","member_name","age","marital_status","mobile_number","email_id","member_group_id","aadhar_number","pan_card_number","driving_license_number","voter_id_number","ration_card_number","memberDetails","merital_status","Members","showDeleteModel","setShowDeleteModel","deleteID","setDeleteID","memberRecords","setMemberRecords","memberRecord","UpdatedList","member","idx","member_id","deleteHandle","getScheme","saveScheme","deleteScheme","getLoanAppInitialData","applyForloan","getApprovalList","getDisburseList","getLoanDetailbyId","approveRejectLoan","getAllLoanApplications","disburseRejectLoan","calculateEMI","Scheme","schemes","setSchemes","getSchemes","groupLoan","scheme","scheme_code","scheme_name","max_amount","interest_rate","EMI_type","AddScheme","min","Dashboard","xs","text","style","LoanApplication","schemeRecords","setSchemeRecords","selectedScheme","setSelectedScheme","getSchemesAndMembers","scheme_id","application_date","loan_amount","EMI_payout","tenure","schems","LoanApproval","loanlist","setLoanlist","getLoanList","loan","loan_id","DisburseLoan","LoanApprovalDetails","loanDetails","setLoanDetails","showApprovalButton","setShowApprovalButton","showDisburseButton","setShowDisburseButton","getLoanDetails","is_approved","is_disbursed","actionOnLoan","actionType","actionDisburseLoan","header","Tenure","AllApplications","formatedData","actionStatus","EmiCalculator","calculatedData","setCalculatedData","loanStartDate","EMI","principal","int_amount","outstanding","Routes","exact","path","MemberViewDetails","AdminHome","Member","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.589164eb.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = '/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  // del: url =>\r\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\r\n  // put: (url, body) =>\r\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (email, password) =>\r\n    requests.post('/user/login',  { email, password } ),\r\n  register: (userDetails) =>\r\n    requests.post('/user/registration',  userDetails ),\r\n};\r\n\r\nconst Order = {\r\n  getProductsByCat:(catname)=>\r\n  requests.get(`/products?category=${catname}`),\r\n  getCatgoryInitialData:()=>{\r\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\r\n  },\r\n  placeOrder:(data)=>{\r\n    //requests.post(\"/orders/place-order\",data)\r\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\r\n  },\r\n  getCategoryAdmin(){\r\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\r\n  },\r\n  getOrdersHistoryAdmin(page){\r\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\r\n  },\r\n  getOrderHistoryByUserEmail(){\r\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\r\n  },\r\n  addCategory(data){\r\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  deleteCategory(data){\r\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\r\n  },\r\n  editCategory(data){\r\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  getProducts(){\r\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\r\n  },\r\n  deleteProduct(data){\r\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\r\n  },\r\n  addProducts(data){\r\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  },\r\n  editProducts(data){\r\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Payment = {\r\n  getRazorpayOrderId(data){\r\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\r\n  },\r\n  updatePaymentStatus(data){\r\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Finance = {\r\n  fillItr(data){\r\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\r\n  },\r\n  getAdminItr(){\r\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\r\n  },\r\n  uploadForm16(data){\r\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\r\n  },\r\n  getAdminForm16(){\r\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\r\n  },\r\n  downloadForm16(data){\r\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\r\n  }\r\n \r\n}\r\nconst Inquery = {\r\n  submitInquery(data){\r\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\r\n  }\r\n}\r\nexport default {\r\n  Auth,\r\n  Order,\r\n  Payment,\r\n  Finance,\r\n  Inquery,\r\n  getToken:()=>{return token},\r\n  setToken: _token => { token = _token; }\r\n};","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nexport const superagent = superagentPromise(_superagent, global.Promise);\r\nexport const API_ROOT = 'https://aa2microfinance.herokuapp.com/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\nexport const requests = {\r\n    del: url =>\r\n      superagent.del(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    get: url =>\r\n      superagent.get(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    // put: (url, body) =>\r\n    //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n    post: (url, body) =>\r\n      superagent.post(`${API_ROOT}${url}`, body).then(responseBody,errorBody)\r\n  };","\r\n  \r\nexport const APP_LOAD = 'APP_LOAD';\r\nexport const REDIRECT = 'REDIRECT';\r\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\r\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\r\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\r\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\r\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\r\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\nexport const SET_PAGE = 'SET_PAGE';\r\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\r\nexport const CHANGE_TAB = 'CHANGE_TAB';\r\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\r\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\r\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\r\nexport const ASYNC_START = 'ASYNC_START';\r\nexport const ASYNC_END = 'ASYNC_END';\r\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\r\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const REMOVE_TAG = 'REMOVE_TAG';\r\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\r\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\r\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\r\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const RESET_ORDER = 'RESET_ORDER';\r\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\r\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';","import {\r\n    ADD_ITEM_INITIAL,\r\n    INCREASE_QUANTITY,\r\n    DECREASE_QUANTITY,\r\n    RESET_ORDER\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    addedItem: [],\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case ADD_ITEM_INITIAL:\r\n            const addedItem =[...state.addedItem,{\r\n                productId:action.item._id,\r\n                quantity:1,\r\n                perItemPrice:action.item.price,\r\n                item:action.item\r\n            }]\r\n            return {...state, addedItem};\r\n        case INCREASE_QUANTITY:\r\n             state.addedItem.map(record=>{\r\n                if(record.productId == action.productId){\r\n                    record.quantity +=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case DECREASE_QUANTITY:\r\n            state.addedItem.map(record=>{\r\n                if(record.productId == action.productId && record.quantity !=0){\r\n                        record.quantity -=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case RESET_ORDER:\r\n            state.addedItem = []\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import {\r\n    STORE_EDIT_PRODUCT,\r\n    GET_EDIT_PRODUCT,\r\n    UPDATE_PRODUCT_FIELD\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    product: {},\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case STORE_EDIT_PRODUCT:\r\n            return {...state,\r\n                product:action.data \r\n            };\r\n        case GET_EDIT_PRODUCT:\r\n            return {...state};\r\n        case UPDATE_PRODUCT_FIELD:\r\n            let prod = state.product;\r\n            prod[action.data.key]=action.data.value;\r\n           return {...state,product:prod}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import auth from './reducers/auth';\r\nimport common from './reducers/common';\r\nimport order from './reducers/order';\r\nimport product from './reducers/product';\r\nimport { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  common,\r\n  order,\r\n  product\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\nexport default rootReducer\r\n// export default combineReducers({\r\n//   auth,\r\n//   common,\r\n//   order,\r\n//     //router: routerReducer\r\n//   });","import {\r\n    LOGIN,\r\n    REGISTER,\r\n    LOGIN_PAGE_UNLOADED,\r\n    REGISTER_PAGE_UNLOADED,\r\n    ASYNC_START,\r\n    UPDATE_FIELD_AUTH,\r\n    LOGOUT\r\n  } from '../constants/actionTypes';\r\n  \r\n  export default (state = {}, action) => {\r\n  //console.log(action);\r\n    switch (action.type) {\r\n      case LOGIN:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload != undefined?action.payload.statusCode:\"\",\r\n          isLoginSuccess:action.payload != undefined? (action.payload.statusCode == 200?true:false):false\r\n        }\r\n      case REGISTER:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload.statusCode\r\n        };\r\n      case LOGIN_PAGE_UNLOADED:\r\n      return{\r\n        ...state,\r\n        //errors: action.payload,\r\n        //userDetails:\r\n      }\r\n      case REGISTER_PAGE_UNLOADED:\r\n        return {};\r\n      case ASYNC_START:\r\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\r\n          return { ...state, inProgress: true };\r\n        }\r\n        break;\r\n      case UPDATE_FIELD_AUTH:\r\n        return { ...state, [action.key]: action.value };\r\n      default:\r\n        return state;\r\n    }\r\n    return state;\r\n  };","import {\r\n    LOGOUT,\r\n    REDIRECT\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0\r\n  };\r\n  \r\n  export default (state = {}, action) => {\r\n    //console.log(action);\r\n      switch (action.type) {\r\n        case REDIRECT:\r\n            return { ...state, redirectTo: null };\r\n        // case LOGOUT:\r\n        //     return { redirectTo: '/login', token: null, currentUser: null };\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import agent from './agent';\r\nimport {\r\n  ASYNC_START,\r\n  ASYNC_END,\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER\r\n} from './constants/actionTypes';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\r\n\r\n    const currentView = store.getState().viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === LOGIN && action.payload != undefined) {\r\n    if (action.payload.statusCode==200) {\r\n      window.localStorage.setItem('jwt', action.payload.body.jwtToken);\r\n      agent.setToken(action.payload.body.jwtToken);\r\n    }\r\n  } else if (action.type === LOGOUT) {\r\n    window.localStorage.setItem('jwt','');\r\n    agent.setToken(null);\r\n  }\r\n\r\n   next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nconst getMiddleware = () => {\r\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\r\n  };\r\nexport const store = createStore(reducer,composeWithDevTools(getMiddleware()));","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//import \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction ItrPopup(props) {\r\n    return (\r\n    <Modal show={props.isopen} onHide={props.hide} centered className=\"text-center\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Tax Return</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'fill'}}}  className=\"btn btn-danger btn-sm\">Start Your Tax Return</Link>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'uploadForm16'}}} className=\"btn btn-danger btn-sm\">Upload Form-16 Now</Link>\r\n            </Modal.Body>\r\n        </Modal>\r\n        )\r\n}\r\n\r\nexport default ItrPopup\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Col, Row, Container, Modal,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction InqueryForm(props) {\r\n    const [state, setState] = useState(\r\n        {fullName:\"\",\r\n            email:\"\",\r\n            business:\"\",\r\n            dob:new Date(),\r\n            gender:\"\",\r\n            service:\"\",\r\n            Phone:\"\"\r\n        });\r\n    const [dobstate, setdobstate] = useState(new Date());\r\n    const [message, setmessage] = useState({type:\"\",message:\"\"})\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const handleChange = (e)=>{\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n    }\r\n    const handleSubmit = (ev)=>{\r\n        ev.preventDefault();\r\n\r\n        state[\"dob\"] = dobstate;\r\n        state[\"service\"] = props.serviceType;\r\n        setState(state);\r\n        console.log(state);\r\n        setloading(true);\r\n        agent.Inquery.submitInquery(state).then((res=>{\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                message.type = \"success\";\r\n                message.message = \"Your Details has been submited. Our agent will contact you soon.\"\r\n            }else{\r\n                message.type = \"error\";\r\n                message.message = \"Something went wrong. Please try again.\"\r\n            }\r\n            setmessage(message);\r\n            setloading(false);\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n\r\n        <Modal show={props.isopen} onHide={props.hide} >\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Enquiry</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {  message.type != \"\"? \r\n                message.type ==\"success\"?\r\n                <Alert key={message.type} variant={\"success\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:<Alert key={message.type} variant={\"danger\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:\"\"        \r\n                }\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                            <Form.Label>Full Name</Form.Label>\r\n                            <Form.Control onChange={handleChange} type=\"text\" name=\"fullName\"/>\r\n                        </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" onChange={handleChange} name=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Business</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"business\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Date of Birth</Form.Label>\r\n                        <DatePicker\r\n                         selected={dobstate} \r\n                         onChange={date=>setdobstate(date)}\r\n                         dateFormat=\"dd/MM/yyyy\"\r\n                         showYearDropdown\r\n                         dateFormatCalendar=\"MMMM\"\r\n                         yearDropdownItemNumber={50}\r\n                         scrollableYearDropdown\r\n                         maxDate={new Date()}\r\n                         />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Gender</Form.Label>\r\n                    <Form.Control name=\"gender\" as=\"select\" onChange={handleChange} defaultValue=\"Choose...\">\r\n                        <option>Choose...</option>\r\n                        <option value=\"male\">Male</option>\r\n                        <option value=\"female\">Female</option>\r\n                    </Form.Control>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Service</Form.Label>\r\n                        <Form.Control onChange={handleChange} type=\"text\" name=\"service\" value={props.serviceType} readOnly/>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"phone\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Submit\"}\r\n\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InqueryForm\r\n","import React, { Component} from 'react'\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\nimport InqueryForm from '../home/InqueryForm'\r\nimport {Link} from 'react-router-dom';\r\n\r\n  class SectionMenu extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false,\r\n        openEnqueryForm:false,\r\n        serviceType:\"\"\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n      this.setState({\r\n        isopen:this.state.isopen?false:true\r\n      })\r\n    }\r\n    handleEnqueryForm = (serviceType = \"\")=>{\r\n      console.log(serviceType);\r\n      this.setState({\r\n        openEnqueryForm:this.state.openEnqueryForm?false:true,\r\n        serviceType:serviceType\r\n      })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n          <>\r\n            <section className=\"text-center \">\r\n            <div className=\"container\">\r\n              <div className=\"col-md-12 shadow-sm p-5 service \">\r\n                <div className=\"row roww\">\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={this.handleITRPopup}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/itr.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Fill ITR</h5>\r\n                  </div>\r\n                 \r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box \">\r\n                  <Link to=\"/CategoryList\">\r\n                    <img  src={process.env.PUBLIC_URL + '/assets/img/food.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">FOOD</h5></Link>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Catering\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/catering.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Catering</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Balance Sheet\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/finance.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Financial Consultancy</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Investment Planning\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/investment.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Investment Planning</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"GST filing\")}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/gst.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">GST Filing </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n          <InqueryForm isopen={this.state.openEnqueryForm} serviceType={this.state.serviceType} hide={this.handleEnqueryForm}/>         \r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default SectionMenu\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SectionOffers extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"text-center\">\r\n                <div className=\"container\">\r\n                    <h4 className=\"h4-responsive font-weight-bold my-3 text-primary\">Best Offers</h4>\r\n                    <div className=\"row my-5\">\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-1.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 1</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 50% Off\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-2.jpg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 2</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 60% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-4.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 3</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Up to 50% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-3.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 4</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Standard EMI Options Available\r\n                  </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\n\r\nfunction LogedInView(props) {\r\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\r\n        return (\r\n\r\n        <li className=\"nav-item\">\r\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default LogedInView\r\n","import React from 'react'\r\nimport { Route, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    LOGOUT\r\n  } from '../../constants/actionTypes';\r\nfunction LogedOutView(props) {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const logout = ()=>{\r\n         dispatch({ type: LOGOUT })\r\n           console.log(\"hollo\");\r\n           history.push(\"/\");\r\n       }\r\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\r\n        let name = props.currentUser.email.split(\"@\");\r\n\r\n        return (<>\r\n            \r\n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\r\n            <li className=\"nav-item\">\r\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\r\n            </li>\r\n                \r\n            </li>:\"\"}            \r\n            <li className=\"nav-item\">\r\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\r\n                    {name[0]}\r\n\r\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \r\n\r\n                    \r\n                    </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\r\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\r\n            </li>\r\n        </>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LogedOutView\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass Header extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n  \r\n    render(){\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                            {/* <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                            </li>\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                                <NavLink activeClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                                \r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"view\">\r\n                <div className=\"mask rgba-gradient d-flex justify-content-center align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 white-text text-center mx-auto  mb-5 wow fadeInLeft\" data-wow-delay=\"0.3s\">\r\n                                <h1 className=\"my-3 text-center mx-auto font-weight-bold wow fadeInLeft\">Services, on demand.</h1>\r\n\r\n                                <div className=\"ml-auto mr-auto main-search \">\r\n\r\n                                    <form action=\"\" className=\"search-service\">\r\n                                        <input className=\"search-form form-control form-control-lg\" type=\"text\" placeholder=\"Search Services\" />\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport SectionMenu from '../layout/SectionMenu'\r\nimport SectionOffers from '../layout/SectionOffers'\r\nimport Header from '../layout/Header'\r\nimport Footer from '../layout/Footer'\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <SectionMenu />\r\n            {/* <SectionOffers /> */}\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\n\r\nexport default class ListErrors extends Component {\r\n    render() {\r\n        const errors = this.props.errors;\r\n        const statusCode = this.props.statusCode;\r\n        if (errors) {\r\n            return (\r\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\r\n                    {errors.body.message}\r\n              </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\n\r\n\r\nclass Registration extends React.Component {    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userDetails: {},\r\n            errors:\"\",\r\n            statusCode:\"\",\r\n            isLoading:false\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        this.setState({ userDetails: state });\r\n        \r\n    }\r\n    submitForm=() => ev =>{\r\n        ev.preventDefault();\r\n        this.setState({ isLoading: true });\r\n        agent.Auth.register(this.state.userDetails).then((res=>{\r\n            this.setState({ errors: res, statusCode:res.statusCode, isLoading:false});\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                //this.props.history.push('/login')\r\n            }\r\n        }));\r\n    }\r\n    render() {\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <ListErrors errors={this.state.errors} statusCode={this.state.statusCode} />\r\n            <Form className=\"login-form\" onSubmit={this.submitForm()}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\" >\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"phone\" name=\"phone\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your phone no with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col}  controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\"  onChange={this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.state.isLoading}>\r\n                        \r\n                        {this.state.isLoading ? 'Loading…' : \"Register\"}\r\n                    </Button>\r\n                </Form.Row>\r\n\r\n            </Form>\r\n        </div>\r\n\r\n    )}\r\n}\r\n\r\nexport default Registration\r\n","import React, { Component}  from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\n\r\nimport {\r\n    UPDATE_FIELD_AUTH,\r\n    LOGIN,\r\n    LOGIN_PAGE_UNLOADED\r\n} from '../../constants/actionTypes';\r\n\r\nclass Login extends Component {\r\n   // let history = useHistory();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\r\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\r\n        this.submitForm = (email, password) => ev => {\r\n            ev.preventDefault();\r\n            this.props.onSubmit(email, password);\r\n        };\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.props.isLoginSuccess){\r\n            this.props.history.push('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.props.onUnload();\r\n      }\r\n    render() {\r\n        const email = this.props.email;\r\n        const password = this.props.password;\r\n        return (\r\n            <>\r\n            <div className=\"login-div\">\r\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\r\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\r\n                <Form className=\"login-form\" onSubmit={this.submitForm(email, password)}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={this.changeEmail} required/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={password}  onChange={this.changePassword} required/>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Button variant=\"primary\" disabled={this.props.inProgress} type=\"submit\">{this.props.inProgress ? 'Loading…' : \"Login\"}\r\n                            \r\n                    </Button>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Link as={Col} to=\"/registration\" > SignUp</Link>\r\n                    </Form.Row>\r\n\r\n                </Form>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeEmail: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'email', value }),\r\n    onChangePassword: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n    onSubmit: (email, password) =>\r\n        dispatch({ type: LOGIN, payload: agent.Auth.login(email, password) }),\r\n    onUnload: () =>\r\n        dispatch({ type: LOGIN_PAGE_UNLOADED })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React,{useState} from 'react'\r\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';\r\nimport './Finance.css';\r\nimport agent from '../../agent'\r\n// import {KEY_ID,KEY_SECRET} from '../../constants/paymantConstants'\r\n\r\nfunction FillItr(props) {\r\n    const [state, setstate] = useState({});\r\n    const [loading, setloading] = useState(false);\r\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\r\n    const [isemailinvalid,setiisemailinvalid] = useState(false);\r\n    const [isaadharinvalid,setiisaadharinvalid] = useState(false);\r\n    const [form16, setform16] = useState([]);\r\n    console.log(props);\r\n    const handleChange = (e) => {\r\n        state[e.target.name] = e.target.value;\r\n        setstate(state);\r\n    }\r\n\r\n    const handlePay=()=>{\r\n        setloading(true);\r\n        if(checkValidate()){\r\n            console.log(\"Valid Form\");\r\n            let orderForService = \"Form16\";\r\n            if(props.location.query?.type == \"fill\"){\r\n                orderForService = \"ITR\"\r\n            }\r\n            onlinePayment(orderForService);\r\n        }else{\r\n            console.log(\"invalid from\")\r\n            setloading(false);\r\n\r\n        }\r\n    } \r\n\r\n    const checkValidate=()=>{\r\n        let returnType = true;\r\n        setisphoneinvalid(false);\r\n        setiisemailinvalid(false);            \r\n        setiisaadharinvalid(false);\r\n\r\n        if(state[\"phone\"] ==undefined || state[\"phone\"] ==\"\"){\r\n            setisphoneinvalid(true);\r\n            returnType = false\r\n        }\r\n        if((state[\"email\"] ==undefined || state[\"email\"] ==\"\") && props.location.query?.type == \"fill\" ){\r\n            setiisemailinvalid(true);            \r\n            returnType = false\r\n        } \r\n        if((state[\"aadhar\"] ==undefined || state[\"aadhar\"] ==\"\") && props.location.query?.type == \"fill\"){\r\n            setiisaadharinvalid(true);\r\n            returnType = false\r\n        } \r\n        return returnType;\r\n    } \r\n\r\n    const onlinePayment = (orderForService = \"ITR\")=>{\r\n        let amount = 300;\r\n        agent.Payment.getRazorpayOrderId({amount:amount,orderForService:orderForService}).then((res=>{\r\n            if(res.statusCode == 200){\r\n                console.log(res);\r\n                var options = {\r\n                    \"key\": \"1234\", // Enter the Key ID generated from the Dashboard\r\n                    \"amount\": amount*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n                    \"currency\": \"INR\",\r\n                    \"name\": \"Guest\",\r\n                    \"description\": \"ITR Fill Transaction\",\r\n                    \"image\": \"https://example.com/your_logo\",\r\n                    \"order_id\": res.body.record.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n                    \"handler\": function (response){\r\n                        updatePaymentState(\"success\",response);\r\n                    },                \r\n                    \"theme\": {\r\n                        \"color\": \"#3399cc\"\r\n                    }\r\n                };   \r\n                // console.log(options); \r\n                const rzp1 = new window.Razorpay(options);\r\n                rzp1.on('payment.failed', function (response){\r\n                    updatePaymentState(\"failed\",response);\r\n    \r\n                });            \r\n                rzp1.open();\r\n    \r\n            }else{\r\n                setloading(false);\r\n\r\n                alert(res.body)\r\n\r\n            }\r\n        }));\r\n    \r\n    }\r\n    const updatePaymentState=(status,obj)=>{\r\n        let orderId = \"\";\r\n        let paymentObj = {\r\n            razorpay_order_id:\"\",\r\n            paymentStatus:\"\",\r\n            paymentResponse:\"\"\r\n        }\r\n        if(status == \"success\"){\r\n            paymentObj.razorpay_order_id = obj.razorpay_order_id;\r\n            paymentObj.paymentStatus = status;\r\n            paymentObj.paymentResponse = obj;\r\n        }\r\n        if(status == \"failed\"){\r\n            paymentObj.razorpay_order_id = obj.error.metadata.order_id;\r\n            paymentObj.paymentStatus = status;\r\n            paymentObj.paymentResponse = obj;\r\n        }\r\n        try{\r\n            agent.Payment.updatePaymentStatus(paymentObj).then((res=>{\r\n                if(res.statusCode ==200 && status == \"success\"){\r\n                    if(props.location.query?.type == \"fill\"){\r\n                        handleSubmit(paymentObj.razorpay_order_id);\r\n                    }else{\r\n                        onFileUpload(paymentObj.razorpay_order_id);\r\n                    }\r\n                }\r\n                if(res.statusCode ==200 && status == \"failed\"){\r\n                    setloading(false);\r\n                    props.history.push('/orderFailed')\r\n    \r\n                }\r\n    \r\n            }),(err)=>{\r\n                console.log(err.response.body.message);\r\n            });\r\n        }catch(err){\r\n            alert(err);\r\n        }\r\n    }\r\n    const handleSubmit = ( razorpay_order_id, paymentMode=\"online\") =>{\r\n        state[\"razorpay_order_id\"] = razorpay_order_id;\r\n        state[\"paymentMode\"] = paymentMode;\r\n        setstate(state);\r\n        agent.Finance.fillItr(state).then((res=>{\r\n            setloading(false);\r\n            if(res.statusCode ==200){\r\n                props.history.push('/orderSuccess');\r\n            }\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });\r\n    } \r\n    const handleFileUpload = (e)=>{\r\n        setform16(e.target.files[0]);   \r\n    }\r\n    const onFileUpload=(razorpay_order_id)=>{\r\n        const formData = new FormData(); \r\n        formData.append( \r\n          \"myFile\", \r\n          form16, \r\n          form16.name\r\n        ); \r\n        formData.append(\"razorpay_order_id\",razorpay_order_id);        \r\n        formData.append(\"phone\",state[\"phone\"]);        \r\n        agent.Finance.uploadForm16(formData).then((res=>{\r\n            setloading(false);\r\n            if(res.statusCode ==200){\r\n                props.history.push('/orderSuccess');\r\n            }\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });   \r\n\r\n    }\r\n    if(props.location.query?.type == \"fill\"){\r\n        return (\r\n            <>\r\n            <h4 className=\"py-5 text-center\"><b>Fill ITR</b></h4>\r\n            <Form className=\"m-5\">\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">First name</Form.Label>\r\n                        <Form.Control name=\"firstName\" onChange={handleChange}  type=\"text\"  />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridlastName\">\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control name=\"lastName\" onChange={handleChange} type=\"text\"  />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">Phone*</Form.Label>\r\n                        <Form.Control name=\"phone\" onChange={handleChange}  type=\"text\"  isInvalid={isphoneinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a phone number.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n    \r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridBusiness\">\r\n                        <Form.Label>Business Name</Form.Label>\r\n                        <Form.Control name=\"business\" onChange={handleChange} type=\"text\" placeholder=\"ABC limited\" />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group  as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Email*</Form.Label>\r\n                        <Form.Control name=\"email\" onChange={handleChange} type=\"email\" placeholder=\"you@example.com\" isInvalid={isemailinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a Email.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridAadhar\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control name=\"address\" onChange={handleChange} as=\"textarea\" rows={3} />\r\n                    </Form.Group>\r\n                    </Form.Row><Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAadhar\">\r\n                        <Form.Label>Aadhar Number*</Form.Label>\r\n                        <Form.Control name=\"aadhar\" onChange={handleChange} type=\"text\" isInvalid={isaadharinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide aadhar number.\r\n                        </Form.Control.Feedback>                    \r\n    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Service</Form.Label>\r\n                        <Form.Control name=\"service\" onChange={handleChange} as=\"select\" defaultValue=\"Choose...\">\r\n                            <option>Choose...</option>\r\n                            <option>Balance Sheet</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress\">\r\n                        <Form.Label>PAN Number</Form.Label>\r\n                        <Form.Control name=\"pan\" onChange={handleChange} type=\"text\" />\r\n                    </Form.Group>\r\n    \r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridZip\">\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange} name=\"zip\"/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button variant=\"danger\" className=\"center\" type=\"button\" onClick={handlePay} disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Pay Now\"}\r\n                </Button>\r\n            </Form>\r\n            </>\r\n            )\r\n    \r\n    }else{\r\n        return (  <div className=\"login-div\">\r\n                <Form className=\"login-form\">\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">Phone*</Form.Label>\r\n                        <Form.Control name=\"phone\" onChange={handleChange}  type=\"text\"  isInvalid={isphoneinvalid}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We will contact you at this phone number.\r\n                        </Form.Text>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a phone number.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.File id=\"formcheck-api-regular\">\r\n                        <Form.Label variant=\"primary\">Form16*</Form.Label>\r\n                            <Form.File.Input accept=\".pdf\" onChange={handleFileUpload}/>\r\n                        </Form.File>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Only PDF file.\r\n                        </Form.Text>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Button variant=\"danger\"  type=\"button\" onClick={handlePay} disabled={loading}>{loading ? 'Loading…' : \"Pay Now\"}\r\n                    </Button>\r\n                    </Form.Row>\r\n                </Form>\r\n                </div>\r\n    )\r\n    }       \r\n}\r\n\r\nexport default FillItr\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass InnerHeader extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n    render(){\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\r\n                <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                                {/* <a className=\"nav-link\" href=\"#\">Home\r\n                    <span className=\"sr-only\">(current)</span>\r\n                                </a> */}\r\n                            {/* </li> */}\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\"> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\r\n                                {/* <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n\r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\r\n","import React from 'react'\r\n\r\nimport { Col, Nav,  } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nexport default function Leftbar() {\r\n    return (\r\n        // <Col md={2} id=\"sidebar-col\" className=\"pr-0\">\r\n            <nav id=\"sidebar\">\r\n                <div className=\"sidebar-header\">\r\n                    <h5>AA2 MutualHelp</h5>\r\n                </div>\r\n                <Nav className=\"list-unstyled components flex-column\" as=\"ul\" >\r\n                <Nav.Item as=\"li\" className=\"active\">\r\n                <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                     Dashboard\r\n            </Nav.Link>\r\n            </LinkContainer>\r\n                </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                   \r\n                        <Nav.Link href=\"#homeSubmenu\" className=\"dropdown-toggle\" data-toggle=\"collapse\" aria-expanded=\"false\">Master Record</Nav.Link>\r\n                        \r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"homeSubmenu\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/memberGroup\">\r\n                                <Nav.Link href=\"/home\">Member Group</Nav.Link>\r\n                                </LinkContainer>\r\n                                {/* <NavLink to=\"/memberGroup\">Member Group</NavLink> */}\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/member\">\r\n                                <Nav.Link eventKey=\"link-1\">Members</Nav.Link>\r\n                            </LinkContainer>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#groupLoan\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Group Loan</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"groupLoan\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/emiCalculator\">\r\n                                <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/scheme\">\r\n                                <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/loanApplication\">\r\n                                <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/loanApproval\">\r\n                                <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/disburseLoan\">\r\n                                <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/allApplications\">\r\n                                <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#processingFee\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"processingFee\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"#\">List Processing Fee</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#expense\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Expense</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"expense\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"#\">List Expense</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#payments\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Payment to collect</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"payments\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"#\">Payment to collect(Loan)</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </nav>\r\n        // </Col>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\n\r\nexport default function TopNav(props) {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\r\n            <button type=\"button\" onClick={props.toggleSidebar} class=\"btn btn-dark\">\r\n                <i class=\"fas fa-align-left\"></i>\r\n            </button>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link href=\"#deets\">Ankit Yadav</Nav.Link>\r\n                    <Nav.Link eventKey={2} href=\"#memes\">\r\n                        Logout\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport InnerHeader from './InnerHeader';\r\nimport Footer from './Footer';\r\nimport Leftbar from './Leftbar';\r\nimport TopNav from './TopNav';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst InnerLayout = ({ component: Component, ...rest }) => {\r\n    const [showSidebar, setshowSidebar] = useState(true)\r\n    useEffect(() => {\r\n        setshowSidebar(window.innerWidth <= 768 ? false : true);\r\n    }, [Component]);\r\n    const toggleSidebar = () => {\r\n\r\n        console.log(window);\r\n        setshowSidebar(showSidebar ? false : true)\r\n        // this.setState({\r\n        //   isopen:this.state.isopen?false:true\r\n        // })\r\n    }\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <>\r\n            \r\n            <Container fluid className=\"pl-0 pr-0\">\r\n            <Row>\r\n                <Col>\r\n                <TopNav toggleSidebar={toggleSidebar} />\r\n                </Col>\r\n            \r\n            </Row>\r\n                \r\n                <Row>\r\n                    \r\n                        {showSidebar ?<Col md={2} sm={2} id=\"sidebar-col\" className=\"bg-info\"><Leftbar/></Col> : \"\"}\r\n                        \r\n                   \r\n                    <Col sm={showSidebar ? 10 : 12} >\r\n                        <div id=\"content\">\r\n\r\n                            <Component {...props} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* <Footer /> */}\r\n                </Container>\r\n            </>\r\n        )} />)\r\n}\r\n\r\nexport default InnerLayout\r\n","import React ,{Component}from 'react'\r\nimport { Badge } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    ADD_ITEM_INITIAL,\r\n    DECREASE_QUANTITY,\r\n    INCREASE_QUANTITY\r\n} from '../../constants/actionTypes';\r\n \r\nclass AddCartButton extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(props);\r\n        this.initialAddItem = (item) => ev => {\r\n            ev.preventDefault();\r\n            this.props.addItemInitial(item);\r\n        };\r\n        this.increaseQuantity = (productId) =>ev =>{\r\n            ev.preventDefault();\r\n            this.props.increaseQuantity(productId);\r\n        }\r\n        this.decreaseQuantity = (productId) =>ev =>{\r\n            ev.preventDefault();\r\n            this.props.decreaseQuantity(productId);\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops){\r\n    }\r\n    render(){\r\n    let arr = []\r\n     arr= this.props.addedItem.filter(record=>record.productId==this.props.item._id);\r\n    let length = arr.length;\r\n    console.log(length);\r\n    console.log(this.props.addedItem);\r\n    if(!length){\r\n        return (\r\n            <Badge variant=\"danger\" className=\"pointer\" onClick={this.initialAddItem(this.props.item)}>ADD+</Badge> \r\n        )\r\n    }else{\r\n        return (\r\n            <>\r\n                <Badge className=\"pointer\" variant=\"primary\" onClick={this.decreaseQuantity(arr[0].productId)}>-</Badge> \r\n                <Badge variant=\"danger\">{arr[0].quantity}</Badge> \r\n                <Badge className=\"pointer\" variant=\"primary\" onClick={this.increaseQuantity(arr[0].productId)}>+</Badge> \r\n            </>\r\n        )}\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.order });\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItemInitial: item =>\r\n        dispatch({ type: ADD_ITEM_INITIAL, item }),\r\n    increaseQuantity: productId =>\r\n        dispatch({ type: INCREASE_QUANTITY, productId }),\r\n    decreaseQuantity: productId =>\r\n        dispatch({ type: DECREASE_QUANTITY, productId }),\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddCartButton)\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader(props) {\r\n    if(props.show){\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\" className=\"loader\">\r\n            </Spinner>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component } from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport AddCartButton from './AddCartButton';\r\nimport Loader from '../layout/Loader';\r\nexport class CategoryList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categoryList:[],\r\n            itemList:[],\r\n            showloader:false,\r\n            selectedTab:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n     // this.getCategories();\r\n     //this.getInitialData();\r\n    }\r\n    selectItem(ev){\r\n        console.log(ev);\r\n    }\r\n     getInitialData=async ()=>{\r\n        this.setState({\r\n            showloader:true\r\n        })\r\n\r\n        const [categories, products] =await Promise.all(agent.Order.getCatgoryInitialData())\r\n        if(categories.statusCode == 200){\r\n            this.setState({\r\n                categoryList:categories.body.record\r\n            })\r\n        }\r\n        if(products.statusCode == 200){\r\n            this.setState({\r\n                itemList:products.body.record\r\n            })\r\n        }\r\n        this.setState({\r\n            showloader:false\r\n        })\r\n\r\n\r\n    }\r\n    changeCategory= (catName=\"\") => ev =>{\r\n        this.setState({\r\n            showloader:true\r\n        })\r\n        this.setState({\r\n            selectedTab:catName\r\n        })\r\n        agent.Order.getProductsByCat(catName).then(products=>{\r\n            this.setState({\r\n                showloader:false\r\n            })\r\n    \r\n            if(products.statusCode == 200){\r\n                this.setState({\r\n                    itemList:products.body.record\r\n                })\r\n            }\r\n    \r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col  md={3} className=\"p-4\" >\r\n                            <ListGroup defaultActiveKey=\"all\">\r\n                            <ListGroup.Item className=\"mobile-list\" key={\"all\"} active={this.state.selectedTab==\"\"?true:false}  onClick={this.changeCategory()}>All category</ListGroup.Item>\r\n                                {this.state.categoryList.map(\r\n                                    (item,index)=><ListGroup.Item className=\"mobile-list\" key={index} active={this.state.selectedTab==item.name?true:false}  action onClick={this.changeCategory(item.name)}>{item.name}</ListGroup.Item>\r\n                                    )}\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={9} className=\"p-4 production-col\" >\r\n                        <Loader show={this.state.showloader}/>\r\n                            <CardColumns>\r\n                            {this.state.itemList.map(\r\n                                (item,index)=> \r\n                                <Card border=\"danger\" key={index}>\r\n                                    <Card.Img variant=\"top\" src={item.imageUrl} />\r\n                                    <Card.Body>\r\n                                        <Card.Title>{item.title}</Card.Title>\r\n                                        <Card.Subtitle className=\"mb-2 text-muted\"><span>&#8377;</span>{item.price}</Card.Subtitle>\r\n                                        <Card.Text>\r\n                                        {item.description}\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                    <Card.Footer>\r\n                                        <AddCartButton  item={item}/>\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                                    )}\r\n\r\n                            </CardColumns>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CategoryList\r\n","import React, {Component} from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport AddCartButton from './AddCartButton'\r\nclass MyCart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        const priceTotal = this.props.addedItem.reduce(\r\n            (prevValue, currentValue) => prevValue + (currentValue.quantity * parseInt(currentValue.perItemPrice)),\r\n            0\r\n          );\r\n        \r\n        return (\r\n            <Table responsive striped bordered className=\"cart-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product</th>\r\n                        <th>Quantity</th>\r\n                        <th>Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.addedItem.map(record=>\r\n                    <tr>\r\n                        <td>{record.item.title}</td>\r\n                        <td><AddCartButton  item={record.item}/></td>\r\n                        <td><span>&#8377;</span>{parseInt(record.perItemPrice)*record.quantity}</td>\r\n                    </tr>\r\n                    \r\n                    )}\r\n                </tbody>\r\n                <tfoot>\r\n                    {/* <tr>\r\n                        <td colSpan=\"2\">\r\n                            Prime member discount\r\n                        </td>\r\n                        <td>\r\n                            10%\r\n                        </td>\r\n    \r\n                    </tr> */}\r\n                    <tr>\r\n                        <td colSpan=\"2\">\r\n                            <h5>Total</h5>\r\n                        </td>\r\n                        <td>\r\n                        <span>&#8377;</span> {priceTotal}\r\n                        </td>\r\n    \r\n                    </tr>\r\n                </tfoot>\r\n            </Table>)\r\n    \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.order });\r\nconst mapDispatchToProps = dispatch => ({\r\n    // addItemInitial: item =>\r\n    //     dispatch({ type: ADD_ITEM_INITIAL, item }),\r\n    // increaseQuantity: productId =>\r\n    //     dispatch({ type: INCREASE_QUANTITY, productId }),\r\n    // decreaseQuantity: productId =>\r\n    //     dispatch({ type: DECREASE_QUANTITY, productId }),\r\n});\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MyCart)\r\n","import React,{useState} from 'react'\r\nimport { Table, Container, Row, Col,Form, Button, Modal} from 'react-bootstrap';\r\nimport { useSelector } from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport agent from '../../agent'\r\n// import {KEY_ID,KEY_SECRET} from '../../constants/paymantConstants'\r\n//import Razorpay from 'razorpay';\r\nfunction PlaceOrder(props) {\r\n    const order = useSelector(state => state.order);\r\n    const authState = useSelector(state => state.auth);\r\n    const [shipingDetails, setShipingDetails] = useState([]);\r\n    const [showPayementModel, setshowPayementModel] = useState(false);\r\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\r\n    const [isnameinvalid,setisnameinvalid] = useState(false);\r\n    const [isaddressinvalid,setisaddressinvalid] = useState(false);\r\n\r\n    let totalQuantity = 0;\r\n    let totalPrice = 0;\r\n\r\n    const products = order.addedItem.map(record=>                        \r\n    <tr>\r\n        <td>\r\n        {record.quantity} x {record.item.title}\r\n        </td>\r\n        <td>\r\n        <span>&#8377;</span> {record.quantity*parseInt(record. perItemPrice)}\r\n        </td>\r\n    </tr>\r\n);\r\nconst handleSubmit=(paymentMode=\"COD\", razorpay_order_id=\"\")=>{\r\n    let shippingObj = {\r\n        name:shipingDetails[\"name\"],\r\n        address:shipingDetails[\"address\"],\r\n        phone:shipingDetails[\"phone\"],\r\n        city:\"barh\",\r\n        street:shipingDetails[\"street\"],\r\n        landmark:shipingDetails[\"landmark\"]\r\n    } \r\n    let data = {\r\n        items:order.addedItem, \r\n        shipping:shippingObj,\r\n        paymentMode:paymentMode,\r\n        razorpay_order_id:razorpay_order_id\r\n    };\r\n    agent.Order.placeOrder(data).then((res=>{\r\n        if(res.statusCode == 200){\r\n            props.history.push('/orderSuccess')\r\n        }\r\n    }),(err)=>{\r\n        alert(err.response.body.message);\r\n    });\r\n\r\n}\r\nconst selectPaymentMode = ()=>{\r\n    if(checkValidate()){\r\n        setshowPayementModel(showPayementModel?false:true);\r\n    }\r\n}\r\nconst handleChange = (e) => {\r\n    shipingDetails[e.target.name] = e.target.value;\r\n    setShipingDetails(shipingDetails);\r\n}\r\n\r\norder.addedItem.forEach(element => {\r\n    totalQuantity += element.quantity;\r\n    totalPrice += parseInt(element.quantity)*element.perItemPrice;\r\n});\r\nif(authState?.errors?.body.record.isPrimeMember){\r\n    totalPrice -= ((totalPrice*10)/100)\r\n}\r\nconst onlinePayment = ()=>{\r\n    agent.Payment.getRazorpayOrderId({amount:totalPrice,orderForService:\"Food Order\"}).then((res=>{\r\n        if(res.statusCode == 200){\r\n            console.log(res);\r\n            var options = {\r\n                \"key\": \"123\", // Enter the Key ID generated from the Dashboard\r\n                \"amount\": res.body.record.amount*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n                \"currency\": \"INR\",\r\n                \"name\": \"Guest\",\r\n                \"description\": \"Food Order Transaction\",\r\n                \"image\": \"https://example.com/your_logo\",\r\n                \"order_id\": res.body.record.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n                \"handler\": function (response){\r\n                    updatePaymentState(\"success\",response);\r\n                },                \r\n                \"theme\": {\r\n                    \"color\": \"#3399cc\"\r\n                }\r\n            };   \r\n            const rzp1 = new window.Razorpay(options);\r\n            rzp1.on('payment.failed', function (response){\r\n                updatePaymentState(\"failed\",response);\r\n\r\n            });            \r\n            rzp1.open();\r\n\r\n        }else{\r\n            alert(res.body)\r\n        }\r\n    }));\r\n\r\n}\r\nconst updatePaymentState=(status,obj)=>{\r\n    console.log(\"status\",status);\r\n    console.log(\"returnobj\",obj);\r\n    let orderId = \"\";\r\n    let paymentObj = {\r\n        razorpay_order_id:\"\",\r\n        paymentStatus:\"\",\r\n        paymentResponse:\"\"\r\n    }\r\n    if(status == \"success\"){\r\n        paymentObj.razorpay_order_id = obj.razorpay_order_id;\r\n        paymentObj.paymentStatus = status;\r\n        paymentObj.paymentResponse = obj;\r\n    }\r\n    if(status == \"failed\"){\r\n        paymentObj.razorpay_order_id = obj.error.metadata.order_id;\r\n        paymentObj.paymentStatus = status;\r\n        paymentObj.paymentResponse = obj;\r\n    }\r\n    try{\r\n        agent.Payment.updatePaymentStatus(paymentObj).then((res=>{\r\n            console.log(res.body.record)\r\n            if(res.statusCode ==200 && status == \"success\"){\r\n                handleSubmit(\"online\",paymentObj.razorpay_order_id);\r\n            }\r\n            if(res.statusCode ==200 && status == \"failed\"){\r\n                props.history.push('/orderFailed')\r\n\r\n            }\r\n\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });\r\n    }catch(err){\r\n        alert(err);\r\n    }\r\n}\r\nconst checkValidate=()=>{\r\n    let returnType = true;\r\n    setisnameinvalid(false);\r\n    setisaddressinvalid(false);\r\n    setisphoneinvalid(false);\r\n\r\n    if((shipingDetails[\"name\"] ==undefined || shipingDetails[\"name\"] ==\"\")){\r\n        setisnameinvalid(true);            \r\n        returnType = false\r\n    } \r\n\r\n    if(shipingDetails[\"phone\"] ==undefined || shipingDetails[\"phone\"] ==\"\"){\r\n        setisphoneinvalid(true);\r\n        returnType = false\r\n    }\r\n    if((shipingDetails[\"address\"] ==undefined || shipingDetails[\"address\"] ==\"\") ){\r\n        setisaddressinvalid(true);            \r\n        returnType = false\r\n    } \r\n    return returnType;\r\n} \r\n\r\nconst token = agent.getToken();\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n            <Row className=\"p-3 order-summary\">\r\n                <Col md={6} >\r\n                    <h4>Shipping Details</h4>\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"name\"  onChange={handleChange} isInvalid={isnameinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your name.\r\n                            </Form.Control.Feedback>                    \r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"address\" placeholder=\"Line 1\" onChange={handleChange} isInvalid={isaddressinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your address.\r\n                            </Form.Control.Feedback>                    \r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Street/Mohalla</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"street\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Landmark</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"landmark\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Mobile no.</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"phone\"  onChange={handleChange} isInvalid={isphoneinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your phone no..\r\n                            </Form.Control.Feedback>                    \r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control type=\"text\"  name=\"city\" onChange={handleChange} value=\"barh\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <Button variant=\"danger\" type=\"button\"  onClick={(ev)=>selectPaymentMode()}>\r\n                            Place Order\r\n                        </Button>\r\n                            {/* {token==null?<Form.Label>Please <Link to=\"/login\" className=\"underline\">login</Link> for place order </Form.Label>:\"\"} */}\r\n                            \r\n                        </Form.Group>\r\n                    </Form>               \r\n                     </Col>\r\n                <Col md={6} >\r\n                    <p>Order Summary</p>\r\n                    <h5>You have {totalQuantity} items in your food cart</h5>\r\n                    <Table borderless>\r\n                        <tbody className=\"order-summary-border\">\r\n                            {products}\r\n                        </tbody>\r\n                        <tfoot >\r\n                            {authState?.errors?.body.record.isPrimeMember?                            <tr>\r\n                                <td>\r\n                                    <b>Prime member discount</b>\r\n                                </td>\r\n                                <td>\r\n                                    10%\r\n                                </td>\r\n                            </tr>:\"\"}\r\n                            <tr>\r\n                                <td>\r\n                                    <b>Total</b>\r\n                                </td>\r\n                                <td>\r\n                                <span>&#8377;</span> {totalPrice}\r\n                                </td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        <Modal show={showPayementModel} onHide={selectPaymentMode} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Payment Mode</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Button variant=\"success\" onClick={()=>handleSubmit()}>Cash on Delivery</Button>\r\n            <Button variant=\"primary\"onClick={onlinePayment}>Pay Now</Button>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrder\r\n","import React from 'react'\r\nimport { Alert, Button} from 'react-bootstrap';\r\nimport {useDispatch } from \"react-redux\";\r\nimport orderR from '../../reducers/order';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {\r\n    RESET_ORDER\r\n} from '../../constants/actionTypes';\r\n\r\nfunction OrderSuccess() {\r\n    // const [show, setShow] = useState(true);\r\n    const dispatch = useDispatch();\r\n    dispatch({type:RESET_ORDER})\r\n    return (\r\n      <>\r\n        <Alert show={true} className=\"login-div\">\r\n          <Alert.Heading>Success!</Alert.Heading>\r\n          <p>\r\n         Our representative will call you for order confirmation within 2 minutes. If you not get a call please dial <b>9990708074</b>.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n              <Link to=\"/\">\r\n              <Button variant=\"danger\">\r\n              Ok\r\n            </Button>\r\n\r\n              </Link>\r\n          </div>\r\n        </Alert>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OrderSuccess\r\n","import React,{useState,useEffect, useMemo} from 'react'\r\nimport { Table, Nav, Button, Modal } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport {Link} from 'react-router-dom';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\nfunction CategoryManagement(props) {\r\n      const initialState = {\r\n          categoryList:[]\r\n      }\r\n      const [state, setstate] = useState([]) \r\n      const [show, setShow] = useState(false);\r\n      const [alert, setalert] = useState({heading:\"\",message:\"\",data:{}});\r\n        const handleClose = (action) => {\r\n            if(action==\"yes\"){\r\n                props.showLoader(true);\r\n                agent.Order.deleteCategory(alert.data.name).then((res=>{\r\n                    props.showLoader(false);\r\n                    console.log(res);\r\n                    if(res.statusCode == 200){\r\n                        getCategories()\r\n                    }else{\r\n                    }\r\n                }));\r\n        \r\n            }\r\n            setShow(false)\r\n        };\r\n      const handleShow = () => setShow(true);\r\n    \r\n      useEffect(() => {\r\n        if(props.selectedTab==\"categories\"){\r\n            getCategories()\r\n        }\r\n    },[props.selectedTab])\r\n\r\n    const getCategories =()=>{\r\n        console.log(\"category run\")\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res=>{\r\n            props.showLoader(false);\r\n            if(res.statusCode == 200){\r\n                setstate(res.body.record);\r\n            }else{\r\n                setstate([]);\r\n            }\r\n        }));\r\n    }\r\n    const deleteCategory = (data)=>{\r\n        console.log(data);\r\n        setalert({\r\n            heading:`Delete Category: ${data.name}`,\r\n            message:`Are you sure you want to delete category: ${data.name}`,\r\n            data:data\r\n        })\r\n        handleShow();    \r\n    }\r\n    const data = useMemo(\r\n        () => \r\n            state.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.name,\r\n                col3:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [state]\r\n      )   \r\n      const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Name',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col3',\r\n          },\r\n\r\n        ],\r\n        []\r\n      )    \r\n      \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n    if(props.selectedTab == \"categories\"){\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={()=>props.changeTab(\"addCategory\")} variant=\"danger\">Add Category</Button>\r\n                <Table {...getTableProps()} responsive>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                            >\r\n                                {column.render('Header')}\r\n                                <span>\r\n                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                </span>\r\n\r\n                            </th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col3\"){\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }else{\r\n                                    return (\r\n                                        <td>\r\n                                        <span onClick={()=>deleteCategory(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </td>\r\n        \r\n                                    )\r\n                                }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n    <div>\r\n     <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n        Previous Page\r\n      </button>\r\n       <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n         Next Page\r\n       </button>\r\n       <div>\r\n         Page{' '}\r\n         <em>\r\n           {pageIndex + 1} of {pageOptions.length}\r\n         </em>\r\n       </div>\r\n     </div>                                              \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{alert.heading}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{alert.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\r\n                        Cancel\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal> \r\n            </>)\r\n    \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default CategoryManagement\r\n","import React, { useEffect, useState } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\n\r\nfunction OrderHistory(props) {\r\n    //let active = 0;\r\n    let items = [];\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"orders\"){\r\n            getOrders()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const [orderHistory, setorderHistory] = useState([])\r\n    const [selectedorder, setselectedorder] = useState([]);\r\n    const [totalPage, settotalPage] = useState(0);\r\n    const [isopenpopup, setisopenpopup] = useState(false);\r\n    const [selectedPage,setselectedPage] = useState(0);\r\n    const handleClose = () => setisopenpopup(false);\r\n    for (let number = 0; number <= totalPage; number++) {\r\n        if(totalPage >0){\r\n            items.push(\r\n                <Pagination.Item onClick={() => changePage(number)} key={number} active={number == selectedPage}>\r\n                  {number+1}\r\n                </Pagination.Item>,\r\n              );\r\n        }\r\n      }         \r\n      const paginationBasic = (\r\n        <div>\r\n          <Pagination>{items}</Pagination>\r\n        </div>\r\n      ); \r\n\r\n    const viewOrderPopUp = (record) => {\r\n        setselectedorder(record);\r\n        setisopenpopup(true);\r\n    }\r\n    let history = useHistory();\r\n    const getOrders = (page=0) => {\r\n        props.showLoader(true);\r\n        agent.Order.getOrdersHistoryAdmin(page).then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record)\r\n            setorderHistory(res.body.record);\r\n            let totalRecord = res.body.totalOrders;\r\n            let totalPage = parseInt(res.body.totalOrders)/10;\r\n            console.log(\"totalPage\",totalPage);\r\n            settotalPage(totalPage);\r\n        }), (err) => {\r\n            console.log(err.response.body.message);\r\n            if (err.response.body.message == \"jwt must be provided\") {\r\n                console.log(\"login required\");\r\n                history.push(\"/login\");\r\n            }\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const changePage=(number) =>{\r\n        console.log(\"page\",number);\r\n        setselectedPage(number);\r\n        getOrders(number);\r\n    }\r\n    if (props.selectedTab == \"orders\") {\r\n        return (\r\n            <>\r\n                <Table responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Customer</th>\r\n                            <th>Date</th>\r\n                            <th>Details</th>\r\n                            <th>Number</th>\r\n                            <th>Action</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orderHistory.map((record, index) =>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{record.shipping.name}</td>\r\n                                <td>{record.datePlaced}</td>\r\n                                <td>{record.items.map(itm => <span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                                <td>{record.shipping.phone}</td>\r\n\r\n                                <td>\r\n                                    <Button type=\"button\" onClick={() => viewOrderPopUp(record)}>View</Button>\r\n                                </td>\r\n                            </tr>\r\n\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n                {paginationBasic}\r\n                <Modal show={isopenpopup} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Order Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"6\"><h4>Shipping Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                                    <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                                    <td><b>Street:</b> {selectedorder?.shipping?.street}</td>\r\n                                    <td><b>Landmark:</b> {selectedorder?.shipping?.landmark}</td>\r\n\r\n                                    <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                                    <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                            <tbody>{selectedorder?.items?.map(itm => <tr>\r\n                                <td><b>Title:</b> {itm.item.title}</td>\r\n                                <td><b>Description:</b> {itm.item.description}</td>\r\n                                <td><b>Quantity:</b> {itm.quantity}</td>\r\n                                <td><b>Total Price:</b> {parseInt(itm.quantity) * itm.perItemPrice}</td>\r\n                            </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Payment Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Payment Mode: </b>{selectedorder.paymentMode}</td>\r\n                                    <td><b>Razorpay Order id: </b>{selectedorder.razorpay_order_id}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n\r\n\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                {selectedorder.isDiscountApplied ? <tr>\r\n                                    <td>\r\n                                        <b>\r\n                                            Prime Member Discount:\r\n                                </b>\r\n                                    </td>\r\n                                    <td>10%</td>\r\n                                </tr> : \"\"}\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Total Bill Amount</b>\r\n                                    </td>\r\n                                    <td>{selectedorder.totalBillAmount}</td>\r\n                                </tr>\r\n                            </tbody>\r\n\r\n                        </Table>\r\n\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            </>\r\n        )\r\n\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default OrderHistory\r\n","import React,{useState} from 'react'\r\nimport { Button,Form, Col} from 'react-bootstrap';\r\nimport agent from '../../agent'\r\n\r\nfunction AddCategory(props) {\r\n    const [state, setstate] = useState(\"\")\r\n    const handleSubmit=(ev) =>{\r\n        props.showLoader(false);\r\n        agent.Order.addCategory({name:state}).then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                console.log(props);\r\n                props.changeTab(\"categories\");\r\n            }else{\r\n                //setstate([]);\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n    const handleChange = (e) => {\r\n        setstate(e.target.value);\r\n    }    \r\n    if (props.selectedTab == \"addCategory\") {\r\n\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                <Form.Group as={Col} md=\"4\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Category Name:</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"\" onChange={handleChange}/>\r\n                </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                </Button>\r\n            </Form>\r\n            )\r\n\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default AddCategory\r\n","import React,{useState,useEffect, useMemo} from 'react'\r\nimport { Table, Nav, Pagination, Button, Modal, Image } from 'react-bootstrap';\r\nimport agent from '../../../agent'\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch } from \"react-redux\";\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\n\r\nimport {\r\n    STORE_EDIT_PRODUCT\r\n} from '../../../constants/actionTypes';\r\n\r\nfunction ProductManagement(props) {\r\n    \r\n    useEffect(() => {\r\n        if(props.selectedTab==\"products\"){\r\n            getProducts()\r\n        }\r\n    },[props.selectedTab])\r\n\r\n    const [state, setstate] = useState([]) \r\n    const [show, setShow] = useState(false);\r\n    const [alert, setalert] = useState({heading:\"\",message:\"\",data:{}});\r\n    const dispatch = useDispatch()\r\n    \r\n    const getProducts =()=>{\r\n        props.showLoader(true);\r\n        agent.Order.getProducts().then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                setstate(res.body.record);\r\n            }else{\r\n                setstate([]);\r\n            }\r\n        }));\r\n    }\r\n    const handleClose = (action) => {\r\n        if(action==\"yes\"){\r\n            props.showLoader(true);\r\n            agent.Order.deleteProduct(alert.data.title).then((res=>{\r\n                props.showLoader(false);\r\n                if(res.statusCode == 200){\r\n                    getProducts()\r\n                }else{\r\n                }\r\n            }));\r\n    \r\n        }\r\n        setShow(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n    const deleteProduct = (data)=>{\r\n        console.log(data);\r\n        setalert({\r\n            heading:`Delete Product: ${data.title}`,\r\n            message:`Are you sure you want to delete Product: ${data.title}`,\r\n            data:data\r\n        })\r\n        handleShow();    \r\n    }\r\n    const editProduct = (data)=>{\r\n        dispatch({type:STORE_EDIT_PRODUCT,data})\r\n        props.changeTab(\"editProduct\")\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Image',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Title',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Description',\r\n            accessor: 'col4',\r\n          },\r\n          {\r\n            Header: 'Price',\r\n            accessor: 'col5',\r\n          },\r\n          {\r\n            Header: 'Category',\r\n            accessor: 'col6',\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col7',\r\n          },\r\n\r\n        ],\r\n        []\r\n    )    \r\n\r\n    const data = useMemo(\r\n        () => \r\n            state.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.imageUrl,\r\n                col3:record.title,\r\n                col4:record.description,\r\n                col5:record.price,\r\n                col6:record.category,\r\n                col7:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [state]\r\n      )  \r\n\r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n\r\n    if(props.selectedTab == \"products\"){\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={()=>props.changeTab(\"addProduct\")} variant=\"danger\">Add Product</Button>\r\n                <Table {...getTableProps()} responsive>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                            >\r\n                                {column.render('Header')}\r\n                                <span>\r\n                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                </span>\r\n\r\n                            </th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id ==\"col2\"){\r\n                                    return(<td>{cell.value !=\"\"?<Image src={cell.value} className=\"product-image\" thumbnail />:\"No Image\"}</td>)\r\n                                }                                \r\n                                if(cell.column.id !=\"col7\"){\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }else{\r\n                                    return (\r\n                                        <td>\r\n                                        <span onClick={()=>deleteProduct(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                        <span className=\"ml-2\" onClick={()=>editProduct(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </td>\r\n        \r\n                                    )\r\n                                }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n                <div>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                </div>                                              \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{alert.heading}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{alert.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\r\n                        Cancel\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>               \r\n            </>)\r\n    \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default ProductManagement\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Button, Form, Col } from 'react-bootstrap';\r\nimport agent from '../../../agent';\r\n\r\nfunction AddProduct(props) {\r\n    const [category, setcategory] = useState([])\r\n    const [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"addProduct\"){\r\n            getCategories()\r\n        }\r\n    },[props.selectedTab])\r\n    const getCategories =()=>{\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                //setstate(res.body.record);\r\n                setcategory(res.body.record)\r\n            }else{\r\n                //setstate([]);\r\n                setcategory([])\r\n            }\r\n        }));\r\n    }\r\n    const handleChange = (e) => {\r\n\r\n        //const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n        \r\n    }\r\n\r\n    const handleSubmit=(ev) =>{\r\n        props.showLoader(false);\r\n        console.log(state);\r\n        agent.Order.addProducts(state).then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                //console.log(props);\r\n                props.changeTab(\"products\");\r\n            }else{\r\n                //setstate([]);\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n\r\n    if (props.selectedTab == \"addProduct\") {\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>Select Category</Form.Label>\r\n                <Form.Control as=\"select\" name=\"category\" onChange={handleChange} required>\r\n                <option key={\"\"}>Select Category</option>\r\n                    {category.map(item=><option key={item.name}>{item.name}</option>)}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control type=\"text\"  name=\"title\" onChange={handleChange} required/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} name=\"description\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control type=\"number\" name=\"price\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>ImageURL</Form.Label>\r\n                <Form.Control type=\"text\"  name=\"imageURL\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n            </Button>    \r\n            </Form>   \r\n         )\r\n        \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default AddProduct\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport agent from '../../../agent';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {\r\n    UPDATE_PRODUCT_FIELD\r\n} from '../../../constants/actionTypes';\r\n\r\nfunction EditProduct(props) {\r\n    const storeProduct = useSelector(state => state.product);\r\n\r\n    const [category, setcategory] = useState([])\r\n    const [state, setState] = useState({})\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (props.selectedTab == \"editProduct\") {\r\n            getCategories()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getCategories = () => {\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res => {\r\n            props.showLoader(false);\r\n\r\n            if (res.statusCode == 200) {\r\n                setcategory(res.body.record)\r\n            } else {\r\n                setcategory([])\r\n            }\r\n        }));\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let data = {key:e.target.name,value:e.target.value}\r\n        dispatch({type:UPDATE_PRODUCT_FIELD,data});\r\n    }\r\n\r\n    const handleSubmit = (ev) => {\r\n        console.log(storeProduct);\r\n        props.showLoader(false);\r\n        agent.Order.editProducts(storeProduct.product).then((res => {\r\n            props.showLoader(false);\r\n            if (res.statusCode == 200) {\r\n                props.changeTab(\"products\");\r\n            } else {\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n\r\n    if (props.selectedTab == \"editProduct\") {\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Select Category</Form.Label>\r\n                        <Form.Control as=\"select\" value={storeProduct.product?.category} name=\"category\" onChange={handleChange} required>\r\n                            <option key={\"\"}>Select Category</option>\r\n                            {category.map(item => <option key={item.name}>{item.name}</option>)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" value={storeProduct.product?.title} name=\"title\" onChange={handleChange} required />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" value={storeProduct.product?.description} rows={3} name=\"description\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"number\" value={storeProduct.product?.price} name=\"price\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlInput5\">\r\n                        <Form.Label>ImageURL</Form.Label>\r\n                        <Form.Control type=\"text\" value={storeProduct.product?.imageUrl} name=\"imageUrl\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n            </Button>\r\n            </Form>\r\n        )\r\n\r\n    } else {\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport default EditProduct\r\n","import React, { useEffect, useState,useMemo } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\n\r\nfunction FinanceRequests(props) {\r\n    const [ITRrequests, setITRrequests] = useState([])\r\n    const [isopenpopup, setisopenpopup] = useState(false);\r\n    const [selectedorder, setselectedorder] = useState([]);\r\n\r\n    const handleClose = () => setisopenpopup(false);\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"finance\"){\r\n            getITRrequests()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getITRrequests = () => {\r\n        props.showLoader(true);\r\n        agent.Finance.getAdminItr().then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record);\r\n            setITRrequests(res.body.record);\r\n        }), (err) => {\r\n            // if (err.response.body.message == \"jwt must be provided\") {\r\n            //     console.log(\"login required\");\r\n            //     history.push(\"/login\");\r\n            // }\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'FirstName',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'LastName',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Phone',\r\n            accessor: 'col4',\r\n          },\r\n          {\r\n            Header: 'Email',\r\n            accessor: 'col5',\r\n          },\r\n          // {\r\n          //   Header: 'Address',\r\n          //   accessor: 'col6',\r\n          // },\r\n          // {\r\n          //   Header: 'Aadhar',\r\n          //   accessor: 'col7',\r\n          // },\r\n          // {\r\n          //   Header: 'Business',\r\n          //   accessor: 'col8',\r\n          // },\r\n          // {\r\n          //   Header: 'Zip',\r\n          //   accessor: 'col9',\r\n          // },\r\n          // {\r\n          //   Header: 'Service',\r\n          //   accessor: 'col10',\r\n          // },\r\n          {\r\n            Header:'Action',\r\n            accessor: 'col6'\r\n          }\r\n        ],\r\n        []\r\n    )    \r\n    const data = useMemo(\r\n        () => \r\n        ITRrequests.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.firstName,\r\n                col3:record.lastName,\r\n                col4:record.phone,\r\n                col5:record.email,\r\n                col6:record\r\n                // col6:record.address,\r\n                // col7:record.aadhar,\r\n                // col8:record.business,\r\n                // col9:record.zip,\r\n                // col10:record.service\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [ITRrequests]\r\n      )  \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n    const viewOrderPopUp = (record) => {\r\n        setselectedorder(record);\r\n        setisopenpopup(true);\r\n    }\r\n\r\n    if (props.selectedTab == \"finance\") {\r\n    return (\r\n        <>\r\n        <Table {...getTableProps()} responsive>\r\n        <thead>\r\n            {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                <th\r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                >\r\n                    {column.render('Header')}\r\n                    <span>\r\n                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                    </span>\r\n\r\n                </th>\r\n                ))}\r\n            </tr>\r\n            ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n            {page.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n                <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                                if(cell.column.id ==\"col6\"){\r\n                                  return(\r\n                                  <td>\r\n                                    <Button type=\"button\" onClick={() => viewOrderPopUp(cell.value)}>View</Button>\r\n                                    </td>\r\n                                  )\r\n                              } else{\r\n                                return (\r\n                                  <td {...cell.getCellProps()}>\r\n                                      {cell.render('Cell')}\r\n                                  </td>\r\n                                  )\r\n          \r\n                              }                               \r\n\r\n                })}\r\n                </tr>\r\n            )\r\n            })}\r\n        </tbody>\r\n    </Table>\r\n                <div>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                </div> \r\n                <Modal show={isopenpopup} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>User Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>First Name: </b></td>\r\n                                    <td>{selectedorder.firstName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Last Name: </b></td>\r\n                                    <td>{selectedorder.lastName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Phone: </b></td>\r\n                                    <td>{selectedorder.phone}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Email: </b></td>\r\n                                    <td>{selectedorder.email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Address: </b></td>\r\n                                    <td>{selectedorder.address}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Aadhar: </b></td>\r\n                                    <td>{selectedorder.aadhar}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Business: </b></td>\r\n                                    <td>{selectedorder.business}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Zip: </b></td>\r\n                                    <td>{selectedorder.zip}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Service: </b></td>\r\n                                    <td>{selectedorder.service}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Razorpay order id: </b></td>\r\n                                    <td>{selectedorder.razorpay_order_id}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                </>    \r\n                                                       \r\n\r\n)\r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default FinanceRequests\r\n","import React, { useEffect, useState,useMemo } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Form16Requests(props) {\r\n    const [form16requests, setform16requests] = useState([])\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"form16\"){\r\n            getForm16requests()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getForm16requests = () => {\r\n        props.showLoader(true);\r\n        agent.Finance.getAdminForm16().then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record);\r\n            setform16requests(res.body.record);\r\n        }), (err) => {\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const downloadForm16=(filepath=\"\")=>{\r\n        console.log(filepath);\r\n        let filePathArr = filepath.split(\"/\");\r\n        let fileName = filePathArr[filePathArr.length -1];\r\n        console.log(fileName);\r\n        agent.Finance.downloadForm16({fileName:fileName}).then(res => {\r\n            console.log(res);\r\n\r\n        });\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Phone',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Form16',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Razorpay Order Id',\r\n            accessor: 'col4',\r\n          }\r\n\r\n\r\n        ],\r\n        []\r\n    )    \r\n    const data = useMemo(\r\n        () => \r\n        form16requests.map((record,index)=>\r\n                { \r\n                    let filePathArr = record.filePath.split(\"/\");\r\n                    let fileName = filePathArr[filePathArr.length -1];\r\n                return {col1:index+1,\r\n                col2:record.phone,\r\n                col3:fileName,\r\n                col4:record.razorpay_order_id,\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [form16requests]\r\n      )  \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n\r\n    if(props.selectedTab == \"form16\"){\r\n        return (\r\n            <>\r\n            <Table {...getTableProps()} responsive>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {headerGroup.headers.map(column => (\r\n                    <th\r\n                        {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                    >\r\n                        {column.render('Header')}\r\n                        <span>\r\n                        {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                        </span>\r\n    \r\n                    </th>\r\n                    ))}\r\n                </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {page.map(row => {\r\n                prepareRow(row)\r\n                return (\r\n                    <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                                if(cell.column.id ==\"col3\"){\r\n                                    return(<td>\r\n                                        {/* <a target={\"_blank\"}  href = \"http://localhost:3000/api/download?fileName=16057165121892019-08-30-12-14-11-448_1567147451448_XXXPK9512X_Acknowledgement.pdf\">Download</a> */}\r\n                                        <Link className=\"btn btn-danger\" target={\"_blank\"} to={`/api/download?fileName=${cell.value}`}>Download</Link>\r\n                                        {/* <Button type=\"button\" onClick={()=>downloadForm16(cell.value)} variant=\"danger\"> Download</Button>  */}\r\n                                         </td>)\r\n                                }else{\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }                                \r\n\r\n                    })}\r\n                    </tr>\r\n                )\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n                    <div>\r\n                    <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                        Previous Page\r\n                    </button>\r\n                    <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                        Next Page\r\n                    </button>\r\n                    <div>\r\n                        Page{' '}\r\n                        <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                        </em>\r\n                    </div>\r\n                    </div>   \r\n                    </>                                           \r\n    \r\n            )\r\n        }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default Form16Requests\r\n","import React,{useState,useEffect} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../layout/Loader';\r\nimport OrderHistory from '../Admin/orders/OrderHistory';\r\nimport AddCategory from '../Admin/AddCategory';\r\nimport ProductManagement from '../Admin/products/ProductManagement'\r\nimport AddProduct from '../Admin/products/AddProduct'\r\nimport EditProduct from '../Admin/products/EditProduct'\r\nimport FinanceRequests from '../Admin/finance/FinanceRequests';\r\nimport Form16Requests from '../Admin/finance/Form16Requests';\r\n\r\nfunction Home(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [selectedTab, setselectedTab] = useState(\"categories\")\r\n    const showLoader =(value)=>{\r\n        setisShowLoader(value);\r\n    }\r\n    const changeTab=(tab=\"\")=>{\r\n        setselectedTab(tab);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n            <Row>\r\n                <Col md={3} className=\"p-4\">\r\n                    <ListGroup >\r\n                        <ListGroup.Item key={\"categories\"} active={selectedTab==\"categories\"?true:false} action  onClick={()=>changeTab(\"categories\")}>Category Management</ListGroup.Item>\r\n                        <ListGroup.Item key={\"products\"} active={selectedTab==\"products\"?true:false} action onClick={()=>changeTab(\"products\")}>Product Management</ListGroup.Item>\r\n                        <ListGroup.Item key={\"orders\"} active={selectedTab==\"orders\"?true:false} action onClick={()=>changeTab(\"orders\")}>Order History</ListGroup.Item>\r\n                        <ListGroup.Item key={\"finance\"}  active={selectedTab==\"finance\"?true:false} action onClick={()=>changeTab(\"finance\")}>ITR Requests</ListGroup.Item>\r\n                        <ListGroup.Item key={\"form16\"}  active={selectedTab==\"form16\"?true:false} action onClick={()=>changeTab(\"form16\")}>Form16 Requests</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={9} className=\"p-4 production-col\" >\r\n                    <Loader show={isShowLoader}/>\r\n                    \r\n                    <CategoryManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <ProductManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <OrderHistory  selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <AddCategory changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <AddProduct changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <EditProduct changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <FinanceRequests changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <Form16Requests changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Home\r\n","import React,{useEffect,useState} from 'react'\r\nimport agent from '../../agent'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table, Nav, Pagination,Button,Modal } from 'react-bootstrap';\r\n\r\nfunction UserOrderHistory(props) {\r\n    useEffect(() => {\r\n        getOrders()\r\n  },[])\r\n  const [orderHistory, setorderHistory] = useState([])\r\n  const [selectedorder,setselectedorder] = useState([]);\r\n  const [isopenpopup, setisopenpopup] = useState(false)\r\n  const handleClose = () => setisopenpopup(false);\r\n\r\n  const viewOrderPopUp = (record)=>{\r\n      setselectedorder(record);\r\n      setisopenpopup(true);\r\n  }\r\n  let history = useHistory();\r\n  const getOrders =()=>{\r\n      props.showLoader(true);\r\n      agent.Order.getOrderHistoryByUserEmail().then((res=>{\r\n          props.showLoader(false);\r\n          console.log(res.body.record)\r\n\r\n          setorderHistory(res.body.record);\r\n      }),(err)=>{\r\n          console.log(err.response.body.message);\r\n          if(err.response.body.message ==\"jwt must be provided\"){\r\n              console.log(\"login required\");\r\n            history.push(\"/login\");\r\n          }\r\n          props.showLoader(false);\r\n\r\n      });\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <Table responsive>\r\n        <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Details</th>\r\n                <th>Number</th>\r\n                <th>Action</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {orderHistory.map((record,index)=>\r\n            <tr>\r\n                <td>{index+1}</td>\r\n                <td>{record.shipping.name}</td>\r\n                <td>{record.datePlaced}</td>\r\n                <td>{record.items.map(itm=><span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                <td>{record.shipping.phone}</td>\r\n\r\n                <td>\r\n                    <Button type=\"button\" onClick={()=>viewOrderPopUp(record)}>View</Button>\r\n                </td>\r\n            </tr>\r\n\r\n            )}\r\n        </tbody>\r\n    </Table>\r\n    <Modal show={isopenpopup} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Order Details</Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Shipping Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                            <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                            <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                            <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                    <tbody>{selectedorder?.items?.map(itm=><tr>\r\n                    <td><b>Title:</b> {itm.item.title}</td>\r\n                    <td><b>Description:</b> {itm.item.description}</td>\r\n                    <td><b>Quantity:</b> {itm.quantity}</td>\r\n                    <td><b>Total Price:</b> {parseInt(itm.quantity)*itm.perItemPrice}</td>\r\n                    </tr>)}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Table striped bordered hover responsive>\r\n                <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        {selectedorder.isDiscountApplied?<tr>\r\n                            <td>\r\n                                <b>\r\n                                Prime Member Discount:\r\n                                </b>\r\n                            </td>\r\n                            <td>10%</td>\r\n                        </tr>:\"\"}\r\n                        <tr>\r\n                            <td>\r\n                                <b>Total Bill Amount</b>\r\n                            </td>\r\n                            <td>{selectedorder.totalBillAmount}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Modal.Body>\r\n      </Modal>\r\n\r\n    </>\r\n)\r\n}\r\n\r\nexport default UserOrderHistory\r\n","import React,{useState} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n// import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../../layout/Loader';\r\nimport UserOrderHistory from '../UserOrderHistory';\r\nfunction UserAction(props) {\r\n\r\nconst [isShowLoader, setisShowLoader] = useState(false)\r\nconst showLoader =(value)=>{\r\n    setisShowLoader(value);\r\n}\r\nreturn (\r\n    <>\r\n    <Container fluid>\r\n        <Row>\r\n            <Col md={3} className=\"p-4\">\r\n                <ListGroup>\r\n                    {/* <ListGroup.Item  active action>Category Management</ListGroup.Item>\r\n                    <ListGroup.Item  action>Product Management</ListGroup.Item> */}\r\n                    <ListGroup.Item  action active>Order History</ListGroup.Item>\r\n                    {/* <ListGroup.Item  action>Finance</ListGroup.Item> */}\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={9} className=\"p-4 production-col\" >\r\n                <Loader show={isShowLoader}/>\r\n                {/* <CategoryManagement showLoader={showLoader}/> */}\r\n                <UserOrderHistory showLoader={showLoader}/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</>\r\n)\r\n\r\n}\r\nexport default UserAction\r\n","import React from 'react'\r\nimport { Alert, Button} from 'react-bootstrap';\r\nimport {useDispatch } from \"react-redux\";\r\nimport orderR from '../../reducers/order';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction OrderFailed() {\r\n    // const [show, setShow] = useState(true);\r\n    return (\r\n      <>\r\n        <Alert show={true} className=\"login-div\">\r\n          <Alert.Heading>Filed!</Alert.Heading>\r\n          <p>\r\nSomething went wrong to place order. Please try again.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n              <Link to=\"/placeOrder\">\r\n              <Button variant=\"danger\">\r\n              Ok\r\n            </Button>\r\n\r\n              </Link>\r\n          </div>\r\n        </Alert>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OrderFailed\r\n","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberGroupModel = {\r\n  getMemberGroups(){\r\n    return superagent.get(`${API_ROOT}/memberGroups/entry`)\r\n  },\r\n  saveMemberGroups(data){\r\n    return superagent.post(`${API_ROOT}/memberGroups/entry`,data)\r\n  }\r\n  }\r\n    export default {MemberGroupModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nfunction MemberGroup(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [memberGroupRecords,setMemberGroupsRecords]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        masterRecord.MemberGroupModel.getMemberGroups().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberGroupsRecords(res.body.message);\r\n            }else{\r\n                setMemberGroupsRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Member Groups</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMemberGroup\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Member Group\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Group Code</th>\r\n                    <th>Name</th>\r\n                    <th>Remark</th>\r\n                    <th>Created At</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {memberGroupRecords.map((group,id)=>(<tr>\r\n                    <td>{group.group_code}</td>\r\n                    <td>{group.group_name}</td>\r\n                    <td>{group.remark}</td>\r\n                    <td>{moment(group.created_at).format(\"DD-MM-YYYY HH:SS\") }</td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default MemberGroup;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\n\r\nfunction AddMemberGroup(props) {\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false,type:\"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.group_code) {\r\n      errors.group_code = 'Group Code is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      group_code: '',\r\n      group_name: '',\r\n      remark: '',\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await masterRecord.MemberGroupModel.saveMemberGroups(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          formik.resetForm();\r\n        } else {\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Member Group</h2>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Group Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"group_code\"\r\n                  placeholder=\"Enter group code\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.group_code}\r\n\r\n                />\r\n                {formik.touched.group_code && formik.errors.group_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.group_code}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Group Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"group_name\"\r\n                  placeholder=\"Enter group name\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.group_name}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Remark</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} name=\"remark\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.remark} />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddMemberGroup;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberDetailModel = {\r\n  getMemberDetailsData(){\r\n    return superagent.get(`${API_ROOT}/member/entry`)\r\n  },\r\n  saveMemberDetails(data){\r\n    return superagent.post(`${API_ROOT}/member/entry`,data)\r\n\r\n  },\r\n  deleteMember(id){\r\n    return superagent.del(`${API_ROOT}/member/entry/${id}`)\r\n  }  \r\n    \r\n  }\r\n    export default {MemberDetailModel};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useFormik } from 'formik';\r\nimport memberDetails from \"../../../models/memberDetails\"\r\nimport masterRecord from '../../../models/masterRecord';\r\n\r\nimport Loader from '../../layout/Loader';\r\n\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nfunction AddMember(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [dob, setDob] = useState();\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [groups, setGroups] = useState([])\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n        getMemberGroups();\r\n    }, [])\r\n    const getMemberGroups = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.getMemberGroups();\r\n            setisShowLoader(false);\r\n            setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.member_name) {\r\n            errors.member_name = 'Please provide member name';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            enrollment_date: enrollmentDate,\r\n            date_of_birth: dob,\r\n            member_name: '',\r\n            gender: \"\",\r\n            age: \"\",\r\n            marital_status: \"\",\r\n            mobile_number: \"\",\r\n            email_id: \"\",\r\n            member_group_id: \"\",\r\n            aadhar_number: \"\",\r\n            pan_card_number: \"\",\r\n            driving_license_number: \"\",\r\n            voter_id_number: \"\",\r\n            ration_card_number: \"\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setisShowLoader(true);\r\n            try {\r\n                values.enrollment_date = enrollmentDate;\r\n                values.date_of_birth = dob;\r\n\r\n                let response = await memberDetails.MemberDetailModel.saveMemberDetails(values);\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: response.body.message })\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        },\r\n        handleChange: () => {\r\n            setValues(prevValues => ({\r\n                ...prevValues,\r\n                // we use the name to tell Formik which key of `values` to update\r\n                [values.target.name]: values.target.value\r\n            }))\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <Toast key={1} autohide delay={3000}  show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                <Toast.Header>\r\n                    <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                </Toast.Header>\r\n                <Toast.Body className=\"Dark\">\r\n                    {showToast.message}\r\n                </Toast.Body>\r\n            </Toast>\r\n\r\n            <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Member</h2>\r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Enrollment Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"enrollment_date\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridName\">\r\n                            <Form.Label >Member Name</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                placeholder=\"member name\"\r\n                                name=\"member_name\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_name}\r\n\r\n                            />\r\n                            {formik.touched.member_name && formik.errors.member_name ? (\r\n                                <div class=\"text-danger\">{formik.errors.member_name}</div>\r\n                            ) : null}\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Date of Birth</Form.Label>\r\n                            <DatePicker\r\n                                class=\"form-control\"\r\n                                selected={dob}\r\n                                onChange={(date) => setDob(date)}\r\n                                name=\"date_of_birth\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>Gender</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"gender\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.gender}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Gender</option>\r\n\r\n                                <option key=\"male\" value=\"male\">Male</option>\r\n                                <option key=\"female\" value=\"female\">Female</option>\r\n\r\n                            </select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Age</Form.Label>\r\n                            <Form.Control\r\n                                name=\"age\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.age}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Marital Status</Form.Label>\r\n                            <Form.Control\r\n                                name=\"marital_status\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.merital_status}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Phone number</Form.Label>\r\n                            <Form.Control\r\n                                name=\"mobile_number\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.mobile_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                name=\"email_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.email_id}\r\n                                type=\"text\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} md={6} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>Member Group</Form.Label>\r\n                            <select className=\"form-control\" name=\"member_group_id\" onChange={formik.handleChange}\r\n                                value={formik.values.member_group_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member Group</option>\r\n                                {groups.map((group,id)=>(\r\n                                    <option key={group.group_code} value={group.group_code}>{group.group_code}</option>\r\n                                ))}\r\n                            </select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            <h3 className=\"text-info\">KYC Information</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Aadhar no.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"aadhar_number\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.aadhar_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>PAN</Form.Label>\r\n                            <Form.Control\r\n                                name=\"pan_card_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pan_card_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Driving Licence No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"driving_license_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.driving_license_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Voter Id No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"voter_id_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.voter_id_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                            <Form.Label>Ration Card No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"ration_card_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.ration_card_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddMember;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\nconst [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMember=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await memberRecord.MemberDetailModel.deleteMember(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = memberRecords.filter((member,idx)=>member.member_id!=deleteID);\r\n                setMemberRecords(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n              \r\n    }\r\n\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMember()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Members</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMember\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Member\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Enrollment Date</th>\r\n                    <th>Member Name</th>\r\n                    <th>Member Id</th>\r\n                    <th>PAN Number</th>\r\n                    <th>Mobile Number</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {memberRecords.map((group,id)=>(<tr>\r\n                    <td>{moment(group.enrollment_date).format(\"DD-MM-YYYY HH:SS\") }</td>\r\n                    <td>{group.member_name}</td>\r\n                    <td>{group.member_id}</td>\r\n                    <td>{group.pan_card_number }</td>\r\n                    <td>{group.mobile_number }</td>\r\n                    <td><Link to = \"/viewMemberDetail\">\r\n                    <Button size={\"sm\"} variant=\"primary\">View</Button>\r\n                        \r\n                        </Link>{' '}\r\n                    <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(group.member_id)} >Delete</Button>\r\n                        \r\n                        </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\n\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message[0]);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Member Detail - {memberRecords.member_name}</h2>\r\n\r\n            <Row className=\"mb-5 mt-3\">\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <tbody>\r\n                <tr><th>Enrollment Date</th><td>{moment(memberRecords.enrollment_date).format(\"DD-MM-YYYY HH:SS\") }</td> </tr>\r\n                <tr><th>Member Id</th>  <td>{memberRecords.member_id}</td></tr> \r\n                <tr> <th>Gender</th>  <td>{memberRecords.gender}</td></tr> \r\n                <tr><th>DOB</th>   <td>{memberRecords.date_of_birth}</td></tr> \r\n                <tr><th>Age</th> <td>{memberRecords.age}</td></tr> \r\n                <tr><th>Marital Status</th>  <td>{memberRecords.marital_status}</td></tr> \r\n                <tr><th>Mobile Number</th> <td>{memberRecords.mobile_number}</td></tr> \r\n                <tr><th>Email Id</th> <td>{memberRecords.email_id}</td></tr> \r\n                <tr> <th>Member Group Id</th>  <td>{memberRecords.member_group_id}</td></tr> \r\n                <tr> <th>Aadhar Number</th> <td>{memberRecords.aadhar_number}</td></tr> \r\n                <tr> <th>Driving License Number</th>  <td>{memberRecords.driving_license_number}</td></tr> \r\n                <tr> <th>Voter Id Number </th>  <td>{memberRecords.voter_id_number}</td></tr> \r\n                <tr>  <th>Ration Card Number</th> <td>{memberRecords.ration_card_number}</td></tr> \r\n                <tr> <th>PAN Number</th> <td>{memberRecords.pan_card_number }</td></tr> \r\n            </tbody>\r\n            </Table>\r\n            </Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst SchemeModel = {\r\n  getScheme() {\r\n    return superagent.get(`${API_ROOT}/scheme/entry`)\r\n  },\r\n  saveScheme(data) {\r\n    return superagent.post(`${API_ROOT}/scheme/entry`, data)\r\n  },\r\n  deleteScheme(id){\r\n    return superagent.del(`${API_ROOT}/scheme/entry/${id}`)\r\n  },  \r\n  getLoanAppInitialData(){\r\n      return [superagent.get(`${API_ROOT}/scheme/entry`),superagent.get(`${API_ROOT}/member/entry`)]\r\n  }\r\n\r\n}\r\nconst GroupLoanModel = {\r\n  applyForloan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/applyGroupLoan`, data)\r\n  },\r\n  getApprovalList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingApproval`);\r\n  },\r\n  getDisburseList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingDisburse`);\r\n  },\r\n  getLoanDetailbyId(id){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/${id}`);\r\n  },\r\n  approveRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/approveLoan`, data)\r\n  },\r\n  getAllLoanApplications(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/all`);\r\n  },\r\n  disburseRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/disburseLoan`, data)\r\n  },\r\n\r\n}\r\nconst EmiModel = {\r\n  calculateEMI(data){\r\n    return superagent.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  }\r\n}\r\nexport default { SchemeModel,GroupLoanModel,EmiModel };","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\n\r\nfunction Scheme(props) {\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [schemes,setSchemes]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    useEffect(() => {\r\n        getSchemes();\r\n    },[])\r\n\r\n    const getSchemes = () =>{\r\n        setisShowLoader(true);\r\n        groupLoan.SchemeModel.getScheme().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setSchemes(res.body.message);\r\n            }else{\r\n                setSchemes([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.SchemeModel.deleteScheme(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = schemes.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setSchemes(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Scheme</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Schemes</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addScheme\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Scheme\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Scheme code</th>\r\n                    <th>Scheme name</th>\r\n                    <th>Max amount</th>\r\n                    <th>Interest rate (%)</th>\r\n                    <th>EMI type</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {schemes.map((scheme,id)=>(<tr>\r\n                    <td>{scheme.scheme_code}</td>\r\n                    <td>{scheme.scheme_name}</td>\r\n                    <td>{scheme.max_amount}</td>\r\n                    <td>{scheme.interest_rate }%</td>\r\n                    <td>{scheme.EMI_type }</td>\r\n                    <td>\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(scheme.id)} className=\"ml-2\">Delete</Button>\r\n\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\n\r\nexport default Scheme;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\n\r\nfunction AddScheme(props) {\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.scheme_code) {\r\n      errors.scheme_code = 'Scheme code is Required!';\r\n    }\r\n    if (!values.scheme_name) {\r\n      errors.scheme_name = 'Scheme name is Required!';\r\n    }\r\n    if (!values.max_amount) {\r\n      errors.max_amount = 'Max amount is Required!';\r\n    }\r\n    if (!values.interest_rate) {\r\n      errors.interest_rate = 'Interest rate is Required!';\r\n    }\r\n    if (!values.EMI_type) {\r\n      errors.EMI_type = 'EMI type is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      scheme_code: '',\r\n      scheme_name: '',\r\n      max_amount: '',\r\n      interest_rate: '',\r\n      EMI_type: ''\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n        try {\r\n          let response = await groupLoan.SchemeModel.saveScheme(values);\r\n          setisShowLoader(false);\r\n          if (response.statusCode == 200) {\r\n            formik.resetForm();\r\n            setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          } else {\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n          }\r\n\r\n        } catch (error) {\r\n          setisShowLoader(false);\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n        }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Scheme</h2>\r\n      <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Scheme Code</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_code\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_code}\r\n              />\r\n                {formik.touched.scheme_code && formik.errors.scheme_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_code}</div>\r\n                ) : null}              \r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\">\r\n              <Form.Label>Scheme Name</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_name\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_name}\r\n              />\r\n                {formik.touched.scheme_name && formik.errors.scheme_name ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_name}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Max amount</Form.Label>\r\n              <Form.Control\r\n                name=\"max_amount\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.max_amount}\r\n              />\r\n                {formik.touched.max_amount && formik.errors.max_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.max_amount}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Interest Rate (in %)</Form.Label>\r\n              <Form.Control\r\n                name=\"interest_rate\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.interest_rate}\r\n              />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" md={6}>\r\n            <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n              <Form.Label>EMI type</Form.Label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"EMI_type\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.EMI_type}\r\n              >\r\n                <option key=\"\" value=\"\">Select EMI type</option>\r\n                <option key=\"flat\" value=\"flat\">Flat rate</option>\r\n                {/* <option key=\"reduceing\" value=\"reduceing\">Reduceing rate</option> */}\r\n              </select>\r\n              {formik.touched.EMI_type && formik.errors.EMI_type ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_type}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddScheme;","import React, { Component } from 'react'\r\nimport agent from '../../agent'\r\nimport Loader from '../layout/Loader';\r\nimport {  Card, Col, Row } from 'react-bootstrap';\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <div >\r\n            <Row xs={1} md={3} className=\"g-2\">\r\n                <Col>\r\n                    <Card\r\n                    bg={\"primary\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">100</h2></Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                            Received Amount(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card> \r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card\r\n                    bg={\"danger\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">10</h2> </Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                          Paid Amount(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>            \r\n                </Col>\r\n                <Col>\r\n                    <Card\r\n                    bg={\"success\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">90</h2> </Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                            Cash in hand(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>            \r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nfunction LoanApplication(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [schemeRecords, setSchemeRecords] = useState([]);\r\n    const [selectedScheme, setSelectedScheme] = useState({});\r\n\r\n    const tanure = {\"weekly\":\"Weeks\",\"monthly\":\"Months\",\"daily\":\"Days\",\"fortnight\":\"Fortnight\"};\r\n    let history = useHistory();\r\n    //const selectedSm = {\"interest_rate\":0,\"EMI_type\":\"\",\"max_amount\":0};\r\n    useEffect(()=>{\r\n        getSchemesAndMembers();\r\n    },[])\r\n    const getSchemesAndMembers=async()=>{\r\n        try{\r\n            setisShowLoader(true);\r\n            const response =await Promise.all(groupLoan.SchemeModel.getLoanAppInitialData())\r\n            setisShowLoader(false);\r\n            setSchemeRecords(response[0].body.message);\r\n            setMemberRecords(response[1].body.message);\r\n            console.log(response);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.scheme_id) {\r\n            errors.scheme_id = 'Scheme code is Required!';\r\n        }\r\n        if (!values.member_id) {\r\n            errors.member_id = 'Member name is Required!';\r\n        }\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required!';\r\n        }\r\n        if (selectedScheme?.interest_rate>0 && values.interest_rate>selectedScheme?.interest_rate) {\r\n            errors.interest_rate = `As per the Selected Scheme. Interest rate should not greater than ${selectedScheme.interest_rate}.`;\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required!';\r\n        }\r\n        if (selectedScheme?.max_amount>0 && values.loan_amount>selectedScheme.max_amount) {\r\n            errors.loan_amount = `As per the Selected Scheme. Loan amount should not greater than ${selectedScheme.max_amount}.`;\r\n        }\r\n        // if (!values.EMI_amount) {\r\n        //     errors.EMI_amount = 'EMI amount is Required!';\r\n        // }\r\n        if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required!';\r\n        }\r\n        if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required!';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            scheme_id: '',\r\n            application_date: '',\r\n            member_id: '',\r\n            address:'',\r\n            interest_rate: \"\",\r\n            loan_amount:'',\r\n            // EMI_amount: '',\r\n            EMI_payout:\"\",\r\n            EMI_type:\"\",\r\n            tenure:\"\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            console.log(values);\r\n           setisShowLoader(true);\r\n            try {\r\n                //delete values.EMI_type;\r\n                values.application_date = enrollmentDate;\r\n              let response = await groupLoan.GroupLoanModel.applyForloan(values);\r\n              setisShowLoader(false);\r\n              if (response.statusCode == 200) {\r\n                formik.resetForm();\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n              } else {\r\n                setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n              }\r\n\r\n            } catch (error) {\r\n              setisShowLoader(false);\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    const handleScheme=(e)=>{\r\n        console.log(e.target.value);\r\n        let selectedScheme = schemeRecords.filter(scheme=>scheme.scheme_code==e.target.value);\r\n        setSelectedScheme(selectedScheme[0]);\r\n         formik.values.EMI_type = selectedScheme[0].EMI_type;\r\n         formik.values.interest_rate = selectedScheme[0].interest_rate;\r\n        formik.handleChange(e);\r\n    }\r\n    return (\r\n        \r\n        <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n         <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Loan Application</h2>\r\n            \r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"application_date\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Member name</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"member_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member</option>\r\n                                {memberRecords.map((member,id)=>(\r\n                                    <option key={member.member_id} value={member.member_id}>{member.member_name}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.member_id && formik.errors.member_id ? (\r\n                  <div class=\"text-danger\">{formik.errors.member_id}</div>\r\n                ) : null}              \r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Member Address</Form.Label>\r\n                            <Form.Control\r\n                                name=\"address\"\r\n                                as=\"textarea\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.address}\r\n\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Scheme</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"scheme_id\"\r\n                                onChange={handleScheme}\r\n                                value={formik.values.scheme_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Scheme</option>\r\n                                {schemeRecords.map((schems,id)=>(\r\n                                    <option key={schems.scheme_code} value={schems.scheme_code}>{schems.scheme_code}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.scheme_id && formik.errors.scheme_id ? (\r\n                                <div class=\"text-danger\">{formik.errors.scheme_id}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Interest Rate (in %)</Form.Label>\r\n                            <Form.Control\r\n                                name=\"interest_rate\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.interest_rate}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per scheme.\r\n                            </Form.Text>                            \r\n                            {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Loan Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"loan_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.loan_amount}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            Default will be Max amount of selected scheme.\r\n                            </Form.Text>                            \r\n\r\n                            {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        {/* <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"EMI_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_amount}\r\n                            />\r\n                            {formik.touched.EMI_amount && formik.errors.EMI_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.EMI_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group> */}\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Payout</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"EMI_payout\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_payout}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Payout</option>\r\n                                {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                                <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n\r\n                            </select>\r\n                            {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                                <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Tenure(in {formik.values.EMI_payout!=\"\"?tanure[formik.values.EMI_payout]:\"Months\"})</Form.Label>\r\n                            <Form.Control\r\n                                name=\"tenure\"\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.tenure}\r\n                            />\r\n                            {formik.touched.tenure && formik.errors.tenure ? (\r\n                                <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                    <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Type</Form.Label>\r\n                            <Form.Control\r\n                                name=\"EMI_type\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_type}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per selected scheme.\r\n                            </Form.Text>                            \r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={()=>{history.push(\"/\")}} type=\"button\" className=\"ml-2\">\r\n                        Cancel\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApplication;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction LoanApproval(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getApprovalList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectApproval=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications for Approval</h2>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Interest rate</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY HH:SS\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.interest_rate }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectApproval(loan.id)}>Approve</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApproval;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nfunction DisburseLoan(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getDisburseList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectDisburse=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications For Disburse</h2>\r\n            <Row >\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Interest rate</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY HH:SS\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.interest_rate }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectDisburse(loan.id)}>Disburse</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );}\r\n\r\nexport default DisburseLoan;","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup,Modal,Toast } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\n\r\nfunction LoanApprovalDetails(props) {\r\n    const [showApproveModel, setShowApproveModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [showApprovalButton,setShowApprovalButton]= useState(false);\r\n    const [showDisburseButton,setShowDisburseButton]= useState(false);\r\n    //const [disburseActionButton,setDisburseActionButton]\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getLoanDetails();\r\n    }, [])\r\n\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getLoanDetailbyId(props.location.state);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(response.body.message[0].is_approved!=0?false:true);\r\n                setShowDisburseButton(response.body.message[0].is_approved ==1 && response.body.message[0].is_disbursed==0?true:false);\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionOnLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.approveRejectLoan(data);\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(false);\r\n                //setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionDisburseLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.disburseRejectLoan(data);\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n        {/* <Modal show={showApproveModel} onHide={()=>setShowApproveModel(false)}>\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>Delete Member</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Are you sure.You want to reject?</Modal.Body>\r\n            <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={()=>setShowApproveModel(false)}>\r\n                Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={()=>approveRejectLoan()}>\r\n                Delete\r\n            </Button>\r\n            </Modal.Footer>\r\n        </Modal>         */}\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n            <Loader show={isShowLoader} />\r\n            {showApprovalButton?<Row className=\"m-5\">\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionOnLoan(1)}>\r\n                        Approve\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionOnLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            {showDisburseButton?<Row className=\"m-5\">\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionDisburseLoan(1)}>\r\n                        Disburse\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionDisburseLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            <Row xs={1} md={2} className=\"g-1\">\r\n                <Col>\r\n                    <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                    >\r\n                        <Card.Header className=\"bg-success text-center\"><b>Member Details</b></Card.Header>\r\n                        <Card.Body>\r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Member Name</th><td>{loanDetails.member_name}</td> </tr>\r\n                                    <tr><th>Member Group ID</th>  <td>{loanDetails.member_group_id}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>DOB</th>   <td>{moment(loanDetails.date_of_birth).format(\"DD-MM-YYYY\") }</td></tr>\r\n                                    <tr><th>Phone</th> <td>{loanDetails.mobile_number}</td></tr>\r\n                                    <tr><th>Gender</th>  <td>{loanDetails.gender}</td></tr>\r\n                                    <tr><th>Aadhar No.</th> <td>{loanDetails.aadhar_number}</td></tr>\r\n                                    <tr><th>PAN</th> <td>{loanDetails.pan_card_number}</td></tr>\r\n                                    <tr><th>Driving License</th> <td>{loanDetails.driving_license_number}</td></tr>\r\n                                    <tr><th>Ration Card No.</th> <td>{loanDetails.ration_card_number}</td></tr>\r\n                                    <tr><th>Voter ID No.</th> <td>{loanDetails.voter_id_number}</td></tr>\r\n\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card border=\"info\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                    >\r\n                        <Card.Header className=\"bg-info text-center\"><b>Application Details</b></Card.Header>\r\n                        <Card.Body>\r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\") }</td> </tr>\r\n                                    <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                                    <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                    <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                                    <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                                    {/* <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> */}\r\n                                    <tr><th>Tenure</th> <td>{loanDetails.Tenure}</td></tr>\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                    >\r\n                        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b></Card.Header>\r\n                        <Card.Body>\r\n                            {/* <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Application Date</th><td>{loanDetails.application_date}</td> </tr>\r\n                                    <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                                    <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                    <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                                    <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr>\r\n                                </tbody>\r\n                            </Table> */}\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n            {/* <Container fluid>\r\n        <h2 className=\"text-info text-center\">Approve Loan For - {loanDetails.member_name}</h2>\r\n\r\n            <Row className=\"mb-5 mt-3\">\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <tbody>\r\n                <tr><th>Application Date</th><td>{loanDetails.application_date}</td> </tr>\r\n                <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr> \r\n                <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr> \r\n                <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr> \r\n                <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr> \r\n                <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr> \r\n                <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> \r\n            </tbody>\r\n            </Table>\r\n            </Col>\r\n            </Row>\r\n        </Container> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApprovalDetails;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Badge, Container, Row, Col, Button } from 'react-bootstrap';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nfunction AllApplications(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getAllLoanApplications();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let formatedData = response.body.message.map((loan, id)=>{\r\n                    if(loan.is_approved ==1 && loan.is_disbursed==1){\r\n                        loan[\"actionStatus\"]= \"Disbursed\";\r\n                    }else if(loan.is_approved ==1 && loan.is_disbursed==0){\r\n                        loan[\"actionStatus\"]= \"Approved\";\r\n                    }else if(loan.is_disbursed==-1){\r\n                        loan[\"actionStatus\"]= \"Disburse Rejected\";\r\n                    }else if(loan.is_approved==-1){\r\n                        loan[\"actionStatus\"]= \"Approval Rejected\";\r\n                    }else{\r\n                        loan[\"actionStatus\"]= \"Pending\";\r\n                    }\r\n\r\n                    return loan;\r\n                });\r\n                setLoanlist(formatedData);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n    //   const redirectApproval=(loan_id)=>{\r\n    //     history.push(\"/loanApprovalDetails\",loan_id);\r\n    //   }\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">All Loan Applications</h2>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Interest rate</th>\r\n                    <th>Status</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY HH:SS\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.interest_rate }</td>\r\n                    <td><Badge className={loan.actionStatus==\"Approved\" || loan.actionStatus==\"Disbursed\"?\"bg-success\":\"bg-danger\"}>{loan.actionStatus }</Badge></td>\r\n                    <td> <Button size={\"sm\"} variant=\"info\" onClick={()=>{history.push(\"/loanApprovalDetails\",loan.id)}} type=\"button\" className=\"ml-2\">\r\n                        View\r\n                    </Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );\r\n    }\r\n\r\nexport default AllApplications;","import React,{useState} from 'react';\r\nimport { Table,Button, Container, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport Loader from '../layout/Loader';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nfunction EmiCalculator(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [calculatedData,setCalculatedData] = useState([]);\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.interest_rate) {\r\n          errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required';\r\n          }\r\n          if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required';\r\n          }\r\n          if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required';\r\n          }\r\n          return errors;\r\n      };\r\n      const formik = useFormik({\r\n        initialValues: {\r\n        loanStartDate: '',\r\n        interest_rate: '',\r\n        tenure: '',\r\n        EMI_payout:'',\r\n        loan_amount:'',\r\n        EMI_type:\"flat\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n          setisShowLoader(true);\r\n          try {\r\n             values.loanStartDate = enrollmentDate;\r\n             console.log(values);\r\n            let response = await groupLoan.EmiModel.calculateEMI(values);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              //formik.resetForm();\r\n              setCalculatedData(response.body.message);\r\n            } else {\r\n              //setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n    \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            //setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n        },\r\n      });\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n            <Row >\r\n            <Col>\r\n            <Container className=\"bg-white mt-2 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group as={Col} className=\"form-group required pl-0 pr-0\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"loanStartDate\"\r\n                            />\r\n                {formik.touched.loanStartDate && formik.errors.loanStartDate ? (\r\n                  <div class=\"text-danger\">{formik.errors.loanStartDate}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Loan amount</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"loan_amount\"\r\n                  placeholder=\"Enter loan amount\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.loan_amount}\r\n                />\r\n                {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Interest rate</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"interest_rate\"\r\n                  placeholder=\"Enter interest rate\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.interest_rate}\r\n\r\n                />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Tenure</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"tenure\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.tenure}\r\n\r\n                />\r\n                {formik.touched.tenure && formik.errors.tenure ? (\r\n                  <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0\" controlId=\"formGridAddress1\">\r\n                <Form.Label>EMI payout</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"EMI_payout\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.EMI_payout}\r\n                >\r\n                    <option key=\"\" value=\"\">Select payout</option>\r\n\r\n                    {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                    <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                    <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n\r\n                </select>\r\n                {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Calculate\r\n              </Button>\r\n\r\n            </Form>\r\n            </Container>\r\n            </Col>\r\n            <Col md={8}>\r\n            <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                    >\r\n                        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b></Card.Header>\r\n                        <Card.Body>\r\n                            <Table size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead>\r\n                              <tr>\r\n                                  <th>EMI date</th>\r\n                                  <th>EMI Amount</th>\r\n                                  <th>Principal</th>\r\n                                  <th>Interest</th>\r\n                                  <th>Outstanding</th>\r\n                              </tr>\r\n                          </thead>\r\n                                <tbody>\r\n                                {calculatedData.map((value,id)=>(<tr>\r\n                                    <td>{value.date}</td>\r\n                                    <td>{value.EMI}</td>\r\n                                    <td>{value.principal}</td>\r\n                                    <td>{value.int_amount}</td>\r\n                                    <td>{value.outstanding }</td>\r\n                                </tr>))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n            </Col>\r\n\r\n    </Row>\r\n    </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmiCalculator;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/home/Home'\r\nimport Registration from './components/users/Registration'\r\nimport Login from './components/users/Login'\r\nimport FillItr from './components/finance-Itr/FillItr'\r\nimport InnerLayout from './components/layout/InnerLayout'\r\nimport CategoryList from './components/food-order/CategoryList'\r\nimport MyCart from './components/food-order/MyCart'\r\nimport PlaceOrder from './components/food-order/PlaceOrder'\r\nimport OrderSuccess from './components/food-order/OrderSuccess'\r\nimport AdminHome from './components/Admin/Home';\r\nimport CategoryManagement from './components/Admin/CategoryManagement';\r\nimport AddCategory from './components/Admin/AddCategory';\r\nimport OrderHistory from './components/Admin/orders/OrderHistory';\r\nimport UserOrderHistory from './components/users/UserOrderHistory';\r\nimport UserAction from './components/users/user-actions/UserAction';\r\nimport ProductManagement from './components/Admin/products/ProductManagement';\r\nimport AddProduct from './components/Admin/products/AddProduct';\r\nimport EditProduct from './components/Admin/products/EditProduct';\r\nimport OrderFailed from './components/food-order/OrderFailed';\r\nimport FinanceRequests from './components/Admin/finance/FinanceRequests';\r\nimport Form16Requests from './components/Admin/finance/Form16Requests';\r\nimport InqueryForm from './components/home/InqueryForm';\r\nimport MemberGroup from  './components/masterRecord/memberGroup/MemberGroup';\r\nimport AddMemberGroup from  './components/masterRecord/memberGroup/AddMemberGroup';\r\nimport AddMember from  './components/masterRecord/member/AddMember';\r\nimport Member from  './components/masterRecord/member/Member';\r\nimport MemberViewDetails from  './components/masterRecord/member/MemberViewDetails';\r\nimport Scheme from  './components/groupLoan/Scheme';\r\nimport AddScheme from  './components/groupLoan/AddScheme';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport LoanApplication from  './components/groupLoan/LoanApplication';\r\nimport LoanApproval from  './components/groupLoan/LoanApproval';\r\nimport DisburseLoan from  './components/groupLoan/DisburseLoan';\r\nimport LoanApprovalDetails from  './components/groupLoan/LoanApprovalDetails';\r\nimport AllApplications from  './components/groupLoan/AllApplications';\r\nimport EmiCalculator from  './components/groupLoan/EmiCalculator';\r\nfunction Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n            <InnerLayout exact path=\"/\" component={Dashboard} />\r\n            <InnerLayout exact path=\"/memberGroup\" component={MemberGroup} />\r\n            <InnerLayout exact path=\"/addMemberGroup\" component={AddMemberGroup} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/scheme\" component={Scheme} />\r\n            <InnerLayout exact path=\"/viewMemberDetail\" component={MemberViewDetails} />\r\n            <InnerLayout exact path=\"/addScheme\" component={AddScheme} />\r\n            <InnerLayout exact path=\"/loanApplication\" component={LoanApplication} />\r\n            <InnerLayout exact path=\"/loanApproval\" component={LoanApproval} />\r\n            <InnerLayout exact path=\"/disburseLoan\" component={DisburseLoan} />\r\n            <InnerLayout exact path=\"/loanApprovalDetails\" component={LoanApprovalDetails} />\r\n            <InnerLayout exact path=\"/allApplications\" component={AllApplications} />\r\n            <InnerLayout exact path=\"/emiCalculator\" component={EmiCalculator} />\r\n                <InnerLayout path=\"/login\" component={Login} />\r\n                <InnerLayout path=\"/registration\" component={Registration} />\r\n                <InnerLayout path=\"/fillItr\" component={FillItr} />\r\n                <InnerLayout path=\"/CategoryList\" component={CategoryList} />\r\n                <InnerLayout path=\"/myCart\" component={MyCart} />\r\n                <InnerLayout path=\"/placeOrder\" component={PlaceOrder} />\r\n                <InnerLayout path=\"/orderSuccess\" component={OrderSuccess} />\r\n                <InnerLayout path=\"/adminHome\" component={AdminHome} />\r\n                <InnerLayout path=\"/categoryManagement\" component={CategoryManagement} />\r\n                <InnerLayout path=\"/addCategory\" component={AddCategory} />\r\n                <InnerLayout path=\"/orderHistory\" component={OrderHistory} />\r\n                <InnerLayout path=\"/userOrderHistory\" component={UserOrderHistory} />\r\n                <InnerLayout path=\"/userAction\" component={UserAction} />\r\n                <InnerLayout path=\"/productManagement\" component={ProductManagement} />\r\n                <InnerLayout path=\"/addProduct\" component={AddProduct} />\r\n                <InnerLayout path=\"/editProduct\" component={EditProduct} />\r\n                <InnerLayout path=\"/orderFailed\" component={OrderFailed} />\r\n                <InnerLayout path=\"/financeRequests\" component={FinanceRequests} />\r\n                <InnerLayout path=\"/form16Requests\" component={Form16Requests} />\r\n                <InnerLayout path=\"/inqueryForm\" component={InqueryForm} />\r\n                <InnerLayout path=\"/member\" component={Member} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store} from './store';\r\n\r\nimport Routes from './Routes';\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div className=\"App\">\r\n      {/* <Header/> */}\r\n      <Routes/>\r\n    </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}