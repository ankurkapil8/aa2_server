{"version":3,"sources":["models/BaseUrl.js","constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/layout/ListErrors.js","models/user.js","components/layout/Loader.js","components/users/Login.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/finance-Itr/ItrPopup.js","components/layout/InnerHeader.js","components/layout/Footer.js","components/layout/Leftbar.js","components/layout/TopNav.js","components/layout/InnerLayout.js","models/masterRecord.js","components/masterRecord/memberGroup/MemberGroup.js","components/masterRecord/memberGroup/AddMemberGroup.js","models/memberDetails.js","components/masterRecord/member/AddMember.js","components/masterRecord/member/Member.js","components/masterRecord/member/MemberViewDetails.js","models/groupLoan.js","components/groupLoan/Scheme.js","components/groupLoan/AddScheme.js","components/dashboard/Dashboard.js","components/groupLoan/LoanApplication.js","components/groupLoan/LoanApproval.js","components/groupLoan/DisburseLoan.js","components/groupLoan/EmiCard.js","components/groupLoan/EmiCardPrint.js","components/groupLoan/LoanApprovalDetails.js","components/groupLoan/AllApplications.js","components/groupLoan/EmiCalculator.js","components/emis/printDueEmis.js","components/emis/DueEmis.js","components/groupLoan/Village.js","components/groupLoan/AddVillage.js","models/expenseRecord.js","components/expenses/Expense.js","components/expenses/AddExpense.js","Routes.js","App.js","reportWebVitals.js","index.js","agent.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","window","location","hostname","encodeURIComponent","REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","message","role","record","id","statusCode","jwtToken","isLoginSuccess","subtype","key","value","common","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","data","prod","rootReducer","undefined","promiseMiddleware","store","next","v","then","dispatch","currentView","getState","viewChangeCounter","skipTracking","res","currentState","promise","error","response","body","localStorageMiddleware","localStorage","setItem","agent","setToken","createStore","reducer","composeWithDevTools","applyMiddleware","ListErrors","this","props","Alert","variant","Component","login","username","password","post","Loader","show","Spinner","animation","className","relative","Login","submitForm","ev","preventDefault","setState","isShowLoader","user","console","log","onSubmit","changeEmail","onChangeEmail","target","changePassword","onChangePassword","history","push","onUnload","Form","Row","Group","as","Col","controlId","Label","Control","placeholder","onChange","required","Button","disabled","connect","LogedInView","currentUser","aactiveClassName","to","LogedOutView","useDispatch","useHistory","name","email","split","isAdmin","isPrimeMember","onClick","ItrPopup","Modal","isopen","onHide","hide","centered","Header","closeButton","Title","Body","pathname","query","InnerHeader","handleITRPopup","Footer","Leftbar","useSelector","Nav","Item","Link","href","class","eventKey","TopNav","Navbar","collapseOnSelect","expand","bg","toggleSidebar","Toggle","Collapse","InnerLayout","component","rest","useState","showSidebar","setshowSidebar","useEffect","innerWidth","checkLogin","jwt","getItem","hasOwnProperty","render","Container","fluid","md","sm","getMemberGroups","get","saveMemberGroups","getMembersBygroup","group_code","MemberGroup","setisShowLoader","memberGroupRecords","setMemberGroupsRecords","memberList","setMemberList","showMemberModel","setshowMemberModel","getMemberGroup","masterRecord","length","Table","striped","bordered","hover","responsive","val","member_id","member_name","gender","moment","date_of_birth","format","age","marital_status","mobile_number","aadhar_number","voter_id_number","pan_card_number","driving_license_number","ration_card_number","bank_ifsc_code","bank_account","bank_account_holder","size","active","group","group_name","remark","AddMemberGroup","values","setValues","isShow","showToast","setShowToast","formik","useFormik","initialValues","user_id","validate","a","resetForm","handleChange","prevValues","Toast","autohide","delay","onClose","handleSubmit","touched","rows","getMemberDetailsData","saveMemberDetails","deleteMember","del","editMember","put","AddMember","Date","enrollmentDate","setEnrollmentDate","dob","setDob","groups","setGroups","getMemberDetails","memberDetails","email_id","member_group_id","enrollment_date","selected","date","Members","showDeleteModel","setShowDeleteModel","deleteID","setDeleteID","memberRecords","setMemberRecords","useMemo","index","col1","col2","col3","col4","col5","columns","accessor","allowFilter","memberRecord","UpdatedList","filter","member","idx","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","e","defaultColumn","React","Filter","paginate","totalPage","pageNumberArray","i","Pagination","First","gotoPage","Prev","previousPage","canPreviousPage","num","pageIndex","Next","nextPage","canNextPage","Last","useTable","initialState","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","pageCount","pageSize","setPageSize","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","getScheme","saveScheme","deleteScheme","getLoanAppInitialData","applyForloan","getApprovalList","getDisburseList","getLoanDetailbyId","approveRejectLoan","getAllLoanApplications","disburseRejectLoan","calculateEMI","getDueEmis","today","paidEmi","getPaidEmis","loanAccountNo","saveVillage","getVillage","Scheme","schemes","setSchemes","getSchemes","groupLoan","scheme","scheme_code","scheme_name","max_amount","interest_rate","EMI_type","deleteHandle","AddScheme","min","Dashboard","xs","Card","text","Text","LoanApplication","schemeRecords","setSchemeRecords","selectedScheme","setSelectedScheme","villageRecords","setVillageRecords","getSchemesAndMembers","all","scheme_id","application_date","address","loan_amount","EMI_payout","tenure","village_id","week","day","schems","selectedvill","vill","village_name","LoanApproval","loanlist","setLoanlist","getLoanList","loan","loan_id","DisburseLoan","EmiCard","border","header","handlePrintEMI","xmlns","width","height","fill","viewBox","d","showDisburseButton","emiData","paidEmiRecord","EMI","toFixed","principal","int_amount","outstanding","EmiCardPrint","PureComponent","LoanApprovalDetails","memberDetailsRef","useRef","handlePrintMemberDetail","useReactToPrint","content","current","documentTitle","applicationRef","handlePrintApplication","emiRef","setPaidEmiRecord","isShowEMILoader","setisShowEMILoader","setEmiData","loanDetails","setLoanDetails","showApprovalButton","setShowApprovalButton","setShowDisburseButton","getLoanDetails","calculateEmi","Tenure","EmiData","paidData","result","loan_account_no","emiDate","EMI_date","is_approved","is_disbursed","actionOnLoan","actionType","actionDisburseLoan","ref","style","display","AllApplications","col6","col7","actionStatus","col8","Cell","emi","Badge","formatedData","EmiCalculator","calculatedData","setCalculatedData","componentRef","handlePrint","loanStartDate","PrintDueEmis","add","parseFloat","dueEmis","colSpan","reduce","DueEmis","setDueEmis","paidID","setPaidID","emiDetailsRef","handlePrintEmiDetail","getDueEmisRecord","remain_EMI","EMI_amount","col9","loan_table_id","paidHandle","emi_id","substring","paidEMI","emidata","InputGroup","FormLabel","selectedDate","dateFormat","cursor","Village","getVillages","AddVillage","getExpense","saveExpense","deleteExpense","editExpense","Expense","expense","setExpense","getExpenses","expenseRecord","expense_type","amount","date_of_expense","created_at","AddExpense","getExpenseDetails","Routes","exact","path","MemberViewDetails","Member","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","responseBody","errorBody","err","token","tokenPlugin","req","set","requests","url","use","Auth","register","userDetails","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","getCategoryAdmin","getOrdersHistoryAdmin","getOrderHistoryByUserEmail","addCategory","deleteCategory","editCategory","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","Inquery","submitInquery","getToken","_token"],"mappings":"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","file":"static/js/main.8c760530.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nexport const superagent = superagentPromise(_superagent, global.Promise);\r\nexport const API_ROOT = window.location.hostname==\"localhost\"?\"https://dev-microfinance.herokuapp.com/api\": '/api';\r\n\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\nexport const requests = {\r\n    del: url =>\r\n      superagent.del(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    get: url =>\r\n      superagent.get(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    // put: (url, body) =>\r\n    //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n    post: (url, body) =>\r\n      superagent.post(`${API_ROOT}${url}`, body).then(responseBody,errorBody)\r\n  };","\r\n  \r\nexport const APP_LOAD = 'APP_LOAD';\r\nexport const REDIRECT = 'REDIRECT';\r\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\r\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\r\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\r\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\r\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\r\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\nexport const SET_PAGE = 'SET_PAGE';\r\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\r\nexport const CHANGE_TAB = 'CHANGE_TAB';\r\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\r\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\r\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\r\nexport const ASYNC_START = 'ASYNC_START';\r\nexport const ASYNC_END = 'ASYNC_END';\r\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\r\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const REMOVE_TAG = 'REMOVE_TAG';\r\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\r\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\r\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\r\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const RESET_ORDER = 'RESET_ORDER';\r\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\r\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';","import {\r\n    ADD_ITEM_INITIAL,\r\n    INCREASE_QUANTITY,\r\n    DECREASE_QUANTITY,\r\n    RESET_ORDER\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    addedItem: [],\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case ADD_ITEM_INITIAL:\r\n            const addedItem =[...state.addedItem,{\r\n                productId:action.item._id,\r\n                quantity:1,\r\n                perItemPrice:action.item.price,\r\n                item:action.item\r\n            }]\r\n            return {...state, addedItem};\r\n        case INCREASE_QUANTITY:\r\n             state.addedItem.map(record=>{\r\n                if(record.productId == action.productId){\r\n                    record.quantity +=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case DECREASE_QUANTITY:\r\n            state.addedItem.map(record=>{\r\n                if(record.productId == action.productId && record.quantity !=0){\r\n                        record.quantity -=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case RESET_ORDER:\r\n            state.addedItem = []\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import {\r\n    STORE_EDIT_PRODUCT,\r\n    GET_EDIT_PRODUCT,\r\n    UPDATE_PRODUCT_FIELD\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    product: {},\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case STORE_EDIT_PRODUCT:\r\n            return {...state,\r\n                product:action.data \r\n            };\r\n        case GET_EDIT_PRODUCT:\r\n            return {...state};\r\n        case UPDATE_PRODUCT_FIELD:\r\n            let prod = state.product;\r\n            prod[action.data.key]=action.data.value;\r\n           return {...state,product:prod}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import auth from './reducers/auth';\r\nimport common from './reducers/common';\r\nimport order from './reducers/order';\r\nimport product from './reducers/product';\r\nimport { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  common,\r\n  order,\r\n  product\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\nexport default rootReducer\r\n// export default combineReducers({\r\n//   auth,\r\n//   common,\r\n//   order,\r\n//     //router: routerReducer\r\n//   });","import {\r\n    LOGIN,\r\n    REGISTER,\r\n    LOGIN_PAGE_UNLOADED,\r\n    REGISTER_PAGE_UNLOADED,\r\n    ASYNC_START,\r\n    UPDATE_FIELD_AUTH,\r\n    LOGOUT\r\n  } from '../constants/actionTypes';\r\n  \r\n  export default (state = {}, action) => {\r\n  //console.log(action);\r\n    switch (action.type) {\r\n      case LOGIN:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload.message,\r\n          role:action.payload.record[0]?.role,\r\n          id:action.payload.record[0]?.id,\r\n          statusCode:action.payload.jwtToken != \"\"?\"200\":\"\",\r\n          isLoginSuccess:action.payload.jwtToken != \"\"? true:false\r\n        }\r\n      case REGISTER:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload.statusCode\r\n        };\r\n      case LOGIN_PAGE_UNLOADED:\r\n      return{\r\n        ...state,\r\n        //errors: action.payload,\r\n        //userDetails:\r\n      }\r\n      case REGISTER_PAGE_UNLOADED:\r\n        return {};\r\n      case ASYNC_START:\r\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\r\n          return { ...state, inProgress: true };\r\n        }\r\n        break;\r\n      case UPDATE_FIELD_AUTH:\r\n        return { ...state, [action.key]: action.value };\r\n      default:\r\n        return state;\r\n    }\r\n    return state;\r\n  };","import {\r\n    LOGOUT,\r\n    REDIRECT\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0\r\n  };\r\n  \r\n  export default (state = {}, action) => {\r\n    //console.log(action);\r\n      switch (action.type) {\r\n        case REDIRECT:\r\n            return { ...state, redirectTo: null };\r\n        // case LOGOUT:\r\n        //     return { redirectTo: '/login', token: null, currentUser: null };\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import agent from './agent';\r\nimport {\r\n  ASYNC_START,\r\n  ASYNC_END,\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER\r\n} from './constants/actionTypes';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\r\n\r\n    const currentView = store.getState().viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === LOGIN && action.payload != undefined) {\r\n    if (action.payload.jwtToken!=\"\") {\r\n      window.localStorage.setItem('jwt', action.payload.jwtToken);\r\n      agent.setToken(action.payload.jwtToken);\r\n    }\r\n  } else if (action.type === LOGOUT) {\r\n    window.localStorage.setItem('jwt','');\r\n    agent.setToken(null);\r\n  }\r\n\r\n   next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nconst getMiddleware = () => {\r\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\r\n  };\r\nexport const store = createStore(reducer,composeWithDevTools(getMiddleware()));","import React, { Component } from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\n\r\nexport default class ListErrors extends Component {\r\n    render() {\r\n        const errors = this.props.errors;\r\n        const statusCode = this.props.statusCode;\r\n        if (errors) {\r\n            return (\r\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\r\n                    {errors}\r\n              </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n\r\nconst Auth = {\r\n    login: (username, password) =>\r\n    superagent.post(`${API_ROOT}/user/login`,  { username, password } ),\r\n  };\r\n  \r\n  export default {Auth};\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader(props) {\r\n    if(props.show){\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\" className={props?.relative?\"loader-relative\":\"loader\"}>\r\n            </Spinner>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component}  from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\nimport user from \"../../models/user\";\r\nimport Loader from '../layout/Loader';\r\nimport {\r\n    UPDATE_FIELD_AUTH,\r\n    LOGIN,\r\n    LOGIN_PAGE_UNLOADED\r\n} from '../../constants/actionTypes';\r\n\r\nclass Login extends Component {\r\n   // let history = useHistory();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={isShowLoader:false};\r\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\r\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\r\n    }\r\n    submitForm=ev=> {\r\n        ev.preventDefault();\r\n        this.setState({isShowLoader:true});\r\n        user.Auth.login(this.props.username, this.props.password).then(res=>{\r\n            this.setState({isShowLoader:false});\r\n            console.log(res);\r\n            this.props.onSubmit(res.body);\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.isLoginSuccess){\r\n            this.props.history.push('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.props.onUnload();\r\n      }\r\n    render() {\r\n        const username = this.props.username;\r\n        const password = this.props.password;\r\n        return (\r\n            <>\r\n            <div className=\"login-div\">\r\n            <Loader show={this.state.isShowLoader} />\r\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\r\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\r\n                <Form className=\"login-form\" onSubmit={this.submitForm}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={this.changeEmail} required/>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={password}  onChange={this.changePassword} required/>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row >\r\n                        <Col>\r\n                        <Button variant=\"primary\" disabled={this.props.inProgress} type=\"submit\">{this.props.inProgress ? 'Loading…' : \"Login\"}</Button>\r\n\r\n                        </Col>\r\n                    </Form.Row>\r\n                    {/* <Form.Row>\r\n                        <Link as={Col} to=\"/registration\" > SignUp</Link>\r\n                    </Form.Row> */}\r\n\r\n                </Form>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeEmail: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\r\n    onChangePassword: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n    onSubmit: (data) =>\r\n        dispatch({ type: LOGIN, payload: data }),\r\n    onUnload: () =>\r\n        dispatch({ type: LOGIN_PAGE_UNLOADED })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\n\r\nfunction LogedInView(props) {\r\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\r\n        return (\r\n\r\n        <li className=\"nav-item\">\r\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default LogedInView\r\n","import React from 'react'\r\nimport { Route, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    LOGOUT\r\n  } from '../../constants/actionTypes';\r\nfunction LogedOutView(props) {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const logout = ()=>{\r\n         dispatch({ type: LOGOUT })\r\n           console.log(\"hollo\");\r\n           history.push(\"/\");\r\n       }\r\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\r\n        let name = props.currentUser.email.split(\"@\");\r\n\r\n        return (<>\r\n            \r\n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\r\n            <li className=\"nav-item\">\r\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\r\n            </li>\r\n                \r\n            </li>:\"\"}            \r\n            <li className=\"nav-item\">\r\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\r\n                    {name[0]}\r\n\r\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \r\n\r\n                    \r\n                    </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\r\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\r\n            </li>\r\n        </>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LogedOutView\r\n","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//import \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction ItrPopup(props) {\r\n    return (\r\n    <Modal show={props.isopen} onHide={props.hide} centered className=\"text-center\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Tax Return</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'fill'}}}  className=\"btn btn-danger btn-sm\">Start Your Tax Return</Link>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'uploadForm16'}}} className=\"btn btn-danger btn-sm\">Upload Form-16 Now</Link>\r\n            </Modal.Body>\r\n        </Modal>\r\n        )\r\n}\r\n\r\nexport default ItrPopup\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass InnerHeader extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n    render(){\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\r\n                <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                                {/* <a className=\"nav-link\" href=\"#\">Home\r\n                    <span className=\"sr-only\">(current)</span>\r\n                                </a> */}\r\n                            {/* </li> */}\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\"> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\r\n                                {/* <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n\r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\r\n","import React from 'react'\r\nimport TotalAmount from '../food-order/TotalAmount'\r\nfunction Footer() {\r\n    return (\r\n      <>\r\n\r\n        <footer className=\"page-footer font-small stylish-color-dark pt-4\">\r\n        {/* <div className=\"container text-center text-md-left\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Footer Content</h5>\r\n              <p>Here you can use rows and columns to organize your footer content. Lorem ipsum dolor sit amet,\r\n                consectetur\r\n                adipisicing elit.</p>\r\n            </div>\r\n            <hr className=\"clearfix w-100 d-md-none\"/>\r\n            <div className=\"col-md-2 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Link 1</a>\r\n                </li>\r\n              </ul>\r\n            </div>    \r\n            <hr className=\"clearfix w-100 d-md-none\"/>\r\n            <div className=\"col-md-2 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Link 1</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <hr className=\"clearfix w-100 d-md-none\"/>\r\n            <div className=\"col-md-2 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Link 1</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n    \r\n        {/* <ul className=\"list-unstyled list-inline text-center py-2\">\r\n          <li className=\"list-inlin e-item\">\r\n            <h5 className=\"mb-1\">Register for free</h5>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"#!\" className=\"btn btn-danger btn-rounded\">Sign up!</a>\r\n          </li>\r\n        </ul> */}\r\n    \r\n        <hr/>\r\n    \r\n        <ul className=\"list-unstyled list-inline text-center\">\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-fb mx-1\">\r\n              <i className=\"fab fa-facebook-f\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-tw mx-1\">\r\n              <i className=\"fab fa-twitter\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-gplus mx-1\">\r\n              <i className=\"fab fa-google-plus-g\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-li mx-1\">\r\n              <i className=\"fab fa-linkedin-in\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-dribbble mx-1\">\r\n              <i className=\"fab fa-dribbble\"> </i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n        </div>\r\n        <TotalAmount/>\r\n      </footer>\r\n      </>\r\n        )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, Nav} from 'react-bootstrap';\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nexport default function Leftbar() {\r\n    const auth = useSelector(state => state.auth);\r\n    return (\r\n        // <Col md={2} id=\"sidebar-col\" className=\"pr-0\">\r\n            <nav id=\"sidebar\">\r\n                {/* <div className=\"sidebar-header\">\r\n                    <h5>AA2 MutualHelp</h5>\r\n                </div> */}\r\n                <Nav className=\"list-unstyled components flex-column\" as=\"ul\" >\r\n                <Nav.Item as=\"li\" className=\"active\">\r\n                <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                     Dashboard\r\n            </Nav.Link>\r\n            </LinkContainer>\r\n                </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                   \r\n                        <Nav.Link href=\"#homeSubmenu\" className=\"dropdown-toggle\" data-toggle=\"collapse\" aria-expanded=\"false\">Master Record</Nav.Link>\r\n                        \r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"homeSubmenu\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/memberGroup\">\r\n                                <Nav.Link href=\"/home\">Member Group</Nav.Link>\r\n                                </LinkContainer>\r\n                                {/* <NavLink to=\"/memberGroup\">Member Group</NavLink> */}\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/member\">\r\n                                <Nav.Link eventKey=\"link-1\">Members</Nav.Link>\r\n                            </LinkContainer>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#groupLoan\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Group Loan</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"groupLoan\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/emiCalculator\">\r\n                                <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/scheme\">\r\n                                <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/village\">\r\n                                <Nav.Link eventKey=\"link-1\">Village</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/loanApplication\">\r\n                                <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/loanApproval\">\r\n                                <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>:\"\"}\r\n                            {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/disburseLoan\">\r\n                                <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>:\"\"}\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/allApplications\">\r\n                                <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#processingFee\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"processingFee\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"#\">List Processing Fee</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#expense\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Expense</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"expense\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <LinkContainer to=\"/expense\">\r\n                                <Nav.Link href=\"#\">List Expense</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#payments\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Payment to collect</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"payments\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <LinkContainer to=\"/dueEmis\">\r\n                                    <Nav.Link href=\"#\">Payment to collect(Loan)</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </nav>\r\n        // </Col>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router';\r\nimport {LOGOUT} from '../../constants/actionTypes';\r\n\r\nexport default function TopNav(props) {\r\nconst auth = useSelector(state => state.auth);\r\nconst dispatch = useDispatch();\r\nlet history = useHistory();\r\nconst logout = ()=>{\r\n     dispatch({ type: LOGOUT })\r\n       history.push(\"/login\");\r\n   }\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\r\n               \r\n                <h4 id=\"logo-web\" className=\"mr-4\">AA2 MutualHelp</h4>\r\n            <button type=\"button\" onClick={props.toggleSidebar} class=\"btn btn-dark\">\r\n                <i class=\"fas fa-align-left\"></i>\r\n            </button>\r\n            <h4 id=\"logo-mobile\" className=\"\">AA2 MutualHelp</h4>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link href=\"#\">{auth.username}</Nav.Link>\r\n                    <Nav.Link eventKey={2} onClick={logout}>\r\n                        Logout\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport InnerHeader from './InnerHeader';\r\nimport Footer from './Footer';\r\nimport Leftbar from './Leftbar';\r\nimport TopNav from './TopNav';\r\nimport { useHistory } from 'react-router';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst InnerLayout = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const [showSidebar, setshowSidebar] = useState(true)\r\n    useEffect(() => {\r\n        setshowSidebar(window.innerWidth <= 768 ? false : true);\r\n        checkLogin();\r\n    }, [Component]);\r\n    const toggleSidebar = () => {\r\n\r\n        console.log(window);\r\n        setshowSidebar(showSidebar ? false : true)\r\n        // this.setState({\r\n        //   isopen:this.state.isopen?false:true\r\n        // })\r\n    }\r\n    const checkLogin = () =>{\r\n        let jwt = \"\";\r\n         jwt = localStorage.getItem(\"jwt\");\r\n         console.log(jwt);\r\n         if(jwt==\"\" || !auth.hasOwnProperty(\"username\")){\r\n             history.push(\"/login\");\r\n         }\r\n    }\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <>\r\n            \r\n            <Container fluid className=\"pl-0 pr-0\">\r\n            <Row>\r\n                <Col>\r\n                <TopNav toggleSidebar={toggleSidebar} />\r\n                </Col>\r\n            \r\n            </Row>\r\n                \r\n                <Row>\r\n                    \r\n                        {showSidebar ?<Col md={2} sm={2} id=\"sidebar-col\" className=\"bg-info\"><Leftbar/></Col> : \"\"}\r\n                        \r\n                   \r\n                    <Col sm={showSidebar ? 10 : 12} >\r\n                        <div id=\"content\">\r\n\r\n                            <Component {...props} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* <Footer /> */}\r\n                </Container>\r\n            </>\r\n        )} />)\r\n}\r\n\r\nexport default InnerLayout\r\n","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberGroupModel = {\r\n  getMemberGroups(){\r\n    return superagent.get(`${API_ROOT}/memberGroups/entry`)\r\n  },\r\n  saveMemberGroups(data){\r\n    return superagent.post(`${API_ROOT}/memberGroups/entry`,data)\r\n  },\r\n  getMembersBygroup(group_code){\r\n    return superagent.get(`${API_ROOT}/memberGroups/memberByGroupCode/${group_code}`)\r\n  }\r\n  }\r\n    export default {MemberGroupModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nfunction MemberGroup(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [memberGroupRecords,setMemberGroupsRecords]=useState([]);\r\n    const [memberList,setMemberList]=useState([]);\r\n\r\n    const [showMemberModel, setshowMemberModel] = useState(false)\r\n    const memberRecord = [];\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        masterRecord.MemberGroupModel.getMemberGroups().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberGroupsRecords(res.body.message);\r\n            }else{\r\n                setMemberGroupsRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    const handleMemmberList = (group_code)=>{\r\n        console.log(group_code);\r\n        setisShowLoader(true);\r\n        masterRecord.MemberGroupModel.getMembersBygroup(group_code).then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberList(res.body.message);\r\n                setshowMemberModel(true);\r\n            }else{\r\n                setMemberList([]);\r\n            }\r\n        })\r\n\r\n    }\r\n    return (\r\n        <>\r\n      <Modal show={showMemberModel} onHide={()=>setshowMemberModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Members</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{memberList.length!=0?<Table className=\"bg-white rounded small\" striped bordered hover responsive>\r\n        <thead className=\"bg-primary\">\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Gender</th>\r\n                <th>DOB</th>\r\n                <th>age</th>\r\n                <th>Marital status</th>\r\n                <th>Mobile</th>\r\n                <th>Aadhar</th>\r\n                <th>Voter id</th>\r\n                <th>PAN</th>\r\n                <th>Driving licence</th>\r\n                <th>Ration card</th>\r\n                <th>Bank IFSC code</th>\r\n                <th>Bank account</th>\r\n                <th>Bank account holder</th>\r\n            </tr>\r\n            </thead> \r\n                <tbody>\r\n                {memberList.map(val=>\r\n            <tr>\r\n                <td>{val.member_id}</td>\r\n                <td>{val.member_name}</td>\r\n                <td>{val.gender}</td>\r\n                <td>{moment(val.date_of_birth).format(\"DD-MM-YYYY\") }</td>\r\n                <td>{val.age}</td>\r\n                <td>{val.marital_status}</td>\r\n                <td>{val.mobile_number}</td>\r\n                <td>{val.aadhar_number}</td>\r\n                <td>{val.voter_id_number}</td>\r\n                <td>{val.pan_card_number}</td>\r\n                <td>{val.driving_license_number}</td>\r\n                <td>{val.ration_card_number}</td>\r\n                <td>{val.bank_ifsc_code}</td>\r\n                <td>{val.bank_account}</td>\r\n                <td>{val.bank_account_holder}</td>\r\n            </tr>\r\n            )}\r\n            </tbody></Table>:<h5>No members in this group!</h5>}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setshowMemberModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>setshowMemberModel(false)}>\r\n            Ok\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Member Groups</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMemberGroup\">\r\n                <Button variant=\"info\" size=\"sm\" active>\r\n                    Add Member Group\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Group Code</th>\r\n                    <th>Name</th>\r\n                    <th>Remark</th>\r\n                    <th>Member</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {memberGroupRecords.map((group,id)=>(<tr>\r\n                    <td>{group.group_code}</td>\r\n                    <td>{group.group_name}</td>\r\n                    <td>{group.remark}</td>\r\n                    <td><Button size=\"sm\" variant=\"info\" onClick={()=>handleMemmberList(group.group_code)}>View Members</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default MemberGroup;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddMemberGroup(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false,type:\"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.group_code) {\r\n      errors.group_code = 'Group Code is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      group_code: '',\r\n      group_name: '',\r\n      remark: '',\r\n      user_id:auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await masterRecord.MemberGroupModel.saveMemberGroups(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          formik.resetForm();\r\n        } else {\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Member Group</h2>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Group Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"group_code\"\r\n                  placeholder=\"Enter group code\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.group_code}\r\n\r\n                />\r\n                {formik.touched.group_code && formik.errors.group_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.group_code}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Group Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"group_name\"\r\n                  placeholder=\"Enter group name\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.group_name}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Remark</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} name=\"remark\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.remark} />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddMemberGroup;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberDetailModel = {\r\n  getMemberDetailsData(member_id=\"all\"){\r\n    return superagent.get(`${API_ROOT}/member/entry/${member_id}`)\r\n  },\r\n  saveMemberDetails(data){\r\n    return superagent.post(`${API_ROOT}/member/entry`,data)\r\n\r\n  },\r\n  deleteMember(id){\r\n    return superagent.del(`${API_ROOT}/member/entry/${id}`)\r\n  },  \r\n  editMember(data,id){\r\n    return superagent.put(`${API_ROOT}/member/entry/${id}`,data)\r\n  }  \r\n    \r\n  }\r\n    export default {MemberDetailModel};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useFormik } from 'formik';\r\nimport memberDetails from \"../../../models/memberDetails\"\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Loader from '../../layout/Loader';\r\n\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nfunction AddMember(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    let history = useHistory();\r\n\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [dob, setDob] = useState();\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [groups, setGroups] = useState([])\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n        console.log(props);\r\n        if(props.location.state)\r\n            getMemberDetails(props.location.state);\r\n        getMemberGroups();\r\n    }, [])\r\n    const getMemberGroups = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.getMemberGroups();\r\n            setisShowLoader(false);\r\n            setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const getMemberDetails = async(member_id)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await memberDetails.MemberDetailModel.getMemberDetailsData(member_id);\r\n            console.log(response);\r\n            formik.values.aadhar_number = response.body.message[0].aadhar_number  \r\n            formik.values.member_name = response.body.message[0].member_name \r\n            formik.values.gender = response.body.message[0].gender \r\n            formik.values.age = response.body.message[0].age \r\n            formik.values.marital_status = response.body.message[0].marital_status \r\n            formik.values.mobile_number = response.body.message[0].mobile_number \r\n            formik.values.email_id = response.body.message[0].email_id \r\n            formik.values.member_group_id = response.body.message[0].member_group_id \r\n            formik.values.pan_card_number = response.body.message[0].pan_card_number \r\n            formik.values.driving_license_number = response.body.message[0].driving_license_number \r\n            formik.values.voter_id_number = response.body.message[0].voter_id_number \r\n            formik.values.ration_card_number = response.body.message[0].ration_card_number \r\n            formik.values.bank_account = response.body.message[0].bank_account \r\n            formik.values.bank_ifsc_code = response.body.message[0].bank_ifsc_code \r\n            formik.values.bank_account_holder = response.body.message[0].bank_account_holder \r\n            formik.values.enrollment_date = response.body.message[0].enrollment_date \r\n            setEnrollmentDate(new Date(response.body.message[0].enrollment_date));\r\n            formik.values.date_of_birth = response.body.message[0].date_of_birth \r\n            setDob(new Date(response.body.message[0].date_of_birth));\r\n\r\n            setisShowLoader(false);\r\n            //setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.member_name) {\r\n            errors.member_name = 'Please provide member name';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            enrollment_date: enrollmentDate,\r\n            date_of_birth: dob,\r\n            member_name: '',\r\n            gender: \"\",\r\n            age: \"\",\r\n            marital_status: \"\",\r\n            mobile_number: \"\",\r\n            email_id: \"\",\r\n            member_group_id: \"\",\r\n            aadhar_number: \"\",\r\n            pan_card_number: \"\",\r\n            driving_license_number: \"\",\r\n            voter_id_number: \"\",\r\n            ration_card_number: \"\",\r\n            bank_account:\"\",\r\n            bank_ifsc_code:\"\",\r\n            bank_account_holder:\"\",\r\n            user_id:auth.id\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setisShowLoader(true);\r\n            try {\r\n                values.enrollment_date = enrollmentDate;\r\n                values.date_of_birth = dob;\r\n                let response = [];\r\n                if(props.location.state){\r\n                     response = await memberDetails.MemberDetailModel.editMember(values,props.location.state);\r\n\r\n                }else{\r\n                     response = await memberDetails.MemberDetailModel.saveMemberDetails(values);\r\n                }\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    if(props.location.state)\r\n                        history.push(\"/member\")\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: response.body.message })\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <>\r\n            <Toast key={1} autohide delay={3000}  show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                <Toast.Header>\r\n                    <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                </Toast.Header>\r\n                <Toast.Body className=\"Dark\">\r\n                    {showToast.message}\r\n                </Toast.Body>\r\n            </Toast>\r\n\r\n            <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Member</h2>\r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Enrollment Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"enrollment_date\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridName\">\r\n                            <Form.Label >Member Name</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                placeholder=\"member name\"\r\n                                name=\"member_name\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_name}\r\n\r\n                            />\r\n                            {formik.touched.member_name && formik.errors.member_name ? (\r\n                                <div class=\"text-danger\">{formik.errors.member_name}</div>\r\n                            ) : null}\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Date of Birth</Form.Label>\r\n                            <DatePicker\r\n                                class=\"form-control\"\r\n                                selected={dob}\r\n                                onChange={(date) => setDob(date)}\r\n                                name=\"date_of_birth\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>Gender</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"gender\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.gender}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Gender</option>\r\n\r\n                                <option key=\"male\" value=\"male\">Male</option>\r\n                                <option key=\"female\" value=\"female\">Female</option>\r\n\r\n                            </select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Age</Form.Label>\r\n                            <Form.Control\r\n                                name=\"age\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.age}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Marital Status</Form.Label>\r\n                            <Form.Control\r\n                                name=\"marital_status\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.marital_status}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Phone number</Form.Label>\r\n                            <Form.Control\r\n                                name=\"mobile_number\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.mobile_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                name=\"email_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.email_id}\r\n                                type=\"text\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} md={6} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>Member Group</Form.Label>\r\n                            <select className=\"form-control\" name=\"member_group_id\" onChange={formik.handleChange}\r\n                                value={formik.values.member_group_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member Group</option>\r\n                                {groups.map((group,id)=>(\r\n                                    <option key={group.group_code} value={group.group_code}>{group.group_code}</option>\r\n                                ))}\r\n                            </select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            <h3 className=\"text-info\">KYC Information</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Aadhar no.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"aadhar_number\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.aadhar_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>PAN</Form.Label>\r\n                            <Form.Control\r\n                                name=\"pan_card_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pan_card_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Driving Licence No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"driving_license_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.driving_license_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Voter Id No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"voter_id_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.voter_id_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                            <Form.Label>Ration Card No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"ration_card_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.ration_card_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n \r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            <h3 className=\"text-info\">Bank Details</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Bank Account No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"bank_account\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.bank_account}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>IFSC code</Form.Label>\r\n                            <Form.Control\r\n                                name=\"bank_ifsc_code\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.bank_ifsc_code}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                            <Form.Label>Account holder name</Form.Label>\r\n                            <Form.Control\r\n                                name=\"bank_account_holder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.bank_account_holder}\r\n                            />\r\n                        </Form.Group>\r\n\r\n\r\n                    </Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddMember;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal,Pagination } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\nimport { useHistory } from 'react-router-dom';\r\nfunction Members(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    const [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n    \r\n    const data = useMemo(\r\n        () => \r\n        memberRecords.map((record,index)=>\r\n                { \r\n             return {\r\n                col1:moment(record.enrollment_date).format('DD-MM-yyy hh:ss A'),\r\n                col2:record.member_name,\r\n                col3:record.member_group_id,\r\n                col4:record.mobile_number,\r\n                col5:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [memberRecords]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Enrollment Date',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Name',\r\n            accessor: 'col2',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Group Code',\r\n            accessor: 'col3',\r\n            allowFilter:true\r\n            },\r\n          {\r\n            Header: 'Mobile Number',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col5',\r\n            allowFilter:false\r\n          }\r\n\r\n        ],\r\n        []\r\n      )    \r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMember=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await memberRecord.MemberDetailModel.deleteMember(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = memberRecords.filter((member,idx)=>member.member_id!=deleteID);\r\n                setMemberRecords(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n              \r\n    }\r\n  \r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMember()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Members</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMember\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Member\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <div className=\"text-right\">\r\n              {paginate(pageCount)}\r\n            </div>   \r\n\r\n            <Table {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody{...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col5\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    }else{\r\n                                        return (\r\n                                            <td>\r\n                                                {/* <Link to = \"/viewMemberDetail/:5\" params={{ member_id: cell.value.member_id }}> */}\r\n                                                <Button size={\"sm\"} variant=\"primary\"  onClick={()=>{history.push(\"/viewMemberDetail\",cell.value.member_id)}}>View</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"success\" onClick={()=>{history.push(\"/addMember\",cell.value.member_id)}} >Edit</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(cell.value.member_id)} >Delete</Button>\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n\r\n            </tbody>\r\n        </Table>\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n        </Col>\r\n        </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\n\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n        console.log(props);\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData(props.location.state).then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message[0]);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Member Detail - {memberRecords.member_name}</h2>\r\n\r\n            <Row className=\"mb-5 mt-3\">\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <tbody>\r\n                <tr><th>Enrollment Date</th><td>{moment(memberRecords.enrollment_date).format(\"DD-MM-YYYY hh:ss A\") }</td> </tr>\r\n                <tr><th>Member Name</th>  <td>{memberRecords.member_name}</td></tr> \r\n                <tr><th>Member Id</th>  <td>{memberRecords.member_id}</td></tr> \r\n                <tr> <th>Gender</th>  <td>{memberRecords.gender}</td></tr> \r\n                <tr><th>DOB</th>   <td>{moment(memberRecords.date_of_birth).format(\"DD-MM-YYYY\") } </td></tr> \r\n                <tr><th>Age</th> <td>{memberRecords.age}</td></tr> \r\n                <tr><th>Marital Status</th>  <td>{memberRecords.marital_status}</td></tr> \r\n                <tr><th>Mobile Number</th> <td>{memberRecords.mobile_number}</td></tr> \r\n                <tr><th>Email Id</th> <td>{memberRecords.email_id}</td></tr> \r\n                <tr> <th>Member Group Id</th>  <td>{memberRecords.member_group_id}</td></tr> \r\n                <tr> <th>Aadhar Number</th> <td>{memberRecords.aadhar_number}</td></tr> \r\n                <tr> <th>Driving License Number</th>  <td>{memberRecords.driving_license_number}</td></tr> \r\n                <tr> <th>Voter Id Number </th>  <td>{memberRecords.voter_id_number}</td></tr> \r\n                <tr>  <th>Ration Card Number</th> <td>{memberRecords.ration_card_number}</td></tr> \r\n                <tr> <th>PAN Number</th> <td>{memberRecords.pan_card_number }</td></tr> \r\n                <tr> <th>Bank Account no.</th> <td>{memberRecords.bank_account }</td></tr> \r\n                <tr> <th>IFSC Code</th> <td>{memberRecords.bank_ifsc_code }</td></tr> \r\n                <tr> <th>Bank Account Holder</th> <td>{memberRecords.bank_account_holder }</td></tr> \r\n\r\n            </tbody>\r\n            </Table>\r\n            </Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import moment from \"moment\"\r\nimport { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n//const url = '/memberGroups/';\r\n\r\nconst SchemeModel = {\r\n  getScheme() {\r\n    return superagent.get(`${API_ROOT}/scheme/entry`)\r\n  },\r\n  saveScheme(data) {\r\n    return superagent.post(`${API_ROOT}/scheme/entry`, data)\r\n  },\r\n  deleteScheme(id){\r\n    return superagent.del(`${API_ROOT}/scheme/entry/${id}`)\r\n  },  \r\n  getLoanAppInitialData(){\r\n      return [superagent.get(`${API_ROOT}/scheme/entry`),superagent.get(`${API_ROOT}/member/entry/all`),superagent.get(`${API_ROOT}/village/entry`)]\r\n  }\r\n\r\n}\r\nconst GroupLoanModel = {\r\n  applyForloan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/applyGroupLoan`, data)\r\n  },\r\n  getApprovalList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingApproval`);\r\n  },\r\n  getDisburseList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingDisburse`);\r\n  },\r\n  getLoanDetailbyId(id){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/${id}`);\r\n  },\r\n  approveRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/approveLoan`, data)\r\n  },\r\n  getAllLoanApplications(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/all`);\r\n  },\r\n  disburseRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/disburseLoan`, data)\r\n  },\r\n\r\n}\r\nconst EmiModel = {\r\n  calculateEMI(data){\r\n    return superagent.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  },\r\n  getDueEmis(today = moment().format(\"yyyy-MM-DD\")){\r\n    return superagent.get(`${API_ROOT}/emis/dueEMIs/${today}`);\r\n  },\r\n  paidEmi(id){\r\n    return superagent.put(`${API_ROOT}/emis/entry`,{\"id\":id});\r\n  },\r\n  getPaidEmis(loanAccountNo){\r\n    return superagent.get(`${API_ROOT}/emis/entry/${loanAccountNo}`);\r\n  }\r\n}\r\nconst villageModel = {\r\n  saveVillage(data){\r\n    return superagent.post(`${API_ROOT}/village/entry`, data); \r\n  },\r\n  getVillage(){\r\n    return superagent.get(`${API_ROOT}/village/entry`); \r\n  }\r\n}\r\nexport default { SchemeModel,GroupLoanModel,EmiModel,villageModel };","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\n\r\nfunction Scheme(props) {\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [schemes,setSchemes]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    useEffect(() => {\r\n        getSchemes();\r\n    },[])\r\n\r\n    const getSchemes = () =>{\r\n        setisShowLoader(true);\r\n        groupLoan.SchemeModel.getScheme().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setSchemes(res.body.message);\r\n            }else{\r\n                setSchemes([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.SchemeModel.deleteScheme(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = schemes.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setSchemes(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Scheme</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Schemes</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addScheme\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Scheme\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Scheme code</th>\r\n                    <th>Scheme name</th>\r\n                    <th>Max amount</th>\r\n                    <th>Interest rate (%)</th>\r\n                    <th>EMI type</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {schemes.map((scheme,id)=>(<tr>\r\n                    <td>{scheme.scheme_code}</td>\r\n                    <td>{scheme.scheme_name}</td>\r\n                    <td>{scheme.max_amount}</td>\r\n                    <td>{scheme.interest_rate }%</td>\r\n                    <td>{scheme.EMI_type }</td>\r\n                    <td>\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(scheme.id)} className=\"ml-2\">Delete</Button>\r\n\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\n\r\nexport default Scheme;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddScheme(props) {\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.scheme_code) {\r\n      errors.scheme_code = 'Scheme code is Required!';\r\n    }\r\n    if (!values.scheme_name) {\r\n      errors.scheme_name = 'Scheme name is Required!';\r\n    }\r\n    if (!values.max_amount) {\r\n      errors.max_amount = 'Max amount is Required!';\r\n    }\r\n    if (!values.interest_rate) {\r\n      errors.interest_rate = 'Interest rate is Required!';\r\n    }\r\n    if (!values.EMI_type) {\r\n      errors.EMI_type = 'EMI type is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      scheme_code: '',\r\n      scheme_name: '',\r\n      max_amount: '',\r\n      interest_rate: '',\r\n      EMI_type: '',\r\n      user_id:auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n        try {\r\n          let response = await groupLoan.SchemeModel.saveScheme(values);\r\n          setisShowLoader(false);\r\n          if (response.statusCode == 200) {\r\n            formik.resetForm();\r\n            setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          } else {\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n          }\r\n\r\n        } catch (error) {\r\n          setisShowLoader(false);\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n        }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Scheme</h2>\r\n      <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Scheme Code</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_code\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_code}\r\n              />\r\n                {formik.touched.scheme_code && formik.errors.scheme_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_code}</div>\r\n                ) : null}              \r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\">\r\n              <Form.Label>Scheme Name</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_name\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_name}\r\n              />\r\n                {formik.touched.scheme_name && formik.errors.scheme_name ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_name}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Max amount</Form.Label>\r\n              <Form.Control\r\n                name=\"max_amount\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.max_amount}\r\n              />\r\n                {formik.touched.max_amount && formik.errors.max_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.max_amount}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Interest Rate (in %)</Form.Label>\r\n              <Form.Control\r\n                name=\"interest_rate\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.interest_rate}\r\n              />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" md={6}>\r\n            <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n              <Form.Label>EMI type</Form.Label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"EMI_type\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.EMI_type}\r\n              >\r\n                <option key=\"\" value=\"\">Select EMI type</option>\r\n                <option key=\"flat\" value=\"flat\">Flat rate</option>\r\n                {/* <option key=\"reduceing\" value=\"reduceing\">Reduceing rate</option> */}\r\n              </select>\r\n              {formik.touched.EMI_type && formik.errors.EMI_type ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_type}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddScheme;","import React, { Component } from 'react'\r\nimport agent from '../../agent'\r\nimport Loader from '../layout/Loader';\r\nimport {  Card, Col, Row } from 'react-bootstrap';\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <div >\r\n            <Row xs={1} md={3} className=\"g-2\">\r\n                <Col>\r\n                    <Card\r\n                    bg={\"primary\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    // style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">100</h2></Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                            Received Amount(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card> \r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card\r\n                    bg={\"danger\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    // style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">10</h2> </Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                          Paid Amount(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>            \r\n                </Col>\r\n                <Col>\r\n                    <Card\r\n                    bg={\"success\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    // style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">90</h2> </Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                            Cash in hand(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>            \r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction LoanApplication(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [schemeRecords, setSchemeRecords] = useState([]);\r\n    const [selectedScheme, setSelectedScheme] = useState({});\r\n    const [villageRecords, setVillageRecords] = useState([]);\r\n    const tanure = {\"weekly\":\"Weeks\",\"monthly\":\"Months\",\"daily\":\"Days\",\"fortnight\":\"Fortnight\",\"village\":\"Village\"};\r\n    let history = useHistory();\r\n    //const selectedSm = {\"interest_rate\":0,\"EMI_type\":\"\",\"max_amount\":0};\r\n    useEffect(()=>{\r\n        getSchemesAndMembers();\r\n    },[])\r\n    const getSchemesAndMembers=async()=>{\r\n        try{\r\n            setisShowLoader(true);\r\n            const response =await Promise.all(groupLoan.SchemeModel.getLoanAppInitialData())\r\n            setisShowLoader(false);\r\n            setSchemeRecords(response[0].body.message);\r\n            setMemberRecords(response[1].body.message);\r\n            setVillageRecords(response[2].body.message);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.scheme_id) {\r\n            errors.scheme_id = 'Scheme code is Required!';\r\n        }\r\n        if (!values.member_id) {\r\n            errors.member_id = 'Member name is Required!';\r\n        }\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required!';\r\n        }\r\n        if (selectedScheme?.interest_rate>0 && values.interest_rate>selectedScheme?.interest_rate) {\r\n            errors.interest_rate = `As per the Selected Scheme. Interest rate should not greater than ${selectedScheme.interest_rate}.`;\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required!';\r\n        }\r\n        if (selectedScheme?.max_amount>0 && values.loan_amount>selectedScheme.max_amount) {\r\n            errors.loan_amount = `As per the Selected Scheme. Loan amount should not greater than ${selectedScheme.max_amount}.`;\r\n        }\r\n        // if (!values.EMI_amount) {\r\n        //     errors.EMI_amount = 'EMI amount is Required!';\r\n        // }\r\n        if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required!';\r\n        }\r\n        if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required!';\r\n        }\r\n        if (values.EMI_payout==\"village\" && !values.village_id) {\r\n            errors.village_id = 'Village name is Required!';\r\n        }\r\n        if (values.week==\"village\" && !values.week) {\r\n            errors.week = 'Week is Required!';\r\n        }\r\n        if (values.day==\"village\" && !values.day) {\r\n            errors.day = 'Day is Required!';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            scheme_id: '',\r\n            application_date: '',\r\n            member_id: '',\r\n            address:'',\r\n            interest_rate: \"\",\r\n            loan_amount:'',\r\n            // EMI_amount: '',\r\n            EMI_payout:\"\",\r\n            EMI_type:\"\",\r\n            tenure:\"\",\r\n            user_id:auth.id,\r\n            village_id:\"\",\r\n            week:\"\",\r\n            day:\"\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            console.log(values);\r\n           setisShowLoader(true);\r\n            try {\r\n                //delete values.EMI_type;\r\n                values.application_date = enrollmentDate;\r\n                delete values.week;\r\n                delete values.day;\r\n              let response = await groupLoan.GroupLoanModel.applyForloan(values);\r\n              setisShowLoader(false);\r\n              if (response.statusCode == 200) {\r\n                formik.resetForm();\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n              } else {\r\n                setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n              }\r\n\r\n            } catch (error) {\r\n              setisShowLoader(false);\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    const handleScheme=(e)=>{\r\n        console.log(e.target.value);\r\n        let selectedScheme = schemeRecords.filter(scheme=>scheme.scheme_code==e.target.value);\r\n        setSelectedScheme(selectedScheme[0]);\r\n         formik.values.EMI_type = selectedScheme[0].EMI_type;\r\n         formik.values.interest_rate = selectedScheme[0].interest_rate;\r\n        formik.handleChange(e);\r\n    }\r\n    const handleVillage=(e)=>{\r\n        let selectedvill = villageRecords.filter(vill=>vill.id==e.target.value);\r\n        \r\n         formik.values.week = selectedvill[0].week;\r\n         formik.values.day = selectedvill[0].day;\r\n        formik.handleChange(e);\r\n\r\n    }\r\n    return (\r\n        \r\n        <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n         <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Loan Application</h2>\r\n            \r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"application_date\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Member name</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"member_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member</option>\r\n                                {memberRecords.map((member,id)=>(\r\n                                    <option key={member.member_id} value={member.member_id}>{`name= ${member.member_name} - member_id= ${member.member_id} `}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.member_id && formik.errors.member_id ? (\r\n                  <div class=\"text-danger\">{formik.errors.member_id}</div>\r\n                ) : null}              \r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Member Address</Form.Label>\r\n                            <Form.Control\r\n                                name=\"address\"\r\n                                as=\"textarea\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.address}\r\n\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Scheme</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"scheme_id\"\r\n                                onChange={handleScheme}\r\n                                value={formik.values.scheme_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Scheme</option>\r\n                                {schemeRecords.map((schems,id)=>(\r\n                                    <option key={schems.scheme_code} value={schems.scheme_code}>{schems.scheme_code}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.scheme_id && formik.errors.scheme_id ? (\r\n                                <div class=\"text-danger\">{formik.errors.scheme_id}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Interest Rate (in %)</Form.Label>\r\n                            <Form.Control\r\n                                name=\"interest_rate\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.interest_rate}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per scheme.\r\n                            </Form.Text>                            \r\n                            {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Loan Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"loan_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.loan_amount}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            Default will be Max amount of selected scheme.\r\n                            </Form.Text>                            \r\n\r\n                            {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Payout</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"EMI_payout\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_payout}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Payout</option>\r\n                                {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                                <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n                                <option key=\"village\" value=\"village\">By village</option>\r\n                            </select>\r\n                            {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                                <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Tenure(in {formik.values.EMI_payout!=\"\"?tanure[formik.values.EMI_payout]:\"Months\"})</Form.Label>\r\n                            <Form.Control\r\n                                name=\"tenure\"\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.tenure}\r\n                            />\r\n                            {formik.touched.tenure && formik.errors.tenure ? (\r\n                                <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Type</Form.Label>\r\n                            <Form.Control\r\n                                name=\"EMI_type\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_type}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per selected scheme.\r\n                            </Form.Text>                            \r\n                        </Form.Group>\r\n                        {formik.values.EMI_payout == \"village\"?\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Village</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"village_id\"\r\n                                onChange={handleVillage}\r\n                                value={formik.values.village_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Village</option>\r\n                                {villageRecords.map((vill,id)=>(\r\n                                    <option key={vill.id} value={vill.id}>{vill.village_name}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.village_id && formik.errors.village_id ? (\r\n                                <div class=\"text-danger\">{formik.errors.village_id}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        :\"\"}\r\n                    </Row>\r\n                    {formik.values.EMI_payout == \"village\"?\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Week</Form.Label>\r\n                            <Form.Control\r\n                                name=\"week\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.week}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Day</Form.Label>\r\n                            <Form.Control\r\n                                name=\"day\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.day}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Row>:\"\"}\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={()=>{history.push(\"/\")}} type=\"button\" className=\"ml-2\">\r\n                        Cancel\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApplication;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction LoanApproval(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getApprovalList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectApproval=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications for Approval</h2>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Village</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.village_name }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectApproval(loan.id)}>Approve</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApproval;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nfunction DisburseLoan(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getDisburseList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectDisburse=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications For Disburse</h2>\r\n            <Row >\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Village</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.village_name }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectDisburse(loan.id)}>Disburse</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );}\r\n\r\nexport default DisburseLoan;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nfunction EmiCard(props) {\r\n\r\n    return (\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b>\r\n            <svg onClick={props.handlePrintEMI} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n            <thead>\r\n              <tr className=\"bg-success\">\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  {props.showDisburseButton?<th>EMI Paid</th>:\"\"}\r\n                  \r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {props.emiData.map((value,id)=>(<tr className={props.paidEmiRecord[value.date]?\"bg-warning\":\"\"}>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI.toFixed(2)}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    {props.showDisburseButton?\r\n                    <td>{props.paidEmiRecord[value.date]?\r\n                    \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check-circle\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                        <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\"/>\r\n                        </svg>:\"\"}</td>:\"\"}\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n}\r\n\r\nexport default EmiCard;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nclass EmiCardPrint extends React.PureComponent {\r\n    render() {\r\n    return (\r\n        <div>\r\n        <h3 className=\"text-center mb-5 mt-3\">AA2 MutualHelp Micro Finance</h3>\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b>\r\n\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  <th>Signature</th>\r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {this.props.emiData.map((value,id)=>(<tr>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    <td></td>\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n    </div>\r\n);\r\n\r\n    }\r\n}\r\n\r\nexport default EmiCardPrint;","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup,Modal,Toast } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport EmiCard from './EmiCard';\r\nimport EmiCardPrint from './EmiCardPrint';\r\nfunction LoanApprovalDetails(props) {\r\n    const memberDetailsRef = useRef();\r\n    const handlePrintMemberDetail = useReactToPrint({\r\n        content: () => memberDetailsRef.current,\r\n        documentTitle:\"AA2-Member\",\r\n      });\r\n\r\n      const applicationRef = useRef();\r\n      const handlePrintApplication = useReactToPrint({\r\n          content: () => applicationRef.current,\r\n          documentTitle:\"AA2-application\",\r\n        });\r\n\r\n        const emiRef = useRef();\r\n        const handlePrintEMI = useReactToPrint({\r\n            content: () => emiRef.current,\r\n            documentTitle:\"AA2-EMI-details\",\r\n          });\r\n      \r\n    const auth = useSelector(state => state.auth);\r\n    const [paidEmiRecord, setPaidEmiRecord] = useState([])\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [isShowEMILoader, setisShowEMILoader] = useState(false)\r\n    const [emiData, setEmiData] = useState([])\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [showApprovalButton,setShowApprovalButton]= useState(false);\r\n    const [showDisburseButton,setShowDisburseButton]= useState(false);\r\n    \r\n    //const [disburseActionButton,setDisburseActionButton]\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getLoanDetails();\r\n    }, [])\r\n\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            setisShowEMILoader(true);\r\n\r\n            let response = await groupLoan.GroupLoanModel.getLoanDetailbyId(props.location.state);\r\n            let calculateEmi ={\r\n                \"loanStartDate\":response.body.message[0].application_date,\r\n                \"interest_rate\":response.body.message[0].interest_rate,\r\n                \"tenure\":response.body.message[0].Tenure,\r\n                \"EMI_payout\":response.body.message[0].EMI_payout,\r\n                \"loan_amount\":response.body.message[0].loan_amount,\r\n                \"EMI_type\":response.body.message[0].EMI_type,\r\n                \"week\":response.body.message[0].week,\r\n                \"day\":response.body.message[0].day,\r\n            }\r\n            setisShowEMILoader(true);\r\n            let EmiData = await groupLoan.EmiModel.calculateEMI(calculateEmi);\r\n            let paidData = [];\r\n            let result = [];\r\n            if(response.body.message[0].loan_account_no){\r\n                paidData = await groupLoan.EmiModel.getPaidEmis(response.body.message[0].loan_account_no);\r\n                for(let i=0;i<paidData.body.message.length;i++){\r\n                    let emiDate = moment(paidData.body.message[i].EMI_date).format(\"DD-MM-yyyy\");\r\n                    result[emiDate]=true;\r\n                }   \r\n                setPaidEmiRecord(result);\r\n            }\r\n            setEmiData(EmiData.body.message);\r\n            setisShowEMILoader(false);\r\n            console.log(response);\r\n\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(response.body.message[0].is_approved!=0?false:true);\r\n                setShowDisburseButton(response.body.message[0].is_approved ==1 && response.body.message[0].is_disbursed==0?true:false);\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionOnLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.approveRejectLoan(data);\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(false);\r\n                //setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionDisburseLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.disburseRejectLoan(data);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n            <Loader show={isShowLoader} />\r\n            {showApprovalButton && (auth.role==\"checker\"||auth.role==\"admin\")?<Row className=\"m-5\">\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionOnLoan(1)}>\r\n                        Approve\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionOnLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            {showDisburseButton&& (auth.role==\"checker\"||auth.role==\"admin\")?<Row className=\"m-5\">\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionDisburseLoan(1)}>\r\n                        Disburse\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionDisburseLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            <Row xs={1} md={2} className=\"g-1\">\r\n                <Col>\r\n                    <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                        ref={memberDetailsRef}\r\n                    >\r\n                        <Card.Header className=\"bg-success text-center\"><b>Member Details</b><svg onClick={handlePrintMemberDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body>\r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Member Name</th><td>{loanDetails.member_name}</td> </tr>\r\n                                    <tr><th>Member Group ID</th>  <td>{loanDetails.member_group_id}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>DOB</th>   <td>{moment(loanDetails.date_of_birth).format(\"DD-MM-YYYY\") }</td></tr>\r\n                                    <tr><th>Phone</th> <td>{loanDetails.mobile_number}</td></tr>\r\n                                    <tr><th>Gender</th>  <td>{loanDetails.gender}</td></tr>\r\n                                    <tr><th>Aadhar No.</th> <td>{loanDetails.aadhar_number}</td></tr>\r\n                                    <tr><th>PAN</th> <td>{loanDetails.pan_card_number}</td></tr>\r\n                                    <tr><th>Driving License</th> <td>{loanDetails.driving_license_number}</td></tr>\r\n                                    <tr><th>Ration Card No.</th> <td>{loanDetails.ration_card_number}</td></tr>\r\n                                    <tr><th>Voter ID No.</th> <td>{loanDetails.voter_id_number}</td></tr>\r\n                                    <tr><th>Bank Account No.</th> <td>{loanDetails.bank_account}</td></tr>\r\n                                    <tr><th>Bank IFSC code</th> <td>{loanDetails.bank_ifsc_code}</td></tr>\r\n                                    <tr><th>Bank Account Holder</th> <td>{loanDetails.bank_account_holder}</td></tr>\r\n\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card border=\"info\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={applicationRef}\r\n                    >\r\n                        <Card.Header className=\"bg-info text-center\"><b>Application Details</b><svg onClick={handlePrintApplication} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body>\r\n                            \r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Account No</th>  <td>{loanDetails.loan_account_no}</td></tr>\r\n                                    <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\") }</td> </tr>\r\n                                    <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                                    <tr><th>Village Name</th><td>{loanDetails.village_name}</td></tr>\r\n                                    <tr><th>EMI Week</th><td>{loanDetails.week}</td></tr>\r\n                                    <tr><th>EMI Day</th><td>{loanDetails.day}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                                    <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                    <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                                    <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                                    {/* <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> */}\r\n                                    <tr><th>Tenure</th> <td>{loanDetails.Tenure}</td></tr>\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col >\r\n                    <Loader show={isShowEMILoader} relative={true}/>\r\n                    <EmiCard showDisburseButton={loanDetails.is_approved ==1 && loanDetails.is_disbursed==1}  emiData={emiData} paidEmiRecord={paidEmiRecord} handlePrintEMI={handlePrintEMI}/>\r\n                    <div style={{display:\"none\"}}><EmiCardPrint ref={emiRef} emiData={emiData}/></div> \r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApprovalDetails;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Badge, Container, Row, Col, Button, Pagination } from 'react-bootstrap';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table'\r\n\r\nfunction AllApplications(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    }, [])\r\n    const data = useMemo(\r\n        () =>\r\n\r\n            loanlist.map((record, index) => {\r\n                return {\r\n                    col1: record.loan_account_no ? record.loan_account_no : \"N/A\",\r\n                    col2: moment(record.application_date).format('DD-MM-yyy hh:ss A'),\r\n                    col3: record.member_name,\r\n                    col4: record.scheme_id,\r\n                    col5: record.loan_amount,\r\n                    col6: record.village_name,\r\n                    col7: record.actionStatus,\r\n                    col8: record\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [loanlist]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Application date',\r\n                accessor: 'col2', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Member name',\r\n                accessor: 'col3',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Scheme ID',\r\n                accessor: 'col4',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Loan amount',\r\n                accessor: 'col5',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Village',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'col7',\r\n                allowFilter: false,\r\n                Cell:emi=><Badge className={emi.value == \"Approved\" || emi.value == \"Disbursed\" ? \"bg-success\" : \"bg-danger\"}>{emi.value}</Badge>\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col8',\r\n                allowFilter: false,\r\n                Cell: emi => {\r\n                    return (<Button size={\"sm\"} variant=\"info\" onClick={() => { history.push(\"/loanApprovalDetails\", emi.value.id) }} type=\"button\" className=\"ml-2\">\r\n                        View\r\n                    </Button>\r\n                    )\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n        []\r\n    )\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination>\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getAllLoanApplications();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let formatedData = response.body.message.map((loan, id) => {\r\n                    if (loan.is_approved == 1 && loan.is_disbursed == 1) {\r\n                        loan[\"actionStatus\"] = \"Disbursed\";\r\n                    } else if (loan.is_approved == 1 && loan.is_disbursed == 0) {\r\n                        loan[\"actionStatus\"] = \"Approved\";\r\n                    } else if (loan.is_disbursed == -1) {\r\n                        loan[\"actionStatus\"] = \"Disburse Rejected\";\r\n                    } else if (loan.is_approved == -1) {\r\n                        loan[\"actionStatus\"] = \"Approval Rejected\";\r\n                    } else {\r\n                        loan[\"actionStatus\"] = \"Pending\";\r\n                    }\r\n\r\n                    return loan;\r\n                });\r\n                setLoanlist(formatedData);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n                <h2 className=\"text-info text-center\">All Loan Applications</h2>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                        <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                console.log(cell);\r\n                                                    return (\r\n                                                        <td {...cell.getCellProps()}>\r\n                                                            {cell.render('Cell')}\r\n                                                        </td>\r\n                                                    )\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllApplications;","import React,{useState,useRef,useEffect } from 'react';\r\nimport { Table,Button, Container, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport Loader from '../layout/Loader';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nfunction EmiCalculator(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [calculatedData,setCalculatedData] = useState([]);\r\n    //const [isclickPrint,setisclickPrint] = useState(false);\r\n    const componentRef = useRef();\r\n    // useEffect(()=>{\r\n    //   handlePrint()\r\n    // },[isclickPrint==true])\r\n    const handlePrint = useReactToPrint({\r\n      content: () => componentRef.current,\r\n      documentTitle:\"AA2-EMI-details\",\r\n     // onAfterPrint:()=>{setisclickPrint(false)}\r\n\r\n    });\r\n    // const setPrintCompany = ()=>{\r\n    //   setisclickPrint(true,()=>{console.log(\"print\")})\r\n    // }    \r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.interest_rate) {\r\n          errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required';\r\n          }\r\n          if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required';\r\n          }\r\n          if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required';\r\n          }\r\n          if (values.EMI_payout==\"village\" && !values.week) {\r\n            errors.week = 'Week is Required';\r\n          }\r\n          if (values.EMI_payout==\"village\" && !values.day) {\r\n            errors.day = 'Day is Required';\r\n          }\r\n          return errors;\r\n      };\r\n      const formik = useFormik({\r\n        initialValues: {\r\n        loanStartDate: '',\r\n        interest_rate: '',\r\n        tenure: '',\r\n        EMI_payout:'',\r\n        loan_amount:'',\r\n        EMI_type:\"flat\",\r\n        week:'',\r\n        day:''\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n          setisShowLoader(true);\r\n          try {\r\n             values.loanStartDate = enrollmentDate;\r\n             console.log(values);\r\n            let response = await groupLoan.EmiModel.calculateEMI(values);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              //formik.resetForm();\r\n              setCalculatedData(response.body.message);\r\n            } else {\r\n              //setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n    \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            //setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n        },\r\n      });\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n            <Row >\r\n            <Col>\r\n            <Container className=\"bg-white mt-2 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group as={Col} className=\"form-group required pl-0 pr-0\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"loanStartDate\"\r\n                            />\r\n                {formik.touched.loanStartDate && formik.errors.loanStartDate ? (\r\n                  <div class=\"text-danger\">{formik.errors.loanStartDate}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Loan amount</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"loan_amount\"\r\n                  placeholder=\"Enter loan amount\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.loan_amount}\r\n                />\r\n                {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Interest rate</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"interest_rate\"\r\n                  placeholder=\"Enter interest rate\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.interest_rate}\r\n\r\n                />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Tenure</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"tenure\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.tenure}\r\n\r\n                />\r\n                {formik.touched.tenure && formik.errors.tenure ? (\r\n                  <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>EMI payout</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"EMI_payout\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.EMI_payout}\r\n                >\r\n                    <option key=\"\" value=\"\">Select payout</option>\r\n\r\n                    <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                    <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n                    <option key=\"village\" value=\"village\">By village</option>\r\n\r\n                </select>\r\n                {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n            {formik.values.EMI_payout == \"village\"?\r\n            <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>Week</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"week\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.week}>\r\n                    <option key=\"\" value=\"\">Select Week</option>\r\n                    <option key=\"1\" value=\"1\">Week 1</option>\r\n                    <option key=\"2\" value=\"2\">Week 2</option>\r\n                </select>\r\n                {formik.touched.week && formik.errors.week ? (\r\n                  <div class=\"text-danger\">{formik.errors.week}</div>\r\n                ) : null}\r\n            </Form.Group>:\"\"}\r\n            {formik.values.EMI_payout == \"village\"?\r\n            <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>Day</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"day\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.day}>\r\n                    <option key=\"\" value=\"\">Select day</option>\r\n                    <option key=\"monday\" value=\"monday\">Monday</option>\r\n                    <option key=\"tuesday\" value=\"tuesday\">Tuesday</option>\r\n                    <option key=\"wednesday\" value=\"wednesday\">Wednesday</option>\r\n                    <option key=\"thrusday\" value=\"thrusday\">Thrusday</option>\r\n                    <option key=\"friday\" value=\"friday\">Friday</option>\r\n                </select>\r\n                {formik.touched.day && formik.errors.day ? (\r\n                  <div class=\"text-danger\">{formik.errors.day}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n:\"\"}\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Calculate\r\n              </Button>\r\n\r\n            </Form>\r\n            </Container>\r\n            </Col>\r\n            <Col md={8}>\r\n            <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={componentRef}\r\n                    >\r\n                      {/* {isclickPrint?<h2 className=\"text-center mb-3\">AA2 MicroFinance Foundation</h2>:\"\"} */}\r\n                        <Card.Header className=\"bg-primary text-center\"><b>AA2 Micro Finance EMI Details</b><svg onClick={handlePrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body >\r\n                            <Table  size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead>\r\n                              <tr>\r\n                                  <th>EMI date</th>\r\n                                  <th>EMI Amount</th>\r\n                                  <th>Principal</th>\r\n                                  <th>Interest</th>\r\n                                  <th>Outstanding</th>\r\n                              </tr>\r\n                          </thead>\r\n                                <tbody>\r\n                                {calculatedData.map((value,id)=>(<tr>\r\n                                    <td>{value.date}</td>\r\n                                    <td>{value.EMI.toFixed(2)}</td>\r\n                                    <td>{value.principal}</td>\r\n                                    <td>{value.int_amount}</td>\r\n                                    <td>{value.outstanding }</td>\r\n                                </tr>))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n            </Col>\r\n\r\n    </Row>\r\n    </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmiCalculator;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nclass PrintDueEmis extends React.PureComponent { \r\n    add =(row,a)=>{\r\n        console.log(row,a.values);\r\n        return parseFloat(a.values.col7) + row;\r\n    }\r\n    render() {\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-center mb-5 mt-3\">AAs2 MutualHelp Micro Finance</h3>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                <thead className=\"bg-primary\">\r\n                    <tr>\r\n                        <th>Account No.</th>\r\n                        <th>Group</th>\r\n                        <th>Village Name</th>\r\n                        <th>Member ID</th>\r\n                        <th>Name</th>\r\n                        <th>No. of Emi</th>\r\n                        <th>EMI Amount</th>\r\n                        <th>Outstanding</th>\r\n                        <th>Company Signature</th>\r\n                        <th>Customer Signature</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.dueEmis.map((emi, id) => (<tr>\r\n                        <td>{emi.values.col1}</td>\r\n                        <td>{emi.values.col2}</td>\r\n                        <td>{emi.values.col3}</td>\r\n                        <td>{emi.values.col4}</td>\r\n                        <td>{emi.values.col5}</td>\r\n                        <td>{emi.values.col6}</td>\r\n                        <td>{emi.values.col7}</td>\r\n                        <td>{emi.values.col8}</td>\r\n                        <td className=\"border\"></td>\r\n                        <td className=\"border\"></td>\r\n                    </tr>))}\r\n                </tbody>\r\n                <tfoot>\r\n                <tr>\r\n                <th>Total Collection</th><th colSpan=\"9\">{this.props.dueEmis.reduce(this.add,0)}</th>\r\n                    \r\n                </tr>\r\n                </tfoot>\r\n            </Table> \r\n            \r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default PrintDueEmis;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel, Pagination } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport PrintDueEmis from './printDueEmis';\r\nfunction DueEmis(props) {\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [dueEmis, setDueEmis] = useState([]);\r\n    const [paidID, setPaidID] = useState(0)\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const emiDetailsRef = useRef();\r\n    const handlePrintEmiDetail = useReactToPrint({\r\n        content: () => emiDetailsRef.current,\r\n        documentTitle:\"AA2-Due-EMIs\",\r\n      });\r\n\r\n    useEffect(() => {\r\n        getDueEmisRecord();\r\n    }, [])\r\n\r\n    const data = useMemo(\r\n        () =>\r\n            dueEmis.map((record, index) => {\r\n                return {\r\n                    col1: record.loan_account_no,\r\n                    col2: record.member_group_id,\r\n                    col3: record.village_name,\r\n                    col4: record.member_id,\r\n                    col5: record.member_name,\r\n                    col6: record.remain_EMI,\r\n                    col7: record.EMI_amount.toFixed(2),\r\n                    col8: record.outstanding,\r\n                    col9: record,\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [dueEmis]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                Cell: e => { return(<Link to={{\r\n                    pathname: '/loanApprovalDetails',\r\n                    state: dueEmis[e.row.id]?.loan_table_id\r\n                }}>{e.value}</Link>)}\r\n            },\r\n            {\r\n                Header: 'Group',\r\n                accessor: 'col2', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                 Cell: e => <Link to=\"/memberGroup\">{e.value}</Link>\r\n            },\r\n            {\r\n                Header: 'Village Name',\r\n                accessor: 'col3', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                 Cell: e => <Link to=\"/village\">{e.value}</Link>\r\n            },\r\n            {\r\n                Header: 'Member ID',\r\n                accessor: 'col4',\r\n                allowFilter: true,\r\n                Cell: emi => {\r\n                    return (<Link to={{\r\n                    pathname: '/viewMemberDetail',\r\n                    state: emi.value\r\n                }}>{emi.value}</Link>)}\r\n            },\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'col5',\r\n                allowFilter: true,\r\n                Cell: emi => <Link to={{\r\n                    pathname: '/viewMemberDetail',\r\n                    state:dueEmis[emi.row.id]?.member_id\r\n                }}>{emi.value}</Link>\r\n            },\r\n            {\r\n                Header: 'No. of EMI',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'EMI Amount',\r\n                accessor: 'col7',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Outstanding',\r\n                accessor: 'col8',\r\n                allowFilter: false\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col9',\r\n                allowFilter: false,\r\n                Cell: emi => <Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.value.emi_id)}>Pay</Button>\r\n            },\r\n        ],\r\n        [dueEmis]\r\n    )\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination className=\"text-left\">\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n\r\n    const getDueEmisRecord = (today = moment().format(\"yyyy-MM-DD\")) => {\r\n        setisShowLoader(true);\r\n        groupLoan.EmiModel.getDueEmis(today).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let emiData = [];\r\n                emiData = res.body.message.map(emi => {\r\n                    // return emi\r\n                    emi[\"loan_table_id\"] = emi.loan_account_no.substring(11)\r\n                    return emi;\r\n                });\r\n                setDueEmis(emiData);\r\n            } else {\r\n                setDueEmis([]);\r\n            }\r\n        })\r\n    }\r\n    const paidEMI = async () => {\r\n        setShowDeleteModel(false);\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.EmiModel.paidEmi(paidID);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let UpdatedList = dueEmis.filter((emidata, idx) => emidata.emi_id != paidID);\r\n                setDueEmis(UpdatedList);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    const paidHandle = (id) => {\r\n        setPaidID(id);\r\n        setShowDeleteModel(true);\r\n    }\r\n    const changeEmiDate = (selectedDate) => {\r\n        setEnrollmentDate(selectedDate)\r\n        getDueEmisRecord(moment(selectedDate).format(\"yyyy-MM-DD\"));\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            <Modal show={showDeleteModel} onHide={() => setShowDeleteModel(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Paid EMI </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => setShowDeleteModel(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => paidEMI()}>\r\n                        Paid\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n                <h2 className=\"text-info text-center\">Due EMIs</h2>\r\n                <Row>\r\n                    <Col>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormLabel className=\"mr-3\">EMI Date:</FormLabel>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => changeEmiDate(date)}\r\n                                name=\"enrollment_date\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n\r\n                        </InputGroup>\r\n\r\n                        <div>\r\n                            {paginate(pageCount)}\r\n                            <svg style={{cursor:'pointer'}} onClick={handlePrintEmiDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer mb-2\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n                        </div>\r\n                        <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                //console.log(cell);\r\n                                                return (\r\n                                                    <td {...cell.getCellProps()}>\r\n                                                        {cell.render('Cell')}\r\n                                                    </td>\r\n                                                    )\r\n\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div style={{display:\"none\"}}> <PrintDueEmis ref={emiDetailsRef} dueEmis={rows}/></div>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DueEmis;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nfunction Village(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [villageRecords,setVillageRecords]=useState([]);\r\n    useEffect(() => {\r\n            getVillages();\r\n    },[])\r\n\r\n    const getVillages = () =>{\r\n        setisShowLoader(true);\r\n        groupLoan.villageModel.getVillage().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setVillageRecords(res.body.message);\r\n            }else{\r\n                setVillageRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Village</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addVillage\">\r\n                <Button variant=\"info\" active>\r\n                    Add Village\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Village ID</th>\r\n                    <th>Village Name</th>\r\n                    <th>Week</th>\r\n                    <th>Day</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {villageRecords.map((vill,id)=>(<tr>\r\n                    <td>{vill.id}</td>\r\n                    <td>{vill.village_name}</td>\r\n                    <td>{vill.week}</td>\r\n                    <td>{vill.day }</td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Village;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddVillage(props) {\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false,type:\"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.village_name) {\r\n      errors.village_name = 'Village name is Required';\r\n    }\r\n    if (!values.week) {\r\n        errors.week = 'Week is Required';\r\n    }\r\n    if (!values.day) {\r\n    errors.day = 'Day is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      village_name: '',\r\n      week: '',\r\n      day: '',\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await groupLoan.villageModel.saveVillage(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          formik.resetForm();\r\n        } else {\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Village</h2>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Village Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"village_name\"\r\n                  placeholder=\"Enter village name\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.village_name}\r\n\r\n                />\r\n                {formik.touched.village_name && formik.errors.village_name ? (\r\n                  <div class=\"text-danger\">{formik.errors.village_name}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>Week</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"week\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.week}>\r\n                    <option key=\"\" value=\"\">Select Week</option>\r\n                    <option key=\"1\" value=\"1\">Week 1</option>\r\n                    <option key=\"2\" value=\"2\">Week 2</option>\r\n                </select>\r\n                {formik.touched.week && formik.errors.week ? (\r\n                  <div class=\"text-danger\">{formik.errors.week}</div>\r\n                ) : null}\r\n            </Form.Group>\r\n            <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>Day</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"day\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.day}>\r\n                    <option key=\"\" value=\"\">Select day</option>\r\n                    <option key=\"monday\" value=\"monday\">Monday</option>\r\n                    <option key=\"tuesday\" value=\"tuesday\">Tuesday</option>\r\n                    <option key=\"wednesday\" value=\"wednesday\">Wednesday</option>\r\n                    <option key=\"thrusday\" value=\"thrusday\">Thrusday</option>\r\n                    <option key=\"friday\" value=\"friday\">Friday</option>\r\n                </select>\r\n                {formik.touched.day && formik.errors.day ? (\r\n                  <div class=\"text-danger\">{formik.errors.day}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddVillage;","import {superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst ExpenseModel = {\r\n    getExpense(filter){\r\n        return superagent.get(`${API_ROOT}/expense/entry/${filter}`)\r\n    },\r\n    saveExpense(data){\r\n        return superagent.post(`${API_ROOT}/expense/entry`,data)\r\n    },\r\n    deleteExpense(id){\r\n        return superagent.del(`${API_ROOT}/expense/entry/${id}`)\r\n    },\r\n    editExpense(data,id){\r\n        return superagent.put(`${API_ROOT}/expense/entry/${id}`,data)\r\n\r\n    }\r\n    \r\n  }\r\n    export default {ExpenseModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Expense(props) {\r\n    let history = useHistory();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [expense,setExpense]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getExpenses();\r\n    },[])\r\n\r\n    const getExpenses = () =>{\r\n        setisShowLoader(true);\r\n        expenseRecord.ExpenseModel.getExpense('all').then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setExpense(res.body.message);\r\n            }else{\r\n                setExpense([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await expenseRecord.ExpenseModel.deleteExpense(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = expense.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setExpense(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Expense</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Expenses</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addExpense\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Expense\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Expense Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Date Expense</th>\r\n                    <th>Created At</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {expense.map((data,id)=>(<tr>\r\n                    <td>{data.id}</td>\r\n                    <td>{data.expense_type}</td>\r\n                    <td>{data.amount}</td>\r\n                    <td>{data.date_of_expense?moment(data.date_of_expense).format(\"DD-MM-yyyy\"):\"\"}</td>\r\n                    <td>{moment(data.created_at).format(\"DD-MM-yyyy hh:ss A\") }</td>\r\n                    <td>\r\n                        \r\n                    <Button variant=\"success\" size={\"sm\"} onClick={()=>{history.push(\"/addExpense\",data.id)}} >Edit</Button>\r\n                    {' '}\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(data.id)} >Delete</Button>\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n    </Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Expense;","import React, { useState,useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddExpense(props) {\r\n    let history = useHistory();\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n      console.log(props);\r\n      if(props.location.state)\r\n          getExpenseDetails(props.location.state);\r\n  }, [])    \r\n    const getExpenseDetails = async(id)=>{\r\n      try {\r\n        setisShowLoader(true);\r\n        let response = await expenseRecord.ExpenseModel.getExpense(props.location.state);\r\n        formik.values.expense_type = response.body.message[0].expense_type  \r\n        formik.values.amount = response.body.message[0].amount \r\n        setEnrollmentDate(new Date(response.body.message[0].date_of_expense));\r\n\r\n        setisShowLoader(false);\r\n    } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n    }\r\n    }\r\n    const validate = values => {\r\n      const errors = {};\r\n      if (!values.expense_type) {\r\n        errors.expense_type = 'Expense type is Required!';\r\n      }\r\n      if (!values.amount) {\r\n        errors.amount = 'Amount is Required!';\r\n      }\r\n      return errors;\r\n    };\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        expense_type: '',\r\n        amount: '',\r\n        date_of_expense: '',\r\n        user_id:auth.id\r\n      },\r\n      validate,\r\n      onSubmit: async (values) => {\r\n        setisShowLoader(true);\r\n          try {\r\n            values.date_of_expense = enrollmentDate;\r\n            let response = [];\r\n            if(props.location.state){\r\n              response = await expenseRecord.ExpenseModel.editExpense(values,props.location.state);\r\n\r\n         }else{\r\n\r\n             response = await expenseRecord.ExpenseModel.saveExpense(values);\r\n         }\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              formik.resetForm();\r\n              if(props.location.state)\r\n              history.push(\"/expense\")              \r\n              setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            } else {\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n      },\r\n      handleChange: () => {\r\n        setValues(prevValues => ({\r\n          ...prevValues,\r\n          // we use the name to tell Formik which key of `values` to update\r\n          [values.target.name]: values.target.value\r\n        }))\r\n      },\r\n    });\r\n    return (\r\n      <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n          {showToast.message}\r\n          </Toast.Body>\r\n        </Toast>\r\n        <Loader show={isShowLoader} />\r\n        <h2 className=\"text-info text-center\">Add Expense</h2>\r\n        <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Expense Type:</Form.Label>\r\n                <Form.Control\r\n                  name=\"expense_type\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.expense_type}\r\n                />\r\n                  {formik.touched.expense_type && formik.errors.expense_type ? (\r\n                    <div class=\"text-danger\">{formik.errors.expense_type}</div>\r\n                  ) : null}              \r\n              </Form.Group>\r\n              {/* </Row> */}\r\n              {/* <Row className=\"mb-3\" md={6}> */}\r\n\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Amount</Form.Label>\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.amount}\r\n                />\r\n                  {formik.touched.amount && formik.errors.amount ? (\r\n                    <div class=\"text-danger\">{formik.errors.amount}</div>\r\n                  ) : null}              \r\n  \r\n              </Form.Group>\r\n  \r\n            {/* </Row> */}\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n            <Form.Group  className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Enrollment Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"enrollment_date\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n            {/* </Row> */}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n  \r\n          </Form>\r\n        </Container>\r\n        </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default AddExpense;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Login from './components/users/Login'\r\nimport InnerLayout from './components/layout/InnerLayout'\r\nimport MemberGroup from  './components/masterRecord/memberGroup/MemberGroup';\r\nimport AddMemberGroup from  './components/masterRecord/memberGroup/AddMemberGroup';\r\nimport AddMember from  './components/masterRecord/member/AddMember';\r\nimport Member from  './components/masterRecord/member/Member';\r\nimport MemberViewDetails from  './components/masterRecord/member/MemberViewDetails';\r\nimport Scheme from  './components/groupLoan/Scheme';\r\nimport AddScheme from  './components/groupLoan/AddScheme';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport LoanApplication from  './components/groupLoan/LoanApplication';\r\nimport LoanApproval from  './components/groupLoan/LoanApproval';\r\nimport DisburseLoan from  './components/groupLoan/DisburseLoan';\r\nimport LoanApprovalDetails from  './components/groupLoan/LoanApprovalDetails';\r\nimport AllApplications from  './components/groupLoan/AllApplications';\r\nimport EmiCalculator from  './components/groupLoan/EmiCalculator';\r\nimport DueEmis from './components/emis/DueEmis';\r\nimport Village from './components/groupLoan/Village';\r\nimport AddVillage from './components/groupLoan/AddVillage';\r\nimport Expense from './components/expenses/Expense';\r\nimport AddExpense from './components/expenses/AddExpense';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n            <InnerLayout exact path=\"/\" component={Dashboard}/>\r\n            <InnerLayout exact path=\"/memberGroup\" component={MemberGroup} />\r\n            <InnerLayout exact path=\"/addMemberGroup\" component={AddMemberGroup} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/scheme\" component={Scheme} />\r\n            <InnerLayout exact path=\"/viewMemberDetail\" component={MemberViewDetails} />\r\n            <InnerLayout exact path=\"/addScheme\" component={AddScheme} />\r\n            <InnerLayout exact path=\"/loanApplication\" component={LoanApplication} />\r\n            <InnerLayout exact path=\"/loanApproval\" component={LoanApproval} />\r\n            <InnerLayout exact path=\"/disburseLoan\" component={DisburseLoan} />\r\n            <InnerLayout exact path=\"/loanApprovalDetails\" component={LoanApprovalDetails} />\r\n            <InnerLayout exact path=\"/allApplications\" component={AllApplications} />\r\n            <InnerLayout exact path=\"/emiCalculator\" component={EmiCalculator} />\r\n            <InnerLayout exact path=\"/dueEmis\" component={DueEmis} />\r\n            <InnerLayout exact path=\"/Village\" component={Village} />\r\n            <InnerLayout exact path=\"/addVillage\" component={AddVillage} />\r\n            <InnerLayout exact path=\"/expense\" component={Expense} />\r\n            <InnerLayout exact path=\"/addExpense\" component={AddExpense} />\r\n\r\n                <Route path=\"/login\" component={Login} />\r\n                <InnerLayout path=\"/member\" component={Member} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store} from './store';\r\n\r\nimport Routes from './Routes';\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div className=\"App\">\r\n      {/* <Header/> */}\r\n      <Routes/>\r\n    </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = '/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  // del: url =>\r\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\r\n  // put: (url, body) =>\r\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (email, password) =>\r\n    requests.post('/user/login',  { email, password } ),\r\n  register: (userDetails) =>\r\n    requests.post('/user/registration',  userDetails ),\r\n};\r\n\r\nconst Order = {\r\n  getProductsByCat:(catname)=>\r\n  requests.get(`/products?category=${catname}`),\r\n  getCatgoryInitialData:()=>{\r\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\r\n  },\r\n  placeOrder:(data)=>{\r\n    //requests.post(\"/orders/place-order\",data)\r\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\r\n  },\r\n  getCategoryAdmin(){\r\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\r\n  },\r\n  getOrdersHistoryAdmin(page){\r\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\r\n  },\r\n  getOrderHistoryByUserEmail(){\r\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\r\n  },\r\n  addCategory(data){\r\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  deleteCategory(data){\r\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\r\n  },\r\n  editCategory(data){\r\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  getProducts(){\r\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\r\n  },\r\n  deleteProduct(data){\r\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\r\n  },\r\n  addProducts(data){\r\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  },\r\n  editProducts(data){\r\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Payment = {\r\n  getRazorpayOrderId(data){\r\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\r\n  },\r\n  updatePaymentStatus(data){\r\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Finance = {\r\n  fillItr(data){\r\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\r\n  },\r\n  getAdminItr(){\r\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\r\n  },\r\n  uploadForm16(data){\r\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\r\n  },\r\n  getAdminForm16(){\r\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\r\n  },\r\n  downloadForm16(data){\r\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\r\n  }\r\n \r\n}\r\nconst Inquery = {\r\n  submitInquery(data){\r\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\r\n  }\r\n}\r\nexport default {\r\n  Auth,\r\n  Order,\r\n  Payment,\r\n  Finance,\r\n  Inquery,\r\n  getToken:()=>{return token},\r\n  setToken: _token => { token = _token; }\r\n};"],"sourceRoot":""}