{"version":3,"sources":["models/BaseUrl.js","agent.js","constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/finance-Itr/ItrPopup.js","components/home/InqueryForm.js","components/layout/SectionMenu.js","components/layout/SectionOffers.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/layout/Header.js","components/food-order/TotalAmount.js","components/layout/Footer.js","components/home/Home.js","components/layout/ListErrors.js","components/users/Registration.js","components/users/Login.js","components/finance-Itr/FillItr.js","components/layout/InnerHeader.js","components/layout/Leftbar.js","components/layout/TopNav.js","components/layout/InnerLayout.js","components/food-order/AddCartButton.js","components/layout/Loader.js","components/food-order/CategoryList.js","components/food-order/MyCart.js","components/food-order/PlaceOrder.js","components/food-order/OrderSuccess.js","components/Admin/CategoryManagement.js","components/Admin/orders/OrderHistory.js","components/Admin/AddCategory.js","components/Admin/products/ProductManagement.js","components/Admin/products/AddProduct.js","components/Admin/products/EditProduct.js","components/Admin/finance/FinanceRequests.js","components/Admin/finance/Form16Requests.js","components/Admin/Home.js","components/users/UserOrderHistory.js","components/users/user-actions/UserAction.js","components/food-order/OrderFailed.js","models/masterRecord.js","components/masterRecord/memberGroup/MemberGroup.js","components/masterRecord/memberGroup/AddMemberGroup.js","components/dashboard/Dashboard.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","encodeURIComponent","responseBody","res","errorBody","err","response","token","tokenPlugin","req","set","requests","url","get","use","then","body","post","Auth","login","email","password","register","userDetails","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","data","getCategoryAdmin","getOrdersHistoryAdmin","page","getOrderHistoryByUserEmail","addCategory","deleteCategory","del","editCategory","put","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","Inquery","submitInquery","getToken","setToken","_token","REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","statusCode","undefined","isLoginSuccess","subtype","key","value","common","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","record","prod","rootReducer","promiseMiddleware","store","next","v","dispatch","currentView","getState","viewChangeCounter","skipTracking","currentState","promise","error","localStorageMiddleware","window","localStorage","setItem","jwtToken","agent","createStore","reducer","composeWithDevTools","applyMiddleware","ItrPopup","props","Modal","show","isopen","onHide","hide","centered","className","Header","closeButton","Title","Body","to","pathname","query","InqueryForm","useState","fullName","business","dob","Date","gender","service","Phone","setState","dobstate","setdobstate","message","setmessage","loading","setloading","handleChange","e","target","name","console","log","Alert","variant","onClose","dismissible","Form","onSubmit","ev","preventDefault","serviceType","reset","Row","Group","as","Col","controlId","Label","Control","onChange","placeholder","selected","date","dateFormat","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","maxDate","defaultValue","readOnly","Button","disabled","Component","LogedInView","currentUser","aactiveClassName","LogedOutView","useDispatch","history","useHistory","split","isAdmin","isPrimeMember","onClick","push","handleITRPopup","id","this","connect","TotalAmount","counter","useSelector","authState","setShow","priceTotal","reduce","prevValue","currentValue","parseInt","quantityTotal","handleClose","width","height","viewBox","class","fill","xmlns","d","sm","Footer","Home","ListErrors","Registration","submitForm","isLoading","required","Text","React","Login","changeEmail","onChangeEmail","changePassword","onChangePassword","onUnload","FillItr","setstate","isphoneinvalid","setisphoneinvalid","isemailinvalid","setiisemailinvalid","isaadharinvalid","setiisaadharinvalid","form16","setform16","handlePay","checkValidate","orderForService","location","onlinePayment","returnType","amount","options","updatePaymentState","rzp1","Razorpay","on","open","alert","status","obj","paymentObj","razorpay_order_id","paymentStatus","paymentResponse","metadata","order_id","handleSubmit","onFileUpload","paymentMode","formData","FormData","append","isInvalid","Feedback","rows","File","Input","accept","files","InnerHeader","Leftbar","md","Nav","Item","Link","href","eventKey","TopNav","Navbar","collapseOnSelect","expand","bg","toggleSidebar","Toggle","Collapse","InnerLayout","component","rest","showSidebar","setshowSidebar","useEffect","innerWidth","render","AddCartButton","initialAddItem","addItemInitial","increaseQuantity","decreaseQuantity","nextprops","arr","length","filter","Badge","Loader","Spinner","animation","role","CategoryList","getInitialData","a","showloader","all","categories","products","categoryList","itemList","changeCategory","catName","selectedTab","Container","fluid","ListGroup","defaultActiveKey","active","index","CardColumns","Card","border","Img","src","imageUrl","title","Subtitle","description","MyCart","Table","responsive","striped","bordered","colSpan","PlaceOrder","shipingDetails","setShipingDetails","showPayementModel","setshowPayementModel","isnameinvalid","setisnameinvalid","isaddressinvalid","setisaddressinvalid","totalQuantity","totalPrice","shippingObj","address","phone","city","street","landmark","items","shipping","selectPaymentMode","forEach","element","borderless","OrderSuccess","Heading","CategoryManagement","heading","setalert","showLoader","getCategories","useMemo","col1","col2","col3","columns","accessor","useTable","initialState","pageIndex","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","pageOptions","previousPage","pageSize","gotoPage","nextPage","canPreviousPage","setPageSize","canNextPage","changeTab","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","OrderHistory","getOrders","orderHistory","setorderHistory","selectedorder","setselectedorder","totalPage","settotalPage","isopenpopup","setisopenpopup","selectedPage","setselectedPage","number","Pagination","changePage","paginationBasic","totalOrders","datePlaced","itm","viewOrderPopUp","hover","isDiscountApplied","totalBillAmount","AddCategory","ProductManagement","col4","col5","col6","category","col7","Image","thumbnail","editProduct","AddProduct","setcategory","EditProduct","storeProduct","FinanceRequests","ITRrequests","setITRrequests","getITRrequests","firstName","lastName","aadhar","zip","Form16Requests","form16requests","setform16requests","getForm16requests","filePathArr","filePath","isShowLoader","setisShowLoader","setselectedTab","tab","UserOrderHistory","UserAction","OrderFailed","getMemberGroups","MemberGroup","memberGroupRecords","setMemberGroupsRecords","getMemberGroup","masterRecord","size","group","group_code","group_name","remark","created_at","AddMemberGroup","Check","label","Dashboard","xs","text","style","Routes","exact","path","AdminHome","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58844ea5.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nexport const superagent = superagentPromise(_superagent, global.Promise);\r\nexport const API_ROOT = 'https://aa2microfinance.herokuapp.com/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\nexport const requests = {\r\n    // del: url =>\r\n    //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n    get: url =>\r\n      superagent.get(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    // put: (url, body) =>\r\n    //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n    post: (url, body) =>\r\n      superagent.post(`${API_ROOT}${url}`, body).then(responseBody,errorBody)\r\n  };","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = '/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  // del: url =>\r\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\r\n  // put: (url, body) =>\r\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (email, password) =>\r\n    requests.post('/user/login',  { email, password } ),\r\n  register: (userDetails) =>\r\n    requests.post('/user/registration',  userDetails ),\r\n};\r\n\r\nconst Order = {\r\n  getProductsByCat:(catname)=>\r\n  requests.get(`/products?category=${catname}`),\r\n  getCatgoryInitialData:()=>{\r\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\r\n  },\r\n  placeOrder:(data)=>{\r\n    //requests.post(\"/orders/place-order\",data)\r\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\r\n  },\r\n  getCategoryAdmin(){\r\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\r\n  },\r\n  getOrdersHistoryAdmin(page){\r\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\r\n  },\r\n  getOrderHistoryByUserEmail(){\r\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\r\n  },\r\n  addCategory(data){\r\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  deleteCategory(data){\r\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\r\n  },\r\n  editCategory(data){\r\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  getProducts(){\r\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\r\n  },\r\n  deleteProduct(data){\r\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\r\n  },\r\n  addProducts(data){\r\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  },\r\n  editProducts(data){\r\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Payment = {\r\n  getRazorpayOrderId(data){\r\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\r\n  },\r\n  updatePaymentStatus(data){\r\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Finance = {\r\n  fillItr(data){\r\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\r\n  },\r\n  getAdminItr(){\r\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\r\n  },\r\n  uploadForm16(data){\r\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\r\n  },\r\n  getAdminForm16(){\r\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\r\n  },\r\n  downloadForm16(data){\r\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\r\n  }\r\n \r\n}\r\nconst Inquery = {\r\n  submitInquery(data){\r\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\r\n  }\r\n}\r\nexport default {\r\n  Auth,\r\n  Order,\r\n  Payment,\r\n  Finance,\r\n  Inquery,\r\n  getToken:()=>{return token},\r\n  setToken: _token => { token = _token; }\r\n};","\r\n  \r\nexport const APP_LOAD = 'APP_LOAD';\r\nexport const REDIRECT = 'REDIRECT';\r\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\r\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\r\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\r\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\r\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\r\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\nexport const SET_PAGE = 'SET_PAGE';\r\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\r\nexport const CHANGE_TAB = 'CHANGE_TAB';\r\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\r\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\r\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\r\nexport const ASYNC_START = 'ASYNC_START';\r\nexport const ASYNC_END = 'ASYNC_END';\r\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\r\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const REMOVE_TAG = 'REMOVE_TAG';\r\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\r\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\r\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\r\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const RESET_ORDER = 'RESET_ORDER';\r\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\r\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';","import {\r\n    ADD_ITEM_INITIAL,\r\n    INCREASE_QUANTITY,\r\n    DECREASE_QUANTITY,\r\n    RESET_ORDER\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    addedItem: [],\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case ADD_ITEM_INITIAL:\r\n            const addedItem =[...state.addedItem,{\r\n                productId:action.item._id,\r\n                quantity:1,\r\n                perItemPrice:action.item.price,\r\n                item:action.item\r\n            }]\r\n            return {...state, addedItem};\r\n        case INCREASE_QUANTITY:\r\n             state.addedItem.map(record=>{\r\n                if(record.productId == action.productId){\r\n                    record.quantity +=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case DECREASE_QUANTITY:\r\n            state.addedItem.map(record=>{\r\n                if(record.productId == action.productId && record.quantity !=0){\r\n                        record.quantity -=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case RESET_ORDER:\r\n            state.addedItem = []\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import {\r\n    STORE_EDIT_PRODUCT,\r\n    GET_EDIT_PRODUCT,\r\n    UPDATE_PRODUCT_FIELD\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    product: {},\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case STORE_EDIT_PRODUCT:\r\n            return {...state,\r\n                product:action.data \r\n            };\r\n        case GET_EDIT_PRODUCT:\r\n            return {...state};\r\n        case UPDATE_PRODUCT_FIELD:\r\n            let prod = state.product;\r\n            prod[action.data.key]=action.data.value;\r\n           return {...state,product:prod}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import auth from './reducers/auth';\r\nimport common from './reducers/common';\r\nimport order from './reducers/order';\r\nimport product from './reducers/product';\r\nimport { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  common,\r\n  order,\r\n  product\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\nexport default rootReducer\r\n// export default combineReducers({\r\n//   auth,\r\n//   common,\r\n//   order,\r\n//     //router: routerReducer\r\n//   });","import {\r\n    LOGIN,\r\n    REGISTER,\r\n    LOGIN_PAGE_UNLOADED,\r\n    REGISTER_PAGE_UNLOADED,\r\n    ASYNC_START,\r\n    UPDATE_FIELD_AUTH,\r\n    LOGOUT\r\n  } from '../constants/actionTypes';\r\n  \r\n  export default (state = {}, action) => {\r\n  //console.log(action);\r\n    switch (action.type) {\r\n      case LOGIN:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload != undefined?action.payload.statusCode:\"\",\r\n          isLoginSuccess:action.payload != undefined? (action.payload.statusCode == 200?true:false):false\r\n        }\r\n      case REGISTER:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload.statusCode\r\n        };\r\n      case LOGIN_PAGE_UNLOADED:\r\n      return{\r\n        ...state,\r\n        //errors: action.payload,\r\n        //userDetails:\r\n      }\r\n      case REGISTER_PAGE_UNLOADED:\r\n        return {};\r\n      case ASYNC_START:\r\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\r\n          return { ...state, inProgress: true };\r\n        }\r\n        break;\r\n      case UPDATE_FIELD_AUTH:\r\n        return { ...state, [action.key]: action.value };\r\n      default:\r\n        return state;\r\n    }\r\n    return state;\r\n  };","import {\r\n    LOGOUT,\r\n    REDIRECT\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0\r\n  };\r\n  \r\n  export default (state = {}, action) => {\r\n    //console.log(action);\r\n      switch (action.type) {\r\n        case REDIRECT:\r\n            return { ...state, redirectTo: null };\r\n        // case LOGOUT:\r\n        //     return { redirectTo: '/login', token: null, currentUser: null };\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import agent from './agent';\r\nimport {\r\n  ASYNC_START,\r\n  ASYNC_END,\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER\r\n} from './constants/actionTypes';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\r\n\r\n    const currentView = store.getState().viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === LOGIN && action.payload != undefined) {\r\n    if (action.payload.statusCode==200) {\r\n      window.localStorage.setItem('jwt', action.payload.body.jwtToken);\r\n      agent.setToken(action.payload.body.jwtToken);\r\n    }\r\n  } else if (action.type === LOGOUT) {\r\n    window.localStorage.setItem('jwt','');\r\n    agent.setToken(null);\r\n  }\r\n\r\n   next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nconst getMiddleware = () => {\r\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\r\n  };\r\nexport const store = createStore(reducer,composeWithDevTools(getMiddleware()));","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//import \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction ItrPopup(props) {\r\n    return (\r\n    <Modal show={props.isopen} onHide={props.hide} centered className=\"text-center\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Tax Return</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'fill'}}}  className=\"btn btn-danger btn-sm\">Start Your Tax Return</Link>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'uploadForm16'}}} className=\"btn btn-danger btn-sm\">Upload Form-16 Now</Link>\r\n            </Modal.Body>\r\n        </Modal>\r\n        )\r\n}\r\n\r\nexport default ItrPopup\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Col, Row, Container, Modal,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction InqueryForm(props) {\r\n    const [state, setState] = useState(\r\n        {fullName:\"\",\r\n            email:\"\",\r\n            business:\"\",\r\n            dob:new Date(),\r\n            gender:\"\",\r\n            service:\"\",\r\n            Phone:\"\"\r\n        });\r\n    const [dobstate, setdobstate] = useState(new Date());\r\n    const [message, setmessage] = useState({type:\"\",message:\"\"})\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const handleChange = (e)=>{\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n    }\r\n    const handleSubmit = (ev)=>{\r\n        ev.preventDefault();\r\n\r\n        state[\"dob\"] = dobstate;\r\n        state[\"service\"] = props.serviceType;\r\n        setState(state);\r\n        console.log(state);\r\n        setloading(true);\r\n        agent.Inquery.submitInquery(state).then((res=>{\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                message.type = \"success\";\r\n                message.message = \"Your Details has been submited. Our agent will contact you soon.\"\r\n            }else{\r\n                message.type = \"error\";\r\n                message.message = \"Something went wrong. Please try again.\"\r\n            }\r\n            setmessage(message);\r\n            setloading(false);\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n\r\n        <Modal show={props.isopen} onHide={props.hide} >\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Enquiry</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {  message.type != \"\"? \r\n                message.type ==\"success\"?\r\n                <Alert key={message.type} variant={\"success\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:<Alert key={message.type} variant={\"danger\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:\"\"        \r\n                }\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                            <Form.Label>Full Name</Form.Label>\r\n                            <Form.Control onChange={handleChange} type=\"text\" name=\"fullName\"/>\r\n                        </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" onChange={handleChange} name=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Business</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"business\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Date of Birth</Form.Label>\r\n                        <DatePicker\r\n                         selected={dobstate} \r\n                         onChange={date=>setdobstate(date)}\r\n                         dateFormat=\"dd/MM/yyyy\"\r\n                         showYearDropdown\r\n                         dateFormatCalendar=\"MMMM\"\r\n                         yearDropdownItemNumber={50}\r\n                         scrollableYearDropdown\r\n                         maxDate={new Date()}\r\n                         />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Gender</Form.Label>\r\n                    <Form.Control name=\"gender\" as=\"select\" onChange={handleChange} defaultValue=\"Choose...\">\r\n                        <option>Choose...</option>\r\n                        <option value=\"male\">Male</option>\r\n                        <option value=\"female\">Female</option>\r\n                    </Form.Control>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Service</Form.Label>\r\n                        <Form.Control onChange={handleChange} type=\"text\" name=\"service\" value={props.serviceType} readOnly/>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"phone\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Submit\"}\r\n\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InqueryForm\r\n","import React, { Component} from 'react'\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\nimport InqueryForm from '../home/InqueryForm'\r\nimport {Link} from 'react-router-dom';\r\n\r\n  class SectionMenu extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false,\r\n        openEnqueryForm:false,\r\n        serviceType:\"\"\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n      this.setState({\r\n        isopen:this.state.isopen?false:true\r\n      })\r\n    }\r\n    handleEnqueryForm = (serviceType = \"\")=>{\r\n      console.log(serviceType);\r\n      this.setState({\r\n        openEnqueryForm:this.state.openEnqueryForm?false:true,\r\n        serviceType:serviceType\r\n      })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n          <>\r\n            <section className=\"text-center \">\r\n            <div className=\"container\">\r\n              <div className=\"col-md-12 shadow-sm p-5 service \">\r\n                <div className=\"row roww\">\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={this.handleITRPopup}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/itr.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Fill ITR</h5>\r\n                  </div>\r\n                 \r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box \">\r\n                  <Link to=\"/CategoryList\">\r\n                    <img  src={process.env.PUBLIC_URL + '/assets/img/food.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">FOOD</h5></Link>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Catering\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/catering.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Catering</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Balance Sheet\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/finance.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Financial Consultancy</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Investment Planning\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/investment.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Investment Planning</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"GST filing\")}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/gst.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">GST Filing </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n          <InqueryForm isopen={this.state.openEnqueryForm} serviceType={this.state.serviceType} hide={this.handleEnqueryForm}/>         \r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default SectionMenu\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SectionOffers extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"text-center\">\r\n                <div className=\"container\">\r\n                    <h4 className=\"h4-responsive font-weight-bold my-3 text-primary\">Best Offers</h4>\r\n                    <div className=\"row my-5\">\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-1.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 1</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 50% Off\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-2.jpg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 2</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 60% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-4.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 3</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Up to 50% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-3.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 4</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Standard EMI Options Available\r\n                  </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\n\r\nfunction LogedInView(props) {\r\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\r\n        return (\r\n\r\n        <li className=\"nav-item\">\r\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default LogedInView\r\n","import React from 'react'\r\nimport { Route, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    LOGOUT\r\n  } from '../../constants/actionTypes';\r\nfunction LogedOutView(props) {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const logout = ()=>{\r\n         dispatch({ type: LOGOUT })\r\n           console.log(\"hollo\");\r\n           history.push(\"/\");\r\n       }\r\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\r\n        let name = props.currentUser.email.split(\"@\");\r\n\r\n        return (<>\r\n            \r\n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\r\n            <li className=\"nav-item\">\r\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\r\n            </li>\r\n                \r\n            </li>:\"\"}            \r\n            <li className=\"nav-item\">\r\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\r\n                    {name[0]}\r\n\r\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \r\n\r\n                    \r\n                    </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\r\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\r\n            </li>\r\n        </>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LogedOutView\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass Header extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n  \r\n    render(){\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                            {/* <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                            </li>\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                                <NavLink activeClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                                \r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"view\">\r\n                <div className=\"mask rgba-gradient d-flex justify-content-center align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 white-text text-center mx-auto  mb-5 wow fadeInLeft\" data-wow-delay=\"0.3s\">\r\n                                <h1 className=\"my-3 text-center mx-auto font-weight-bold wow fadeInLeft\">Services, on demand.</h1>\r\n\r\n                                <div className=\"ml-auto mr-auto main-search \">\r\n\r\n                                    <form action=\"\" className=\"search-service\">\r\n                                        <input className=\"search-form form-control form-control-lg\" type=\"text\" placeholder=\"Search Services\" />\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React,{useState} from 'react'\r\nimport { Alert, Button, Row, Col, Container,Modal } from 'react-bootstrap';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Route,NavLink, Redirect, Link } from 'react-router-dom'\r\nimport {\r\n  RESET_ORDER\r\n} from '../../constants/actionTypes';\r\n\r\nfunction TotalAmount(props) {\r\n  const counter = useSelector(state => state.order);\r\n  const authState = useSelector(state => state.auth);\r\n  const [show, setShow] = useState(false);\r\n\r\nconst handleShow = () => setShow(true);\r\n\r\n  const dispatch = useDispatch();\r\n  var priceTotal = counter.addedItem.reduce(\r\n    (prevValue, currentValue) => prevValue + (currentValue.quantity * parseInt(currentValue.perItemPrice)),\r\n    0\r\n  );\r\n  const quantityTotal = counter.addedItem.reduce(\r\n    (prevValue, currentValue) => prevValue + currentValue.quantity,\r\n    0\r\n  );\r\n  if(authState?.errors?.body?.record?.isPrimeMember){\r\n    priceTotal -= ((priceTotal*10)/100)\r\n}\r\nconst handleClose = (action) => {\r\n  if(action==\"yes\"){\r\n    dispatch({type:RESET_ORDER})\r\n  }\r\n  setShow(false)\r\n};\r\n\r\n  if (quantityTotal > 0) {\r\n    return (\r\n      <>\r\n      <div className=\"order-popup pb-1\">\r\n        <div className=\"text-right py-1\">\r\n          <svg onClick={handleShow} width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" class=\"bi bi-x-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n            <path fill-rule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n          </svg>\r\n        </div>\r\n        <Row>\r\n          <Col sm={8} className=\"pl-5\"><Link to=\"/myCart\" className=\"underline\"><h4>Your Order ({quantityTotal})</h4></Link></Col>\r\n          <Col sm={4} className=\"d-flex justify-content-end\"> \r\n          <NavLink to=\"/placeOrder\">\r\n            <Button variant=\"danger\">\r\n            Continue\r\n            </Button>\r\n          </NavLink>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"pl-5\">\r\n            <h4><span>&#8377;</span>{priceTotal}</h4>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n      <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Alert</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Are you sure you want to remove the items from cart?</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\r\n                        Cancel\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal> \r\n\r\n      </>\r\n    )\r\n  \r\n}else {\r\n  return null;\r\n}\r\n\r\n}\r\nexport default TotalAmount\r\n","import React from 'react'\r\nimport TotalAmount from '../food-order/TotalAmount'\r\nfunction Footer() {\r\n    return (\r\n      <>\r\n\r\n        <footer className=\"page-footer font-small stylish-color-dark pt-4\">\r\n        {/* <div className=\"container text-center text-md-left\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Footer Content</h5>\r\n              <p>Here you can use rows and columns to organize your footer content. Lorem ipsum dolor sit amet,\r\n                consectetur\r\n                adipisicing elit.</p>\r\n            </div>\r\n            <hr className=\"clearfix w-100 d-md-none\"/>\r\n            <div className=\"col-md-2 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Link 1</a>\r\n                </li>\r\n              </ul>\r\n            </div>    \r\n            <hr className=\"clearfix w-100 d-md-none\"/>\r\n            <div className=\"col-md-2 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Link 1</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <hr className=\"clearfix w-100 d-md-none\"/>\r\n            <div className=\"col-md-2 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Link 1</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n    \r\n        {/* <ul className=\"list-unstyled list-inline text-center py-2\">\r\n          <li className=\"list-inlin e-item\">\r\n            <h5 className=\"mb-1\">Register for free</h5>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"#!\" className=\"btn btn-danger btn-rounded\">Sign up!</a>\r\n          </li>\r\n        </ul> */}\r\n    \r\n        <hr/>\r\n    \r\n        <ul className=\"list-unstyled list-inline text-center\">\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-fb mx-1\">\r\n              <i className=\"fab fa-facebook-f\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-tw mx-1\">\r\n              <i className=\"fab fa-twitter\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-gplus mx-1\">\r\n              <i className=\"fab fa-google-plus-g\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-li mx-1\">\r\n              <i className=\"fab fa-linkedin-in\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-dribbble mx-1\">\r\n              <i className=\"fab fa-dribbble\"> </i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n        </div>\r\n        <TotalAmount/>\r\n      </footer>\r\n      </>\r\n        )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport SectionMenu from '../layout/SectionMenu'\r\nimport SectionOffers from '../layout/SectionOffers'\r\nimport Header from '../layout/Header'\r\nimport Footer from '../layout/Footer'\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <SectionMenu />\r\n            {/* <SectionOffers /> */}\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\n\r\nexport default class ListErrors extends Component {\r\n    render() {\r\n        const errors = this.props.errors;\r\n        const statusCode = this.props.statusCode;\r\n        if (errors) {\r\n            return (\r\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\r\n                    {errors.body.message}\r\n              </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\n\r\n\r\nclass Registration extends React.Component {    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userDetails: {},\r\n            errors:\"\",\r\n            statusCode:\"\",\r\n            isLoading:false\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        this.setState({ userDetails: state });\r\n        \r\n    }\r\n    submitForm=() => ev =>{\r\n        ev.preventDefault();\r\n        this.setState({ isLoading: true });\r\n        agent.Auth.register(this.state.userDetails).then((res=>{\r\n            this.setState({ errors: res, statusCode:res.statusCode, isLoading:false});\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                //this.props.history.push('/login')\r\n            }\r\n        }));\r\n    }\r\n    render() {\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <ListErrors errors={this.state.errors} statusCode={this.state.statusCode} />\r\n            <Form className=\"login-form\" onSubmit={this.submitForm()}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\" >\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"phone\" name=\"phone\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your phone no with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col}  controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\"  onChange={this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.state.isLoading}>\r\n                        \r\n                        {this.state.isLoading ? 'Loading…' : \"Register\"}\r\n                    </Button>\r\n                </Form.Row>\r\n\r\n            </Form>\r\n        </div>\r\n\r\n    )}\r\n}\r\n\r\nexport default Registration\r\n","import React, { Component}  from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\n\r\nimport {\r\n    UPDATE_FIELD_AUTH,\r\n    LOGIN,\r\n    LOGIN_PAGE_UNLOADED\r\n} from '../../constants/actionTypes';\r\n\r\nclass Login extends Component {\r\n   // let history = useHistory();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\r\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\r\n        this.submitForm = (email, password) => ev => {\r\n            ev.preventDefault();\r\n            this.props.onSubmit(email, password);\r\n        };\r\n    }\r\n    componentDidUpdate(){\r\n        if(this.props.isLoginSuccess){\r\n            this.props.history.push('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.props.onUnload();\r\n      }\r\n    render() {\r\n        const email = this.props.email;\r\n        const password = this.props.password;\r\n        return (\r\n            <>\r\n            <div className=\"login-div\">\r\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\r\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\r\n                <Form className=\"login-form\" onSubmit={this.submitForm(email, password)}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={this.changeEmail} required/>\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={password}  onChange={this.changePassword} required/>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Button variant=\"primary\" disabled={this.props.inProgress} type=\"submit\">{this.props.inProgress ? 'Loading…' : \"Login\"}\r\n                            \r\n                    </Button>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Link as={Col} to=\"/registration\" > SignUp</Link>\r\n                    </Form.Row>\r\n\r\n                </Form>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeEmail: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'email', value }),\r\n    onChangePassword: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n    onSubmit: (email, password) =>\r\n        dispatch({ type: LOGIN, payload: agent.Auth.login(email, password) }),\r\n    onUnload: () =>\r\n        dispatch({ type: LOGIN_PAGE_UNLOADED })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React,{useState} from 'react'\r\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';\r\nimport './Finance.css';\r\nimport agent from '../../agent'\r\n// import {KEY_ID,KEY_SECRET} from '../../constants/paymantConstants'\r\n\r\nfunction FillItr(props) {\r\n    const [state, setstate] = useState({});\r\n    const [loading, setloading] = useState(false);\r\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\r\n    const [isemailinvalid,setiisemailinvalid] = useState(false);\r\n    const [isaadharinvalid,setiisaadharinvalid] = useState(false);\r\n    const [form16, setform16] = useState([]);\r\n    console.log(props);\r\n    const handleChange = (e) => {\r\n        state[e.target.name] = e.target.value;\r\n        setstate(state);\r\n    }\r\n\r\n    const handlePay=()=>{\r\n        setloading(true);\r\n        if(checkValidate()){\r\n            console.log(\"Valid Form\");\r\n            let orderForService = \"Form16\";\r\n            if(props.location.query?.type == \"fill\"){\r\n                orderForService = \"ITR\"\r\n            }\r\n            onlinePayment(orderForService);\r\n        }else{\r\n            console.log(\"invalid from\")\r\n            setloading(false);\r\n\r\n        }\r\n    } \r\n\r\n    const checkValidate=()=>{\r\n        let returnType = true;\r\n        setisphoneinvalid(false);\r\n        setiisemailinvalid(false);            \r\n        setiisaadharinvalid(false);\r\n\r\n        if(state[\"phone\"] ==undefined || state[\"phone\"] ==\"\"){\r\n            setisphoneinvalid(true);\r\n            returnType = false\r\n        }\r\n        if((state[\"email\"] ==undefined || state[\"email\"] ==\"\") && props.location.query?.type == \"fill\" ){\r\n            setiisemailinvalid(true);            \r\n            returnType = false\r\n        } \r\n        if((state[\"aadhar\"] ==undefined || state[\"aadhar\"] ==\"\") && props.location.query?.type == \"fill\"){\r\n            setiisaadharinvalid(true);\r\n            returnType = false\r\n        } \r\n        return returnType;\r\n    } \r\n\r\n    const onlinePayment = (orderForService = \"ITR\")=>{\r\n        let amount = 300;\r\n        agent.Payment.getRazorpayOrderId({amount:amount,orderForService:orderForService}).then((res=>{\r\n            if(res.statusCode == 200){\r\n                console.log(res);\r\n                var options = {\r\n                    \"key\": \"1234\", // Enter the Key ID generated from the Dashboard\r\n                    \"amount\": amount*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n                    \"currency\": \"INR\",\r\n                    \"name\": \"Guest\",\r\n                    \"description\": \"ITR Fill Transaction\",\r\n                    \"image\": \"https://example.com/your_logo\",\r\n                    \"order_id\": res.body.record.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n                    \"handler\": function (response){\r\n                        updatePaymentState(\"success\",response);\r\n                    },                \r\n                    \"theme\": {\r\n                        \"color\": \"#3399cc\"\r\n                    }\r\n                };   \r\n                // console.log(options); \r\n                const rzp1 = new window.Razorpay(options);\r\n                rzp1.on('payment.failed', function (response){\r\n                    updatePaymentState(\"failed\",response);\r\n    \r\n                });            \r\n                rzp1.open();\r\n    \r\n            }else{\r\n                setloading(false);\r\n\r\n                alert(res.body)\r\n\r\n            }\r\n        }));\r\n    \r\n    }\r\n    const updatePaymentState=(status,obj)=>{\r\n        let orderId = \"\";\r\n        let paymentObj = {\r\n            razorpay_order_id:\"\",\r\n            paymentStatus:\"\",\r\n            paymentResponse:\"\"\r\n        }\r\n        if(status == \"success\"){\r\n            paymentObj.razorpay_order_id = obj.razorpay_order_id;\r\n            paymentObj.paymentStatus = status;\r\n            paymentObj.paymentResponse = obj;\r\n        }\r\n        if(status == \"failed\"){\r\n            paymentObj.razorpay_order_id = obj.error.metadata.order_id;\r\n            paymentObj.paymentStatus = status;\r\n            paymentObj.paymentResponse = obj;\r\n        }\r\n        try{\r\n            agent.Payment.updatePaymentStatus(paymentObj).then((res=>{\r\n                if(res.statusCode ==200 && status == \"success\"){\r\n                    if(props.location.query?.type == \"fill\"){\r\n                        handleSubmit(paymentObj.razorpay_order_id);\r\n                    }else{\r\n                        onFileUpload(paymentObj.razorpay_order_id);\r\n                    }\r\n                }\r\n                if(res.statusCode ==200 && status == \"failed\"){\r\n                    setloading(false);\r\n                    props.history.push('/orderFailed')\r\n    \r\n                }\r\n    \r\n            }),(err)=>{\r\n                console.log(err.response.body.message);\r\n            });\r\n        }catch(err){\r\n            alert(err);\r\n        }\r\n    }\r\n    const handleSubmit = ( razorpay_order_id, paymentMode=\"online\") =>{\r\n        state[\"razorpay_order_id\"] = razorpay_order_id;\r\n        state[\"paymentMode\"] = paymentMode;\r\n        setstate(state);\r\n        agent.Finance.fillItr(state).then((res=>{\r\n            setloading(false);\r\n            if(res.statusCode ==200){\r\n                props.history.push('/orderSuccess');\r\n            }\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });\r\n    } \r\n    const handleFileUpload = (e)=>{\r\n        setform16(e.target.files[0]);   \r\n    }\r\n    const onFileUpload=(razorpay_order_id)=>{\r\n        const formData = new FormData(); \r\n        formData.append( \r\n          \"myFile\", \r\n          form16, \r\n          form16.name\r\n        ); \r\n        formData.append(\"razorpay_order_id\",razorpay_order_id);        \r\n        formData.append(\"phone\",state[\"phone\"]);        \r\n        agent.Finance.uploadForm16(formData).then((res=>{\r\n            setloading(false);\r\n            if(res.statusCode ==200){\r\n                props.history.push('/orderSuccess');\r\n            }\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });   \r\n\r\n    }\r\n    if(props.location.query?.type == \"fill\"){\r\n        return (\r\n            <>\r\n            <h4 className=\"py-5 text-center\"><b>Fill ITR</b></h4>\r\n            <Form className=\"m-5\">\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">First name</Form.Label>\r\n                        <Form.Control name=\"firstName\" onChange={handleChange}  type=\"text\"  />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridlastName\">\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control name=\"lastName\" onChange={handleChange} type=\"text\"  />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">Phone*</Form.Label>\r\n                        <Form.Control name=\"phone\" onChange={handleChange}  type=\"text\"  isInvalid={isphoneinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a phone number.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n    \r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridBusiness\">\r\n                        <Form.Label>Business Name</Form.Label>\r\n                        <Form.Control name=\"business\" onChange={handleChange} type=\"text\" placeholder=\"ABC limited\" />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group  as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Email*</Form.Label>\r\n                        <Form.Control name=\"email\" onChange={handleChange} type=\"email\" placeholder=\"you@example.com\" isInvalid={isemailinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a Email.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridAadhar\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control name=\"address\" onChange={handleChange} as=\"textarea\" rows={3} />\r\n                    </Form.Group>\r\n                    </Form.Row><Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAadhar\">\r\n                        <Form.Label>Aadhar Number*</Form.Label>\r\n                        <Form.Control name=\"aadhar\" onChange={handleChange} type=\"text\" isInvalid={isaadharinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide aadhar number.\r\n                        </Form.Control.Feedback>                    \r\n    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Service</Form.Label>\r\n                        <Form.Control name=\"service\" onChange={handleChange} as=\"select\" defaultValue=\"Choose...\">\r\n                            <option>Choose...</option>\r\n                            <option>Balance Sheet</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress\">\r\n                        <Form.Label>PAN Number</Form.Label>\r\n                        <Form.Control name=\"pan\" onChange={handleChange} type=\"text\" />\r\n                    </Form.Group>\r\n    \r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridZip\">\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange} name=\"zip\"/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button variant=\"danger\" className=\"center\" type=\"button\" onClick={handlePay} disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Pay Now\"}\r\n                </Button>\r\n            </Form>\r\n            </>\r\n            )\r\n    \r\n    }else{\r\n        return (  <div className=\"login-div\">\r\n                <Form className=\"login-form\">\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">Phone*</Form.Label>\r\n                        <Form.Control name=\"phone\" onChange={handleChange}  type=\"text\"  isInvalid={isphoneinvalid}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We will contact you at this phone number.\r\n                        </Form.Text>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a phone number.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.File id=\"formcheck-api-regular\">\r\n                        <Form.Label variant=\"primary\">Form16*</Form.Label>\r\n                            <Form.File.Input accept=\".pdf\" onChange={handleFileUpload}/>\r\n                        </Form.File>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Only PDF file.\r\n                        </Form.Text>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Button variant=\"danger\"  type=\"button\" onClick={handlePay} disabled={loading}>{loading ? 'Loading…' : \"Pay Now\"}\r\n                    </Button>\r\n                    </Form.Row>\r\n                </Form>\r\n                </div>\r\n    )\r\n    }       \r\n}\r\n\r\nexport default FillItr\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass InnerHeader extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n    render(){\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\r\n                <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                                {/* <a className=\"nav-link\" href=\"#\">Home\r\n                    <span className=\"sr-only\">(current)</span>\r\n                                </a> */}\r\n                            {/* </li> */}\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\"> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\r\n                                {/* <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n\r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\r\n","import React from 'react'\r\n\r\nimport { Col, Nav,  } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nexport default function Leftbar() {\r\n    return (\r\n        <Col md={2} id=\"sidebar-col\" className=\"pr-0\">\r\n            <nav id=\"sidebar\">\r\n                <div className=\"sidebar-header\">\r\n                    <h5>AA2 MutualHelp</h5>\r\n                </div>\r\n                <Nav className=\"list-unstyled components flex-column\" as=\"ul\" >\r\n                <Nav.Item as=\"li\" className=\"active\">\r\n                <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                     Dashboard\r\n            </Nav.Link>\r\n            </LinkContainer>\r\n                </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                   \r\n                        <Nav.Link href=\"#homeSubmenu\" className=\"dropdown-toggle\" data-toggle=\"collapse\" aria-expanded=\"false\">Master Record</Nav.Link>\r\n                        \r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"homeSubmenu\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/memberGroup\">\r\n                                <Nav.Link href=\"/home\">Member Group</Nav.Link>\r\n                                </LinkContainer>\r\n                                {/* <NavLink to=\"/memberGroup\">Member Group</NavLink> */}\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link eventKey=\"link-1\">Members</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#groupLoan\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Group Loan</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"groupLoan\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"/home\">Calculator</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#processingFee\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"processingFee\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"/home\">List Processing Fee</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#expense\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"expense\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"/home\">List Expense</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#payments\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Payment to collect</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"payments\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"/home\">Payment to collect(Loan)</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </nav>\r\n        </Col>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\n\r\nexport default function TopNav(props) {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\r\n            <button type=\"button\" onClick={props.toggleSidebar} class=\"btn btn-dark\">\r\n                <i class=\"fas fa-align-left\"></i>\r\n            </button>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n                    <Nav.Link eventKey={2} href=\"#memes\">\r\n                        Dank memes\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport InnerHeader from './InnerHeader';\r\nimport Footer from './Footer';\r\nimport Leftbar from './Leftbar';\r\nimport TopNav from './TopNav';\r\nimport { Container, Row,Col } from 'react-bootstrap';\r\nconst InnerLayout = ({ component: Component, ...rest }) => {\r\n    const [showSidebar, setshowSidebar] = useState(true)\r\n    useEffect(() => {\r\n        setshowSidebar(window.innerWidth<=768?false:true);\r\n      }, [window.innerWidth]);    \r\n    //setshowSidebar(window.innerWidth<=768?false:true);\r\n    const toggleSidebar = () =>{\r\n        \r\n        console.log(window);\r\n        setshowSidebar(showSidebar?false:true)\r\n        // this.setState({\r\n        //   isopen:this.state.isopen?false:true\r\n        // })\r\n      }\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <>\r\n            \r\n                <Row className=\"flex-nowrap\">\r\n                    {showSidebar?<Leftbar/>:\"\"}\r\n                    <Col md={showSidebar?10:12} >\r\n                <div id=\"content\">\r\n                    <TopNav toggleSidebar={toggleSidebar}/>\r\n                    <Component {...props} />\r\n                    </div>\r\n                    </Col>\r\n                </Row>            \r\n            \r\n            <Footer/>\r\n            </>\r\n        )} />)\r\n}\r\n\r\nexport default InnerLayout\r\n","import React ,{Component}from 'react'\r\nimport { Badge } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    ADD_ITEM_INITIAL,\r\n    DECREASE_QUANTITY,\r\n    INCREASE_QUANTITY\r\n} from '../../constants/actionTypes';\r\n \r\nclass AddCartButton extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(props);\r\n        this.initialAddItem = (item) => ev => {\r\n            ev.preventDefault();\r\n            this.props.addItemInitial(item);\r\n        };\r\n        this.increaseQuantity = (productId) =>ev =>{\r\n            ev.preventDefault();\r\n            this.props.increaseQuantity(productId);\r\n        }\r\n        this.decreaseQuantity = (productId) =>ev =>{\r\n            ev.preventDefault();\r\n            this.props.decreaseQuantity(productId);\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops){\r\n    }\r\n    render(){\r\n    let arr = []\r\n     arr= this.props.addedItem.filter(record=>record.productId==this.props.item._id);\r\n    let length = arr.length;\r\n    console.log(length);\r\n    console.log(this.props.addedItem);\r\n    if(!length){\r\n        return (\r\n            <Badge variant=\"danger\" className=\"pointer\" onClick={this.initialAddItem(this.props.item)}>ADD+</Badge> \r\n        )\r\n    }else{\r\n        return (\r\n            <>\r\n                <Badge className=\"pointer\" variant=\"primary\" onClick={this.decreaseQuantity(arr[0].productId)}>-</Badge> \r\n                <Badge variant=\"danger\">{arr[0].quantity}</Badge> \r\n                <Badge className=\"pointer\" variant=\"primary\" onClick={this.increaseQuantity(arr[0].productId)}>+</Badge> \r\n            </>\r\n        )}\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.order });\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItemInitial: item =>\r\n        dispatch({ type: ADD_ITEM_INITIAL, item }),\r\n    increaseQuantity: productId =>\r\n        dispatch({ type: INCREASE_QUANTITY, productId }),\r\n    decreaseQuantity: productId =>\r\n        dispatch({ type: DECREASE_QUANTITY, productId }),\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddCartButton)\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader(props) {\r\n    if(props.show){\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\" className=\"loader\">\r\n            </Spinner>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component } from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport AddCartButton from './AddCartButton';\r\nimport Loader from '../layout/Loader';\r\nexport class CategoryList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categoryList:[],\r\n            itemList:[],\r\n            showloader:false,\r\n            selectedTab:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n     // this.getCategories();\r\n     //this.getInitialData();\r\n    }\r\n    selectItem(ev){\r\n        console.log(ev);\r\n    }\r\n     getInitialData=async ()=>{\r\n        this.setState({\r\n            showloader:true\r\n        })\r\n\r\n        const [categories, products] =await Promise.all(agent.Order.getCatgoryInitialData())\r\n        if(categories.statusCode == 200){\r\n            this.setState({\r\n                categoryList:categories.body.record\r\n            })\r\n        }\r\n        if(products.statusCode == 200){\r\n            this.setState({\r\n                itemList:products.body.record\r\n            })\r\n        }\r\n        this.setState({\r\n            showloader:false\r\n        })\r\n\r\n\r\n    }\r\n    changeCategory= (catName=\"\") => ev =>{\r\n        this.setState({\r\n            showloader:true\r\n        })\r\n        this.setState({\r\n            selectedTab:catName\r\n        })\r\n        agent.Order.getProductsByCat(catName).then(products=>{\r\n            this.setState({\r\n                showloader:false\r\n            })\r\n    \r\n            if(products.statusCode == 200){\r\n                this.setState({\r\n                    itemList:products.body.record\r\n                })\r\n            }\r\n    \r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col  md={3} className=\"p-4\" >\r\n                            <ListGroup defaultActiveKey=\"all\">\r\n                            <ListGroup.Item className=\"mobile-list\" key={\"all\"} active={this.state.selectedTab==\"\"?true:false}  onClick={this.changeCategory()}>All category</ListGroup.Item>\r\n                                {this.state.categoryList.map(\r\n                                    (item,index)=><ListGroup.Item className=\"mobile-list\" key={index} active={this.state.selectedTab==item.name?true:false}  action onClick={this.changeCategory(item.name)}>{item.name}</ListGroup.Item>\r\n                                    )}\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={9} className=\"p-4 production-col\" >\r\n                        <Loader show={this.state.showloader}/>\r\n                            <CardColumns>\r\n                            {this.state.itemList.map(\r\n                                (item,index)=> \r\n                                <Card border=\"danger\" key={index}>\r\n                                    <Card.Img variant=\"top\" src={item.imageUrl} />\r\n                                    <Card.Body>\r\n                                        <Card.Title>{item.title}</Card.Title>\r\n                                        <Card.Subtitle className=\"mb-2 text-muted\"><span>&#8377;</span>{item.price}</Card.Subtitle>\r\n                                        <Card.Text>\r\n                                        {item.description}\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                    <Card.Footer>\r\n                                        <AddCartButton  item={item}/>\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                                    )}\r\n\r\n                            </CardColumns>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CategoryList\r\n","import React, {Component} from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport AddCartButton from './AddCartButton'\r\nclass MyCart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        const priceTotal = this.props.addedItem.reduce(\r\n            (prevValue, currentValue) => prevValue + (currentValue.quantity * parseInt(currentValue.perItemPrice)),\r\n            0\r\n          );\r\n        \r\n        return (\r\n            <Table responsive striped bordered className=\"cart-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product</th>\r\n                        <th>Quantity</th>\r\n                        <th>Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.addedItem.map(record=>\r\n                    <tr>\r\n                        <td>{record.item.title}</td>\r\n                        <td><AddCartButton  item={record.item}/></td>\r\n                        <td><span>&#8377;</span>{parseInt(record.perItemPrice)*record.quantity}</td>\r\n                    </tr>\r\n                    \r\n                    )}\r\n                </tbody>\r\n                <tfoot>\r\n                    {/* <tr>\r\n                        <td colSpan=\"2\">\r\n                            Prime member discount\r\n                        </td>\r\n                        <td>\r\n                            10%\r\n                        </td>\r\n    \r\n                    </tr> */}\r\n                    <tr>\r\n                        <td colSpan=\"2\">\r\n                            <h5>Total</h5>\r\n                        </td>\r\n                        <td>\r\n                        <span>&#8377;</span> {priceTotal}\r\n                        </td>\r\n    \r\n                    </tr>\r\n                </tfoot>\r\n            </Table>)\r\n    \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.order });\r\nconst mapDispatchToProps = dispatch => ({\r\n    // addItemInitial: item =>\r\n    //     dispatch({ type: ADD_ITEM_INITIAL, item }),\r\n    // increaseQuantity: productId =>\r\n    //     dispatch({ type: INCREASE_QUANTITY, productId }),\r\n    // decreaseQuantity: productId =>\r\n    //     dispatch({ type: DECREASE_QUANTITY, productId }),\r\n});\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MyCart)\r\n","import React,{useState} from 'react'\r\nimport { Table, Container, Row, Col,Form, Button, Modal} from 'react-bootstrap';\r\nimport { useSelector } from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport agent from '../../agent'\r\n// import {KEY_ID,KEY_SECRET} from '../../constants/paymantConstants'\r\n//import Razorpay from 'razorpay';\r\nfunction PlaceOrder(props) {\r\n    const order = useSelector(state => state.order);\r\n    const authState = useSelector(state => state.auth);\r\n    const [shipingDetails, setShipingDetails] = useState([]);\r\n    const [showPayementModel, setshowPayementModel] = useState(false);\r\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\r\n    const [isnameinvalid,setisnameinvalid] = useState(false);\r\n    const [isaddressinvalid,setisaddressinvalid] = useState(false);\r\n\r\n    let totalQuantity = 0;\r\n    let totalPrice = 0;\r\n\r\n    const products = order.addedItem.map(record=>                        \r\n    <tr>\r\n        <td>\r\n        {record.quantity} x {record.item.title}\r\n        </td>\r\n        <td>\r\n        <span>&#8377;</span> {record.quantity*parseInt(record. perItemPrice)}\r\n        </td>\r\n    </tr>\r\n);\r\nconst handleSubmit=(paymentMode=\"COD\", razorpay_order_id=\"\")=>{\r\n    let shippingObj = {\r\n        name:shipingDetails[\"name\"],\r\n        address:shipingDetails[\"address\"],\r\n        phone:shipingDetails[\"phone\"],\r\n        city:\"barh\",\r\n        street:shipingDetails[\"street\"],\r\n        landmark:shipingDetails[\"landmark\"]\r\n    } \r\n    let data = {\r\n        items:order.addedItem, \r\n        shipping:shippingObj,\r\n        paymentMode:paymentMode,\r\n        razorpay_order_id:razorpay_order_id\r\n    };\r\n    agent.Order.placeOrder(data).then((res=>{\r\n        if(res.statusCode == 200){\r\n            props.history.push('/orderSuccess')\r\n        }\r\n    }),(err)=>{\r\n        alert(err.response.body.message);\r\n    });\r\n\r\n}\r\nconst selectPaymentMode = ()=>{\r\n    if(checkValidate()){\r\n        setshowPayementModel(showPayementModel?false:true);\r\n    }\r\n}\r\nconst handleChange = (e) => {\r\n    shipingDetails[e.target.name] = e.target.value;\r\n    setShipingDetails(shipingDetails);\r\n}\r\n\r\norder.addedItem.forEach(element => {\r\n    totalQuantity += element.quantity;\r\n    totalPrice += parseInt(element.quantity)*element.perItemPrice;\r\n});\r\nif(authState?.errors?.body.record.isPrimeMember){\r\n    totalPrice -= ((totalPrice*10)/100)\r\n}\r\nconst onlinePayment = ()=>{\r\n    agent.Payment.getRazorpayOrderId({amount:totalPrice,orderForService:\"Food Order\"}).then((res=>{\r\n        if(res.statusCode == 200){\r\n            console.log(res);\r\n            var options = {\r\n                \"key\": \"123\", // Enter the Key ID generated from the Dashboard\r\n                \"amount\": res.body.record.amount*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n                \"currency\": \"INR\",\r\n                \"name\": \"Guest\",\r\n                \"description\": \"Food Order Transaction\",\r\n                \"image\": \"https://example.com/your_logo\",\r\n                \"order_id\": res.body.record.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n                \"handler\": function (response){\r\n                    updatePaymentState(\"success\",response);\r\n                },                \r\n                \"theme\": {\r\n                    \"color\": \"#3399cc\"\r\n                }\r\n            };   \r\n            const rzp1 = new window.Razorpay(options);\r\n            rzp1.on('payment.failed', function (response){\r\n                updatePaymentState(\"failed\",response);\r\n\r\n            });            \r\n            rzp1.open();\r\n\r\n        }else{\r\n            alert(res.body)\r\n        }\r\n    }));\r\n\r\n}\r\nconst updatePaymentState=(status,obj)=>{\r\n    console.log(\"status\",status);\r\n    console.log(\"returnobj\",obj);\r\n    let orderId = \"\";\r\n    let paymentObj = {\r\n        razorpay_order_id:\"\",\r\n        paymentStatus:\"\",\r\n        paymentResponse:\"\"\r\n    }\r\n    if(status == \"success\"){\r\n        paymentObj.razorpay_order_id = obj.razorpay_order_id;\r\n        paymentObj.paymentStatus = status;\r\n        paymentObj.paymentResponse = obj;\r\n    }\r\n    if(status == \"failed\"){\r\n        paymentObj.razorpay_order_id = obj.error.metadata.order_id;\r\n        paymentObj.paymentStatus = status;\r\n        paymentObj.paymentResponse = obj;\r\n    }\r\n    try{\r\n        agent.Payment.updatePaymentStatus(paymentObj).then((res=>{\r\n            console.log(res.body.record)\r\n            if(res.statusCode ==200 && status == \"success\"){\r\n                handleSubmit(\"online\",paymentObj.razorpay_order_id);\r\n            }\r\n            if(res.statusCode ==200 && status == \"failed\"){\r\n                props.history.push('/orderFailed')\r\n\r\n            }\r\n\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });\r\n    }catch(err){\r\n        alert(err);\r\n    }\r\n}\r\nconst checkValidate=()=>{\r\n    let returnType = true;\r\n    setisnameinvalid(false);\r\n    setisaddressinvalid(false);\r\n    setisphoneinvalid(false);\r\n\r\n    if((shipingDetails[\"name\"] ==undefined || shipingDetails[\"name\"] ==\"\")){\r\n        setisnameinvalid(true);            \r\n        returnType = false\r\n    } \r\n\r\n    if(shipingDetails[\"phone\"] ==undefined || shipingDetails[\"phone\"] ==\"\"){\r\n        setisphoneinvalid(true);\r\n        returnType = false\r\n    }\r\n    if((shipingDetails[\"address\"] ==undefined || shipingDetails[\"address\"] ==\"\") ){\r\n        setisaddressinvalid(true);            \r\n        returnType = false\r\n    } \r\n    return returnType;\r\n} \r\n\r\nconst token = agent.getToken();\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n            <Row className=\"p-3 order-summary\">\r\n                <Col md={6} >\r\n                    <h4>Shipping Details</h4>\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"name\"  onChange={handleChange} isInvalid={isnameinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your name.\r\n                            </Form.Control.Feedback>                    \r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"address\" placeholder=\"Line 1\" onChange={handleChange} isInvalid={isaddressinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your address.\r\n                            </Form.Control.Feedback>                    \r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Street/Mohalla</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"street\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Landmark</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"landmark\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Mobile no.</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"phone\"  onChange={handleChange} isInvalid={isphoneinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your phone no..\r\n                            </Form.Control.Feedback>                    \r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control type=\"text\"  name=\"city\" onChange={handleChange} value=\"barh\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <Button variant=\"danger\" type=\"button\"  onClick={(ev)=>selectPaymentMode()}>\r\n                            Place Order\r\n                        </Button>\r\n                            {/* {token==null?<Form.Label>Please <Link to=\"/login\" className=\"underline\">login</Link> for place order </Form.Label>:\"\"} */}\r\n                            \r\n                        </Form.Group>\r\n                    </Form>               \r\n                     </Col>\r\n                <Col md={6} >\r\n                    <p>Order Summary</p>\r\n                    <h5>You have {totalQuantity} items in your food cart</h5>\r\n                    <Table borderless>\r\n                        <tbody className=\"order-summary-border\">\r\n                            {products}\r\n                        </tbody>\r\n                        <tfoot >\r\n                            {authState?.errors?.body.record.isPrimeMember?                            <tr>\r\n                                <td>\r\n                                    <b>Prime member discount</b>\r\n                                </td>\r\n                                <td>\r\n                                    10%\r\n                                </td>\r\n                            </tr>:\"\"}\r\n                            <tr>\r\n                                <td>\r\n                                    <b>Total</b>\r\n                                </td>\r\n                                <td>\r\n                                <span>&#8377;</span> {totalPrice}\r\n                                </td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        <Modal show={showPayementModel} onHide={selectPaymentMode} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Payment Mode</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Button variant=\"success\" onClick={()=>handleSubmit()}>Cash on Delivery</Button>\r\n            <Button variant=\"primary\"onClick={onlinePayment}>Pay Now</Button>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrder\r\n","import React from 'react'\r\nimport { Alert, Button} from 'react-bootstrap';\r\nimport {useDispatch } from \"react-redux\";\r\nimport orderR from '../../reducers/order';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {\r\n    RESET_ORDER\r\n} from '../../constants/actionTypes';\r\n\r\nfunction OrderSuccess() {\r\n    // const [show, setShow] = useState(true);\r\n    const dispatch = useDispatch();\r\n    dispatch({type:RESET_ORDER})\r\n    return (\r\n      <>\r\n        <Alert show={true} className=\"login-div\">\r\n          <Alert.Heading>Success!</Alert.Heading>\r\n          <p>\r\n         Our representative will call you for order confirmation within 2 minutes. If you not get a call please dial <b>9990708074</b>.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n              <Link to=\"/\">\r\n              <Button variant=\"danger\">\r\n              Ok\r\n            </Button>\r\n\r\n              </Link>\r\n          </div>\r\n        </Alert>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OrderSuccess\r\n","import React,{useState,useEffect, useMemo} from 'react'\r\nimport { Table, Nav, Button, Modal } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport {Link} from 'react-router-dom';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\nfunction CategoryManagement(props) {\r\n      const initialState = {\r\n          categoryList:[]\r\n      }\r\n      const [state, setstate] = useState([]) \r\n      const [show, setShow] = useState(false);\r\n      const [alert, setalert] = useState({heading:\"\",message:\"\",data:{}});\r\n        const handleClose = (action) => {\r\n            if(action==\"yes\"){\r\n                props.showLoader(true);\r\n                agent.Order.deleteCategory(alert.data.name).then((res=>{\r\n                    props.showLoader(false);\r\n                    console.log(res);\r\n                    if(res.statusCode == 200){\r\n                        getCategories()\r\n                    }else{\r\n                    }\r\n                }));\r\n        \r\n            }\r\n            setShow(false)\r\n        };\r\n      const handleShow = () => setShow(true);\r\n    \r\n      useEffect(() => {\r\n        if(props.selectedTab==\"categories\"){\r\n            getCategories()\r\n        }\r\n    },[props.selectedTab])\r\n\r\n    const getCategories =()=>{\r\n        console.log(\"category run\")\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res=>{\r\n            props.showLoader(false);\r\n            if(res.statusCode == 200){\r\n                setstate(res.body.record);\r\n            }else{\r\n                setstate([]);\r\n            }\r\n        }));\r\n    }\r\n    const deleteCategory = (data)=>{\r\n        console.log(data);\r\n        setalert({\r\n            heading:`Delete Category: ${data.name}`,\r\n            message:`Are you sure you want to delete category: ${data.name}`,\r\n            data:data\r\n        })\r\n        handleShow();    \r\n    }\r\n    const data = useMemo(\r\n        () => \r\n            state.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.name,\r\n                col3:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [state]\r\n      )   \r\n      const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Name',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col3',\r\n          },\r\n\r\n        ],\r\n        []\r\n      )    \r\n      \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n    if(props.selectedTab == \"categories\"){\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={()=>props.changeTab(\"addCategory\")} variant=\"danger\">Add Category</Button>\r\n                <Table {...getTableProps()} responsive>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                            >\r\n                                {column.render('Header')}\r\n                                <span>\r\n                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                </span>\r\n\r\n                            </th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col3\"){\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }else{\r\n                                    return (\r\n                                        <td>\r\n                                        <span onClick={()=>deleteCategory(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </td>\r\n        \r\n                                    )\r\n                                }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n    <div>\r\n     <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n        Previous Page\r\n      </button>\r\n       <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n         Next Page\r\n       </button>\r\n       <div>\r\n         Page{' '}\r\n         <em>\r\n           {pageIndex + 1} of {pageOptions.length}\r\n         </em>\r\n       </div>\r\n     </div>                                              \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{alert.heading}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{alert.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\r\n                        Cancel\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal> \r\n            </>)\r\n    \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default CategoryManagement\r\n","import React, { useEffect, useState } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\n\r\nfunction OrderHistory(props) {\r\n    //let active = 0;\r\n    let items = [];\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"orders\"){\r\n            getOrders()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const [orderHistory, setorderHistory] = useState([])\r\n    const [selectedorder, setselectedorder] = useState([]);\r\n    const [totalPage, settotalPage] = useState(0);\r\n    const [isopenpopup, setisopenpopup] = useState(false);\r\n    const [selectedPage,setselectedPage] = useState(0);\r\n    const handleClose = () => setisopenpopup(false);\r\n    for (let number = 0; number <= totalPage; number++) {\r\n        if(totalPage >0){\r\n            items.push(\r\n                <Pagination.Item onClick={() => changePage(number)} key={number} active={number == selectedPage}>\r\n                  {number+1}\r\n                </Pagination.Item>,\r\n              );\r\n        }\r\n      }         \r\n      const paginationBasic = (\r\n        <div>\r\n          <Pagination>{items}</Pagination>\r\n        </div>\r\n      ); \r\n\r\n    const viewOrderPopUp = (record) => {\r\n        setselectedorder(record);\r\n        setisopenpopup(true);\r\n    }\r\n    let history = useHistory();\r\n    const getOrders = (page=0) => {\r\n        props.showLoader(true);\r\n        agent.Order.getOrdersHistoryAdmin(page).then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record)\r\n            setorderHistory(res.body.record);\r\n            let totalRecord = res.body.totalOrders;\r\n            let totalPage = parseInt(res.body.totalOrders)/10;\r\n            console.log(\"totalPage\",totalPage);\r\n            settotalPage(totalPage);\r\n        }), (err) => {\r\n            console.log(err.response.body.message);\r\n            if (err.response.body.message == \"jwt must be provided\") {\r\n                console.log(\"login required\");\r\n                history.push(\"/login\");\r\n            }\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const changePage=(number) =>{\r\n        console.log(\"page\",number);\r\n        setselectedPage(number);\r\n        getOrders(number);\r\n    }\r\n    if (props.selectedTab == \"orders\") {\r\n        return (\r\n            <>\r\n                <Table responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Customer</th>\r\n                            <th>Date</th>\r\n                            <th>Details</th>\r\n                            <th>Number</th>\r\n                            <th>Action</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orderHistory.map((record, index) =>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{record.shipping.name}</td>\r\n                                <td>{record.datePlaced}</td>\r\n                                <td>{record.items.map(itm => <span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                                <td>{record.shipping.phone}</td>\r\n\r\n                                <td>\r\n                                    <Button type=\"button\" onClick={() => viewOrderPopUp(record)}>View</Button>\r\n                                </td>\r\n                            </tr>\r\n\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n                {paginationBasic}\r\n                <Modal show={isopenpopup} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Order Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"6\"><h4>Shipping Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                                    <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                                    <td><b>Street:</b> {selectedorder?.shipping?.street}</td>\r\n                                    <td><b>Landmark:</b> {selectedorder?.shipping?.landmark}</td>\r\n\r\n                                    <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                                    <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                            <tbody>{selectedorder?.items?.map(itm => <tr>\r\n                                <td><b>Title:</b> {itm.item.title}</td>\r\n                                <td><b>Description:</b> {itm.item.description}</td>\r\n                                <td><b>Quantity:</b> {itm.quantity}</td>\r\n                                <td><b>Total Price:</b> {parseInt(itm.quantity) * itm.perItemPrice}</td>\r\n                            </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Payment Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Payment Mode: </b>{selectedorder.paymentMode}</td>\r\n                                    <td><b>Razorpay Order id: </b>{selectedorder.razorpay_order_id}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n\r\n\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                {selectedorder.isDiscountApplied ? <tr>\r\n                                    <td>\r\n                                        <b>\r\n                                            Prime Member Discount:\r\n                                </b>\r\n                                    </td>\r\n                                    <td>10%</td>\r\n                                </tr> : \"\"}\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Total Bill Amount</b>\r\n                                    </td>\r\n                                    <td>{selectedorder.totalBillAmount}</td>\r\n                                </tr>\r\n                            </tbody>\r\n\r\n                        </Table>\r\n\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            </>\r\n        )\r\n\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default OrderHistory\r\n","import React,{useState} from 'react'\r\nimport { Button,Form, Col} from 'react-bootstrap';\r\nimport agent from '../../agent'\r\n\r\nfunction AddCategory(props) {\r\n    const [state, setstate] = useState(\"\")\r\n    const handleSubmit=(ev) =>{\r\n        props.showLoader(false);\r\n        agent.Order.addCategory({name:state}).then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                console.log(props);\r\n                props.changeTab(\"categories\");\r\n            }else{\r\n                //setstate([]);\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n    const handleChange = (e) => {\r\n        setstate(e.target.value);\r\n    }    \r\n    if (props.selectedTab == \"addCategory\") {\r\n\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                <Form.Group as={Col} md=\"4\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Category Name:</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"\" onChange={handleChange}/>\r\n                </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                </Button>\r\n            </Form>\r\n            )\r\n\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default AddCategory\r\n","import React,{useState,useEffect, useMemo} from 'react'\r\nimport { Table, Nav, Pagination, Button, Modal, Image } from 'react-bootstrap';\r\nimport agent from '../../../agent'\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch } from \"react-redux\";\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\n\r\nimport {\r\n    STORE_EDIT_PRODUCT\r\n} from '../../../constants/actionTypes';\r\n\r\nfunction ProductManagement(props) {\r\n    \r\n    useEffect(() => {\r\n        if(props.selectedTab==\"products\"){\r\n            getProducts()\r\n        }\r\n    },[props.selectedTab])\r\n\r\n    const [state, setstate] = useState([]) \r\n    const [show, setShow] = useState(false);\r\n    const [alert, setalert] = useState({heading:\"\",message:\"\",data:{}});\r\n    const dispatch = useDispatch()\r\n    \r\n    const getProducts =()=>{\r\n        props.showLoader(true);\r\n        agent.Order.getProducts().then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                setstate(res.body.record);\r\n            }else{\r\n                setstate([]);\r\n            }\r\n        }));\r\n    }\r\n    const handleClose = (action) => {\r\n        if(action==\"yes\"){\r\n            props.showLoader(true);\r\n            agent.Order.deleteProduct(alert.data.title).then((res=>{\r\n                props.showLoader(false);\r\n                if(res.statusCode == 200){\r\n                    getProducts()\r\n                }else{\r\n                }\r\n            }));\r\n    \r\n        }\r\n        setShow(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n    const deleteProduct = (data)=>{\r\n        console.log(data);\r\n        setalert({\r\n            heading:`Delete Product: ${data.title}`,\r\n            message:`Are you sure you want to delete Product: ${data.title}`,\r\n            data:data\r\n        })\r\n        handleShow();    \r\n    }\r\n    const editProduct = (data)=>{\r\n        dispatch({type:STORE_EDIT_PRODUCT,data})\r\n        props.changeTab(\"editProduct\")\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Image',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Title',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Description',\r\n            accessor: 'col4',\r\n          },\r\n          {\r\n            Header: 'Price',\r\n            accessor: 'col5',\r\n          },\r\n          {\r\n            Header: 'Category',\r\n            accessor: 'col6',\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col7',\r\n          },\r\n\r\n        ],\r\n        []\r\n    )    \r\n\r\n    const data = useMemo(\r\n        () => \r\n            state.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.imageUrl,\r\n                col3:record.title,\r\n                col4:record.description,\r\n                col5:record.price,\r\n                col6:record.category,\r\n                col7:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [state]\r\n      )  \r\n\r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n\r\n    if(props.selectedTab == \"products\"){\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={()=>props.changeTab(\"addProduct\")} variant=\"danger\">Add Product</Button>\r\n                <Table {...getTableProps()} responsive>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                            >\r\n                                {column.render('Header')}\r\n                                <span>\r\n                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                </span>\r\n\r\n                            </th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id ==\"col2\"){\r\n                                    return(<td>{cell.value !=\"\"?<Image src={cell.value} className=\"product-image\" thumbnail />:\"No Image\"}</td>)\r\n                                }                                \r\n                                if(cell.column.id !=\"col7\"){\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }else{\r\n                                    return (\r\n                                        <td>\r\n                                        <span onClick={()=>deleteProduct(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                        <span className=\"ml-2\" onClick={()=>editProduct(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </td>\r\n        \r\n                                    )\r\n                                }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n                <div>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                </div>                                              \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{alert.heading}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{alert.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\r\n                        Cancel\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>               \r\n            </>)\r\n    \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default ProductManagement\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Button, Form, Col } from 'react-bootstrap';\r\nimport agent from '../../../agent';\r\n\r\nfunction AddProduct(props) {\r\n    const [category, setcategory] = useState([])\r\n    const [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"addProduct\"){\r\n            getCategories()\r\n        }\r\n    },[props.selectedTab])\r\n    const getCategories =()=>{\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                //setstate(res.body.record);\r\n                setcategory(res.body.record)\r\n            }else{\r\n                //setstate([]);\r\n                setcategory([])\r\n            }\r\n        }));\r\n    }\r\n    const handleChange = (e) => {\r\n\r\n        //const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n        \r\n    }\r\n\r\n    const handleSubmit=(ev) =>{\r\n        props.showLoader(false);\r\n        console.log(state);\r\n        agent.Order.addProducts(state).then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                //console.log(props);\r\n                props.changeTab(\"products\");\r\n            }else{\r\n                //setstate([]);\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n\r\n    if (props.selectedTab == \"addProduct\") {\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>Select Category</Form.Label>\r\n                <Form.Control as=\"select\" name=\"category\" onChange={handleChange} required>\r\n                <option key={\"\"}>Select Category</option>\r\n                    {category.map(item=><option key={item.name}>{item.name}</option>)}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control type=\"text\"  name=\"title\" onChange={handleChange} required/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} name=\"description\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control type=\"number\" name=\"price\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>ImageURL</Form.Label>\r\n                <Form.Control type=\"text\"  name=\"imageURL\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n            </Button>    \r\n            </Form>   \r\n         )\r\n        \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default AddProduct\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport agent from '../../../agent';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {\r\n    UPDATE_PRODUCT_FIELD\r\n} from '../../../constants/actionTypes';\r\n\r\nfunction EditProduct(props) {\r\n    const storeProduct = useSelector(state => state.product);\r\n\r\n    const [category, setcategory] = useState([])\r\n    const [state, setState] = useState({})\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (props.selectedTab == \"editProduct\") {\r\n            getCategories()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getCategories = () => {\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res => {\r\n            props.showLoader(false);\r\n\r\n            if (res.statusCode == 200) {\r\n                setcategory(res.body.record)\r\n            } else {\r\n                setcategory([])\r\n            }\r\n        }));\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let data = {key:e.target.name,value:e.target.value}\r\n        dispatch({type:UPDATE_PRODUCT_FIELD,data});\r\n    }\r\n\r\n    const handleSubmit = (ev) => {\r\n        console.log(storeProduct);\r\n        props.showLoader(false);\r\n        agent.Order.editProducts(storeProduct.product).then((res => {\r\n            props.showLoader(false);\r\n            if (res.statusCode == 200) {\r\n                props.changeTab(\"products\");\r\n            } else {\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n\r\n    if (props.selectedTab == \"editProduct\") {\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Select Category</Form.Label>\r\n                        <Form.Control as=\"select\" value={storeProduct.product?.category} name=\"category\" onChange={handleChange} required>\r\n                            <option key={\"\"}>Select Category</option>\r\n                            {category.map(item => <option key={item.name}>{item.name}</option>)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" value={storeProduct.product?.title} name=\"title\" onChange={handleChange} required />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" value={storeProduct.product?.description} rows={3} name=\"description\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"number\" value={storeProduct.product?.price} name=\"price\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlInput5\">\r\n                        <Form.Label>ImageURL</Form.Label>\r\n                        <Form.Control type=\"text\" value={storeProduct.product?.imageUrl} name=\"imageUrl\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n            </Button>\r\n            </Form>\r\n        )\r\n\r\n    } else {\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport default EditProduct\r\n","import React, { useEffect, useState,useMemo } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\n\r\nfunction FinanceRequests(props) {\r\n    const [ITRrequests, setITRrequests] = useState([])\r\n    const [isopenpopup, setisopenpopup] = useState(false);\r\n    const [selectedorder, setselectedorder] = useState([]);\r\n\r\n    const handleClose = () => setisopenpopup(false);\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"finance\"){\r\n            getITRrequests()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getITRrequests = () => {\r\n        props.showLoader(true);\r\n        agent.Finance.getAdminItr().then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record);\r\n            setITRrequests(res.body.record);\r\n        }), (err) => {\r\n            // if (err.response.body.message == \"jwt must be provided\") {\r\n            //     console.log(\"login required\");\r\n            //     history.push(\"/login\");\r\n            // }\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'FirstName',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'LastName',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Phone',\r\n            accessor: 'col4',\r\n          },\r\n          {\r\n            Header: 'Email',\r\n            accessor: 'col5',\r\n          },\r\n          // {\r\n          //   Header: 'Address',\r\n          //   accessor: 'col6',\r\n          // },\r\n          // {\r\n          //   Header: 'Aadhar',\r\n          //   accessor: 'col7',\r\n          // },\r\n          // {\r\n          //   Header: 'Business',\r\n          //   accessor: 'col8',\r\n          // },\r\n          // {\r\n          //   Header: 'Zip',\r\n          //   accessor: 'col9',\r\n          // },\r\n          // {\r\n          //   Header: 'Service',\r\n          //   accessor: 'col10',\r\n          // },\r\n          {\r\n            Header:'Action',\r\n            accessor: 'col6'\r\n          }\r\n        ],\r\n        []\r\n    )    \r\n    const data = useMemo(\r\n        () => \r\n        ITRrequests.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.firstName,\r\n                col3:record.lastName,\r\n                col4:record.phone,\r\n                col5:record.email,\r\n                col6:record\r\n                // col6:record.address,\r\n                // col7:record.aadhar,\r\n                // col8:record.business,\r\n                // col9:record.zip,\r\n                // col10:record.service\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [ITRrequests]\r\n      )  \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n    const viewOrderPopUp = (record) => {\r\n        setselectedorder(record);\r\n        setisopenpopup(true);\r\n    }\r\n\r\n    if (props.selectedTab == \"finance\") {\r\n    return (\r\n        <>\r\n        <Table {...getTableProps()} responsive>\r\n        <thead>\r\n            {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                <th\r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                >\r\n                    {column.render('Header')}\r\n                    <span>\r\n                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                    </span>\r\n\r\n                </th>\r\n                ))}\r\n            </tr>\r\n            ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n            {page.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n                <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                                if(cell.column.id ==\"col6\"){\r\n                                  return(\r\n                                  <td>\r\n                                    <Button type=\"button\" onClick={() => viewOrderPopUp(cell.value)}>View</Button>\r\n                                    </td>\r\n                                  )\r\n                              } else{\r\n                                return (\r\n                                  <td {...cell.getCellProps()}>\r\n                                      {cell.render('Cell')}\r\n                                  </td>\r\n                                  )\r\n          \r\n                              }                               \r\n\r\n                })}\r\n                </tr>\r\n            )\r\n            })}\r\n        </tbody>\r\n    </Table>\r\n                <div>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                </div> \r\n                <Modal show={isopenpopup} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>User Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>First Name: </b></td>\r\n                                    <td>{selectedorder.firstName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Last Name: </b></td>\r\n                                    <td>{selectedorder.lastName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Phone: </b></td>\r\n                                    <td>{selectedorder.phone}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Email: </b></td>\r\n                                    <td>{selectedorder.email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Address: </b></td>\r\n                                    <td>{selectedorder.address}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Aadhar: </b></td>\r\n                                    <td>{selectedorder.aadhar}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Business: </b></td>\r\n                                    <td>{selectedorder.business}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Zip: </b></td>\r\n                                    <td>{selectedorder.zip}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Service: </b></td>\r\n                                    <td>{selectedorder.service}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Razorpay order id: </b></td>\r\n                                    <td>{selectedorder.razorpay_order_id}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                </>    \r\n                                                       \r\n\r\n)\r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default FinanceRequests\r\n","import React, { useEffect, useState,useMemo } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Form16Requests(props) {\r\n    const [form16requests, setform16requests] = useState([])\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"form16\"){\r\n            getForm16requests()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getForm16requests = () => {\r\n        props.showLoader(true);\r\n        agent.Finance.getAdminForm16().then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record);\r\n            setform16requests(res.body.record);\r\n        }), (err) => {\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const downloadForm16=(filepath=\"\")=>{\r\n        console.log(filepath);\r\n        let filePathArr = filepath.split(\"/\");\r\n        let fileName = filePathArr[filePathArr.length -1];\r\n        console.log(fileName);\r\n        agent.Finance.downloadForm16({fileName:fileName}).then(res => {\r\n            console.log(res);\r\n\r\n        });\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Phone',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Form16',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Razorpay Order Id',\r\n            accessor: 'col4',\r\n          }\r\n\r\n\r\n        ],\r\n        []\r\n    )    \r\n    const data = useMemo(\r\n        () => \r\n        form16requests.map((record,index)=>\r\n                { \r\n                    let filePathArr = record.filePath.split(\"/\");\r\n                    let fileName = filePathArr[filePathArr.length -1];\r\n                return {col1:index+1,\r\n                col2:record.phone,\r\n                col3:fileName,\r\n                col4:record.razorpay_order_id,\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [form16requests]\r\n      )  \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n\r\n    if(props.selectedTab == \"form16\"){\r\n        return (\r\n            <>\r\n            <Table {...getTableProps()} responsive>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {headerGroup.headers.map(column => (\r\n                    <th\r\n                        {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                    >\r\n                        {column.render('Header')}\r\n                        <span>\r\n                        {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                        </span>\r\n    \r\n                    </th>\r\n                    ))}\r\n                </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {page.map(row => {\r\n                prepareRow(row)\r\n                return (\r\n                    <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                                if(cell.column.id ==\"col3\"){\r\n                                    return(<td>\r\n                                        {/* <a target={\"_blank\"}  href = \"http://localhost:3000/api/download?fileName=16057165121892019-08-30-12-14-11-448_1567147451448_XXXPK9512X_Acknowledgement.pdf\">Download</a> */}\r\n                                        <Link className=\"btn btn-danger\" target={\"_blank\"} to={`/api/download?fileName=${cell.value}`}>Download</Link>\r\n                                        {/* <Button type=\"button\" onClick={()=>downloadForm16(cell.value)} variant=\"danger\"> Download</Button>  */}\r\n                                         </td>)\r\n                                }else{\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }                                \r\n\r\n                    })}\r\n                    </tr>\r\n                )\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n                    <div>\r\n                    <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                        Previous Page\r\n                    </button>\r\n                    <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                        Next Page\r\n                    </button>\r\n                    <div>\r\n                        Page{' '}\r\n                        <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                        </em>\r\n                    </div>\r\n                    </div>   \r\n                    </>                                           \r\n    \r\n            )\r\n        }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default Form16Requests\r\n","import React,{useState,useEffect} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../layout/Loader';\r\nimport OrderHistory from '../Admin/orders/OrderHistory';\r\nimport AddCategory from '../Admin/AddCategory';\r\nimport ProductManagement from '../Admin/products/ProductManagement'\r\nimport AddProduct from '../Admin/products/AddProduct'\r\nimport EditProduct from '../Admin/products/EditProduct'\r\nimport FinanceRequests from '../Admin/finance/FinanceRequests';\r\nimport Form16Requests from '../Admin/finance/Form16Requests';\r\n\r\nfunction Home(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [selectedTab, setselectedTab] = useState(\"categories\")\r\n    const showLoader =(value)=>{\r\n        setisShowLoader(value);\r\n    }\r\n    const changeTab=(tab=\"\")=>{\r\n        setselectedTab(tab);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n            <Row>\r\n                <Col md={3} className=\"p-4\">\r\n                    <ListGroup >\r\n                        <ListGroup.Item key={\"categories\"} active={selectedTab==\"categories\"?true:false} action  onClick={()=>changeTab(\"categories\")}>Category Management</ListGroup.Item>\r\n                        <ListGroup.Item key={\"products\"} active={selectedTab==\"products\"?true:false} action onClick={()=>changeTab(\"products\")}>Product Management</ListGroup.Item>\r\n                        <ListGroup.Item key={\"orders\"} active={selectedTab==\"orders\"?true:false} action onClick={()=>changeTab(\"orders\")}>Order History</ListGroup.Item>\r\n                        <ListGroup.Item key={\"finance\"}  active={selectedTab==\"finance\"?true:false} action onClick={()=>changeTab(\"finance\")}>ITR Requests</ListGroup.Item>\r\n                        <ListGroup.Item key={\"form16\"}  active={selectedTab==\"form16\"?true:false} action onClick={()=>changeTab(\"form16\")}>Form16 Requests</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={9} className=\"p-4 production-col\" >\r\n                    <Loader show={isShowLoader}/>\r\n                    \r\n                    <CategoryManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <ProductManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <OrderHistory  selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <AddCategory changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <AddProduct changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <EditProduct changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <FinanceRequests changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <Form16Requests changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Home\r\n","import React,{useEffect,useState} from 'react'\r\nimport agent from '../../agent'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table, Nav, Pagination,Button,Modal } from 'react-bootstrap';\r\n\r\nfunction UserOrderHistory(props) {\r\n    useEffect(() => {\r\n        getOrders()\r\n  },[])\r\n  const [orderHistory, setorderHistory] = useState([])\r\n  const [selectedorder,setselectedorder] = useState([]);\r\n  const [isopenpopup, setisopenpopup] = useState(false)\r\n  const handleClose = () => setisopenpopup(false);\r\n\r\n  const viewOrderPopUp = (record)=>{\r\n      setselectedorder(record);\r\n      setisopenpopup(true);\r\n  }\r\n  let history = useHistory();\r\n  const getOrders =()=>{\r\n      props.showLoader(true);\r\n      agent.Order.getOrderHistoryByUserEmail().then((res=>{\r\n          props.showLoader(false);\r\n          console.log(res.body.record)\r\n\r\n          setorderHistory(res.body.record);\r\n      }),(err)=>{\r\n          console.log(err.response.body.message);\r\n          if(err.response.body.message ==\"jwt must be provided\"){\r\n              console.log(\"login required\");\r\n            history.push(\"/login\");\r\n          }\r\n          props.showLoader(false);\r\n\r\n      });\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <Table responsive>\r\n        <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Details</th>\r\n                <th>Number</th>\r\n                <th>Action</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {orderHistory.map((record,index)=>\r\n            <tr>\r\n                <td>{index+1}</td>\r\n                <td>{record.shipping.name}</td>\r\n                <td>{record.datePlaced}</td>\r\n                <td>{record.items.map(itm=><span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                <td>{record.shipping.phone}</td>\r\n\r\n                <td>\r\n                    <Button type=\"button\" onClick={()=>viewOrderPopUp(record)}>View</Button>\r\n                </td>\r\n            </tr>\r\n\r\n            )}\r\n        </tbody>\r\n    </Table>\r\n    <Modal show={isopenpopup} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Order Details</Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Shipping Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                            <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                            <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                            <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                    <tbody>{selectedorder?.items?.map(itm=><tr>\r\n                    <td><b>Title:</b> {itm.item.title}</td>\r\n                    <td><b>Description:</b> {itm.item.description}</td>\r\n                    <td><b>Quantity:</b> {itm.quantity}</td>\r\n                    <td><b>Total Price:</b> {parseInt(itm.quantity)*itm.perItemPrice}</td>\r\n                    </tr>)}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Table striped bordered hover responsive>\r\n                <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        {selectedorder.isDiscountApplied?<tr>\r\n                            <td>\r\n                                <b>\r\n                                Prime Member Discount:\r\n                                </b>\r\n                            </td>\r\n                            <td>10%</td>\r\n                        </tr>:\"\"}\r\n                        <tr>\r\n                            <td>\r\n                                <b>Total Bill Amount</b>\r\n                            </td>\r\n                            <td>{selectedorder.totalBillAmount}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Modal.Body>\r\n      </Modal>\r\n\r\n    </>\r\n)\r\n}\r\n\r\nexport default UserOrderHistory\r\n","import React,{useState} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n// import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../../layout/Loader';\r\nimport UserOrderHistory from '../UserOrderHistory';\r\nfunction UserAction(props) {\r\n\r\nconst [isShowLoader, setisShowLoader] = useState(false)\r\nconst showLoader =(value)=>{\r\n    setisShowLoader(value);\r\n}\r\nreturn (\r\n    <>\r\n    <Container fluid>\r\n        <Row>\r\n            <Col md={3} className=\"p-4\">\r\n                <ListGroup>\r\n                    {/* <ListGroup.Item  active action>Category Management</ListGroup.Item>\r\n                    <ListGroup.Item  action>Product Management</ListGroup.Item> */}\r\n                    <ListGroup.Item  action active>Order History</ListGroup.Item>\r\n                    {/* <ListGroup.Item  action>Finance</ListGroup.Item> */}\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={9} className=\"p-4 production-col\" >\r\n                <Loader show={isShowLoader}/>\r\n                {/* <CategoryManagement showLoader={showLoader}/> */}\r\n                <UserOrderHistory showLoader={showLoader}/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</>\r\n)\r\n\r\n}\r\nexport default UserAction\r\n","import React from 'react'\r\nimport { Alert, Button} from 'react-bootstrap';\r\nimport {useDispatch } from \"react-redux\";\r\nimport orderR from '../../reducers/order';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction OrderFailed() {\r\n    // const [show, setShow] = useState(true);\r\n    return (\r\n      <>\r\n        <Alert show={true} className=\"login-div\">\r\n          <Alert.Heading>Filed!</Alert.Heading>\r\n          <p>\r\nSomething went wrong to place order. Please try again.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n              <Link to=\"/placeOrder\">\r\n              <Button variant=\"danger\">\r\n              Ok\r\n            </Button>\r\n\r\n              </Link>\r\n          </div>\r\n        </Alert>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OrderFailed\r\n","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberGroupModel = {\r\n  getMemberGroups(){\r\n    return superagent.get(`${API_ROOT}/memberGroups/entry`)\r\n  },\r\n    \r\n    \r\n  }\r\n    export default {MemberGroupModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nfunction MemberGroup(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [memberGroupRecords,setMemberGroupsRecords]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        masterRecord.MemberGroupModel.getMemberGroups().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberGroupsRecords(res.body.message);\r\n            }else{\r\n                setMemberGroupsRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMemberGroup\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Member Group\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Group Code</th>\r\n                    <th>Name</th>\r\n                    <th>Remark</th>\r\n                    <th>Created At</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {memberGroupRecords.map((group,id)=>(<tr>\r\n                    <td>{group.group_code}</td>\r\n                    <td>{group.group_name}</td>\r\n                    <td>{group.remark}</td>\r\n                    <td>{group.created_at }</td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default MemberGroup;","import React from 'react';\r\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction AddMemberGroup(props) {\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n                <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n                    <Form>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n                            <Form.Text className=\"text-muted\">\r\n                                We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                            <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                </Container>\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default AddMemberGroup;","import React, { Component } from 'react'\r\nimport agent from '../../agent'\r\nimport Loader from '../layout/Loader';\r\nimport {  Card, Col, Row } from 'react-bootstrap';\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <div >\r\n            <Row xs={1} md={3} className=\"g-2\">\r\n                <Col>\r\n                    <Card\r\n                    bg={\"primary\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">100</h2></Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                            Received Amount(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card> \r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card\r\n                    bg={\"danger\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">10</h2> </Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                          Paid Amount(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>            \r\n                </Col>\r\n                <Col>\r\n                    <Card\r\n                    bg={\"success\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">90</h2> </Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                            Cash in hand(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>            \r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/home/Home'\r\nimport Registration from './components/users/Registration'\r\nimport Login from './components/users/Login'\r\nimport FillItr from './components/finance-Itr/FillItr'\r\nimport InnerLayout from './components/layout/InnerLayout'\r\nimport CategoryList from './components/food-order/CategoryList'\r\nimport MyCart from './components/food-order/MyCart'\r\nimport PlaceOrder from './components/food-order/PlaceOrder'\r\nimport OrderSuccess from './components/food-order/OrderSuccess'\r\nimport AdminHome from './components/Admin/Home';\r\nimport CategoryManagement from './components/Admin/CategoryManagement';\r\nimport AddCategory from './components/Admin/AddCategory';\r\nimport OrderHistory from './components/Admin/orders/OrderHistory';\r\nimport UserOrderHistory from './components/users/UserOrderHistory';\r\nimport UserAction from './components/users/user-actions/UserAction';\r\nimport ProductManagement from './components/Admin/products/ProductManagement';\r\nimport AddProduct from './components/Admin/products/AddProduct';\r\nimport EditProduct from './components/Admin/products/EditProduct';\r\nimport OrderFailed from './components/food-order/OrderFailed';\r\nimport FinanceRequests from './components/Admin/finance/FinanceRequests';\r\nimport Form16Requests from './components/Admin/finance/Form16Requests';\r\nimport InqueryForm from './components/home/InqueryForm';\r\nimport MemberGroup from  './components/masterRecord/memberGroup/MemberGroup';\r\nimport AddMemberGroup from  './components/masterRecord/memberGroup/AddMemberGroup';\r\n\r\nimport Dashboard from './components/dashboard/Dashboard';\r\n\r\nfunction Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n            <InnerLayout exact path=\"/\" component={Dashboard} />\r\n            <InnerLayout exact path=\"/memberGroup\" component={MemberGroup} />\r\n            <InnerLayout exact path=\"/addMemberGroup\" component={AddMemberGroup} />\r\n                <InnerLayout path=\"/login\" component={Login} />\r\n                <InnerLayout path=\"/registration\" component={Registration} />\r\n                <InnerLayout path=\"/fillItr\" component={FillItr} />\r\n                <InnerLayout path=\"/CategoryList\" component={CategoryList} />\r\n                <InnerLayout path=\"/myCart\" component={MyCart} />\r\n                <InnerLayout path=\"/placeOrder\" component={PlaceOrder} />\r\n                <InnerLayout path=\"/orderSuccess\" component={OrderSuccess} />\r\n                <InnerLayout path=\"/adminHome\" component={AdminHome} />\r\n                <InnerLayout path=\"/categoryManagement\" component={CategoryManagement} />\r\n                <InnerLayout path=\"/addCategory\" component={AddCategory} />\r\n                <InnerLayout path=\"/orderHistory\" component={OrderHistory} />\r\n                <InnerLayout path=\"/userOrderHistory\" component={UserOrderHistory} />\r\n                <InnerLayout path=\"/userAction\" component={UserAction} />\r\n                <InnerLayout path=\"/productManagement\" component={ProductManagement} />\r\n                <InnerLayout path=\"/addProduct\" component={AddProduct} />\r\n                <InnerLayout path=\"/editProduct\" component={EditProduct} />\r\n                <InnerLayout path=\"/orderFailed\" component={OrderFailed} />\r\n                <InnerLayout path=\"/financeRequests\" component={FinanceRequests} />\r\n                <InnerLayout path=\"/form16Requests\" component={Form16Requests} />\r\n                <InnerLayout path=\"/inqueryForm\" component={InqueryForm} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store} from './store';\r\n\r\nimport Routes from './Routes';\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div className=\"App\">\r\n      {/* <Header/> */}\r\n      <Routes/>\r\n    </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}