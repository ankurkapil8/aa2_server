{"version":3,"sources":["agent.js","constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/finance-Itr/ItrPopup.js","components/home/InqueryForm.js","components/layout/SectionMenu.js","components/layout/SectionOffers.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/layout/Header.js","components/food-order/TotalAmount.js","components/layout/Footer.js","components/home/Home.js","components/layout/ListErrors.js","components/users/Registration.js","components/users/Login.js","constants/paymantConstants.js","components/finance-Itr/FillItr.js","components/layout/InnerHeader.js","components/layout/InnerLayout.js","components/food-order/AddCartButton.js","components/layout/Loader.js","components/food-order/CategoryList.js","components/food-order/MyCart.js","components/food-order/PlaceOrder.js","components/food-order/OrderSuccess.js","components/Admin/CategoryManagement.js","components/Admin/orders/OrderHistory.js","components/Admin/AddCategory.js","components/Admin/products/ProductManagement.js","components/Admin/products/AddProduct.js","components/Admin/products/EditProduct.js","components/Admin/finance/FinanceRequests.js","components/Admin/finance/Form16Requests.js","components/Admin/users/UsersManagement.js","components/Admin/Home.js","components/users/UserOrderHistory.js","components/users/user-actions/UserAction.js","components/food-order/OrderFailed.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","responseBody","encodeURIComponent","res","errorBody","err","response","token","tokenPlugin","req","set","requests","url","get","use","then","body","post","Auth","login","email","password","register","userDetails","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","data","getCategoryAdmin","getOrdersHistoryAdmin","page","getOrderHistoryByUserEmail","addCategory","deleteCategory","del","editCategory","put","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","Inquery","submitInquery","User","getUserList","makeOrRemovePrimeMember","getToken","setToken","_token","REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","statusCode","undefined","isLoginSuccess","subtype","key","value","common","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","record","prod","rootReducer","promiseMiddleware","store","next","v","dispatch","currentView","getState","viewChangeCounter","skipTracking","currentState","promise","error","localStorageMiddleware","window","localStorage","setItem","jwtToken","agent","createStore","reducer","composeWithDevTools","applyMiddleware","ItrPopup","props","Modal","show","isopen","onHide","hide","centered","className","Header","closeButton","Title","Body","to","pathname","query","InqueryForm","useState","fullName","business","dob","Date","gender","service","Phone","setState","dobstate","setdobstate","isphoneinvalid","setisphoneinvalid","isnameinvalid","setisnameinvalid","message","setmessage","loading","setloading","handleChange","e","target","name","console","log","checkValidate","returnType","Alert","variant","onClose","dismissible","Form","onSubmit","ev","preventDefault","serviceType","reset","Row","Group","as","Col","controlId","Label","Control","onChange","isInvalid","Feedback","placeholder","selected","date","dateFormat","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","maxDate","defaultValue","readOnly","Button","disabled","SectionMenu","handleITRPopup","handleEnqueryForm","openEnqueryForm","onClick","this","src","process","alt","Component","LogedInView","currentUser","aactiveClassName","LogedOutView","useDispatch","history","useHistory","split","isAdmin","isPrimeMember","push","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","connect","TotalAmount","counter","useSelector","authState","setShow","priceTotal","reduce","prevValue","currentValue","parseInt","quantityTotal","handleClose","width","height","viewBox","class","fill","xmlns","fill-rule","d","sm","Footer","Home","ListErrors","Registration","submitForm","isLoading","isemailinvalid","ispasswordinvalid","phone","Text","React","Login","changeEmail","onChangeEmail","changePassword","onChangePassword","onUnload","required","KEY_ID","FillItr","setstate","setiisemailinvalid","isaadharinvalid","setiisaadharinvalid","form16","setform16","handlePay","orderForService","location","onlinePayment","str","replace","length","amount","options","updatePaymentState","rzp1","Razorpay","on","open","alert","status","obj","paymentObj","razorpay_order_id","paymentStatus","paymentResponse","metadata","order_id","handleSubmit","onFileUpload","paymentMode","formData","FormData","append","rows","File","Input","accept","files","InnerHeader","InnerLayout","component","rest","render","AddCartButton","initialAddItem","addItemInitial","increaseQuantity","decreaseQuantity","nextprops","arr","filter","Badge","Loader","Spinner","animation","role","CategoryList","getInitialData","a","showloader","all","categories","products","categoryList","itemList","changeCategory","catName","selectedTab","Container","fluid","md","ListGroup","defaultActiveKey","Item","active","index","CardColumns","Card","border","Img","imageUrl","title","Subtitle","description","MyCart","Table","responsive","striped","bordered","colSpan","PlaceOrder","shipingDetails","setShipingDetails","showPayementModel","setshowPayementModel","isaddressinvalid","setisaddressinvalid","totalQuantity","totalPrice","shippingObj","address","city","street","landmark","items","shipping","selectPaymentMode","forEach","element","borderless","OrderSuccess","Heading","CategoryManagement","heading","setalert","showLoader","getCategories","useEffect","useMemo","col1","col2","col3","columns","accessor","useTable","initialState","pageIndex","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","pageOptions","previousPage","pageSize","gotoPage","nextPage","canPreviousPage","setPageSize","canNextPage","changeTab","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","OrderHistory","getOrders","orderHistory","setorderHistory","selectedorder","setselectedorder","totalPage","settotalPage","isopenpopup","setisopenpopup","selectedPage","setselectedPage","number","Pagination","changePage","paginationBasic","totalOrders","datePlaced","itm","viewOrderPopUp","hover","isDiscountApplied","totalBillAmount","schema","Yup","AddCategory","isloading","validationSchema","fields","initialValues","values","handleBlur","touched","isValid","noValidate","ProductManagement","col4","col5","col6","category","col7","Image","thumbnail","editProduct","AddProduct","setcategory","EditProduct","storeProduct","FinanceRequests","ITRrequests","setITRrequests","getITRrequests","firstName","lastName","aadhar","zip","Form16Requests","form16requests","setform16requests","getForm16requests","filePathArr","filePath","UsersManagement","getUsers","UserDetails","ActionForMake","isShowLoader","setisShowLoader","setselectedTab","tab","UserOrderHistory","UserAction","OrderFailed","Routes","exact","path","AdminHome","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6303218.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\nimport _superagent from 'superagent';\n\nconst superagent = superagentPromise(_superagent, global.Promise);\n\nconst API_ROOT = '/api';\n\nconst encode = encodeURIComponent;\nconst responseBody = res => res;\nconst errorBody = err =>{\n  return err.response\n} ;\nlet token = null;\nconst tokenPlugin = req => {\n  if (token) {\n    req.set('Token', token);\n  }\n}\n\nconst requests = {\n  // del: url =>\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\n  get: url =>\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\n  // put: (url, body) =>\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\n  post: (url, body) =>\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\n};\n\nconst Auth = {\n  login: (email, password) =>\n    requests.post('/user/login',  { email, password } ),\n  register: (userDetails) =>\n    requests.post('/user/registration',  userDetails ),\n};\n\nconst Order = {\n  getProductsByCat:(catname)=>\n  requests.get(`/products?category=${catname}`),\n  getCatgoryInitialData:()=>{\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\n  },\n  placeOrder:(data)=>{\n    //requests.post(\"/orders/place-order\",data)\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\n  },\n  getCategoryAdmin(){\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\n  },\n  getOrdersHistoryAdmin(page){\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\n  },\n  getOrderHistoryByUserEmail(){\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\n  },\n  addCategory(data){\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\n  },\n  deleteCategory(data){\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\n  },\n  editCategory(data){\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\n  },\n  getProducts(){\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\n  },\n  deleteProduct(data){\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\n  },\n  addProducts(data){\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\n  },\n  editProducts(data){\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\n  }\n};\nconst Payment = {\n  getRazorpayOrderId(data){\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\n  },\n  updatePaymentStatus(data){\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\n  }\n};\nconst Finance = {\n  fillItr(data){\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\n  },\n  getAdminItr(){\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\n  },\n  uploadForm16(data){\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\n  },\n  getAdminForm16(){\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\n  },\n  downloadForm16(data){\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\n  }\n \n}\nconst Inquery = {\n  submitInquery(data){\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\n  }\n}\nconst User = {\n  getUserList(){\n    return superagent.get(`${API_ROOT}/user/userList`).use(tokenPlugin)\n  },\n  makeOrRemovePrimeMember(data){\n    return superagent.put(`${API_ROOT}/user/makeOrRemovePrimeMember`,data).use(tokenPlugin)\n \n  }\n}\nexport default {\n  Auth,\n  Order,\n  Payment,\n  Finance,\n  Inquery,\n  User,\n  getToken:()=>{return token},\n  setToken: _token => { token = _token; }\n};","\n  \nexport const APP_LOAD = 'APP_LOAD';\nexport const REDIRECT = 'REDIRECT';\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\nexport const SET_PAGE = 'SET_PAGE';\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\nexport const CHANGE_TAB = 'CHANGE_TAB';\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const REGISTER = 'REGISTER';\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\nexport const ASYNC_START = 'ASYNC_START';\nexport const ASYNC_END = 'ASYNC_END';\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\nexport const ADD_TAG = 'ADD_TAG';\nexport const REMOVE_TAG = 'REMOVE_TAG';\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\nexport const FOLLOW_USER = 'FOLLOW_USER';\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\nexport const RESET_ORDER = 'RESET_ORDER';\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';","import {\n    ADD_ITEM_INITIAL,\n    INCREASE_QUANTITY,\n    DECREASE_QUANTITY,\n    RESET_ORDER\n  } from '../constants/actionTypes';\n  const defaultState = {\n    addedItem: [],\n  };\n  \n  export default (state = defaultState, action) => {\n      switch (action.type) {\n        case ADD_ITEM_INITIAL:\n            const addedItem =[...state.addedItem,{\n                productId:action.item._id,\n                quantity:1,\n                perItemPrice:action.item.price,\n                item:action.item\n            }]\n            return {...state, addedItem};\n        case INCREASE_QUANTITY:\n             state.addedItem.map(record=>{\n                if(record.productId == action.productId){\n                    record.quantity +=1\n                }\n                return record;\n            });\n            return {...state,state}\n        case DECREASE_QUANTITY:\n            state.addedItem.map(record=>{\n                if(record.productId == action.productId && record.quantity !=0){\n                        record.quantity -=1\n                }\n                return record;\n            });\n            return {...state,state}\n        case RESET_ORDER:\n            state.addedItem = []\n            return {...state}\n        default:\n          return state;\n      }\n      return state;\n    };","import {\n    STORE_EDIT_PRODUCT,\n    GET_EDIT_PRODUCT,\n    UPDATE_PRODUCT_FIELD\n  } from '../constants/actionTypes';\n  const defaultState = {\n    product: {},\n  };\n  \n  export default (state = defaultState, action) => {\n      switch (action.type) {\n        case STORE_EDIT_PRODUCT:\n            return {...state,\n                product:action.data \n            };\n        case GET_EDIT_PRODUCT:\n            return {...state};\n        case UPDATE_PRODUCT_FIELD:\n            let prod = state.product;\n            prod[action.data.key]=action.data.value;\n           return {...state,product:prod}\n        default:\n          return state;\n      }\n      return state;\n    };","import auth from './reducers/auth';\nimport common from './reducers/common';\nimport order from './reducers/order';\nimport product from './reducers/product';\nimport { combineReducers } from 'redux';\n//import { routerReducer } from 'react-router-redux';\n\nconst appReducer = combineReducers({\n  auth,\n  common,\n  order,\n  product\n  /* your app’s top-level reducers */\n})\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'LOGOUT') {\n    state = undefined\n  }\n\n  return appReducer(state, action)\n}\nexport default rootReducer\n// export default combineReducers({\n//   auth,\n//   common,\n//   order,\n//     //router: routerReducer\n//   });","import {\n    LOGIN,\n    REGISTER,\n    LOGIN_PAGE_UNLOADED,\n    REGISTER_PAGE_UNLOADED,\n    ASYNC_START,\n    UPDATE_FIELD_AUTH,\n    LOGOUT\n  } from '../constants/actionTypes';\n  \n  export default (state = {}, action) => {\n  //console.log(action);\n    switch (action.type) {\n      case LOGIN:\n        return {\n          ...state,\n          inProgress: false,\n          errors: action.payload,\n          statusCode:action.payload != undefined?action.payload.statusCode:\"\",\n          isLoginSuccess:action.payload != undefined? (action.payload.statusCode == 200?true:false):false\n        }\n      case REGISTER:\n        return {\n          ...state,\n          inProgress: false,\n          errors: action.payload,\n          statusCode:action.payload.statusCode\n        };\n      case LOGIN_PAGE_UNLOADED:\n      return{\n        ...state,\n        //errors: action.payload,\n        //userDetails:\n      }\n      case REGISTER_PAGE_UNLOADED:\n        return {};\n      case ASYNC_START:\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\n          return { ...state, inProgress: true };\n        }\n        break;\n      case UPDATE_FIELD_AUTH:\n        return { ...state, [action.key]: action.value };\n      default:\n        return state;\n    }\n    return state;\n  };","import {\n    LOGOUT,\n    REDIRECT\n  } from '../constants/actionTypes';\n  const defaultState = {\n    appName: 'Conduit',\n    token: null,\n    viewChangeCounter: 0\n  };\n  \n  export default (state = {}, action) => {\n    //console.log(action);\n      switch (action.type) {\n        case REDIRECT:\n            return { ...state, redirectTo: null };\n        // case LOGOUT:\n        //     return { redirectTo: '/login', token: null, currentUser: null };\n        default:\n          return state;\n      }\n      return state;\n    };","import agent from './agent';\nimport {\n  ASYNC_START,\n  ASYNC_END,\n  LOGIN,\n  LOGOUT,\n  REGISTER\n} from './constants/actionTypes';\n\nconst promiseMiddleware = store => next => action => {\n  if (isPromise(action.payload)) {\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\n\n    const currentView = store.getState().viewChangeCounter;\n    const skipTracking = action.skipTracking;\n\n    action.payload.then(\n      res => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        action.payload = res;\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\n        store.dispatch(action);\n      },\n      error => {\n        const currentState = store.getState()\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\n          return\n        }\n        action.error = true;\n        action.payload = error.response.body;\n        if (!action.skipTracking) {\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\n        }\n        store.dispatch(action);\n      }\n    );\n\n    return;\n  }\n\n  next(action);\n};\n\nconst localStorageMiddleware = store => next => action => {\n  if (action.type === LOGIN && action.payload != undefined) {\n    if (action.payload.statusCode==200) {\n      window.localStorage.setItem('jwt', action.payload.body.jwtToken);\n      agent.setToken(action.payload.body.jwtToken);\n    }\n  } else if (action.type === LOGOUT) {\n    window.localStorage.setItem('jwt','');\n    agent.setToken(null);\n  }\n\n   next(action);\n};\n\nfunction isPromise(v) {\n  return v && typeof v.then === 'function';\n}\n\n\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\nimport reducer from './reducer';\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nconst getMiddleware = () => {\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\n  };\nexport const store = createStore(reducer,composeWithDevTools(getMiddleware()));","import React from 'react'\nimport { Modal, Button } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\n//import \"bootstrap/dist/css/bootstrap.css\";\n\nfunction ItrPopup(props) {\n    return (\n    <Modal show={props.isopen} onHide={props.hide} centered className=\"text-center\">\n            <Modal.Header closeButton>\n                <Modal.Title>Tax Return</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Link to={{ pathname: `/fillItr`, query:{type: 'fill'}}}  className=\"btn btn-danger btn-sm\">Start Your Tax Return</Link>\n                <Link to={{ pathname: `/fillItr`, query:{type: 'uploadForm16'}}} className=\"btn btn-danger btn-sm\">Upload Form-16 Now</Link>\n            </Modal.Body>\n        </Modal>\n        )\n}\n\nexport default ItrPopup\n","import React, { useState } from 'react'\nimport { Button, Form, Col, Row, Container, Modal,Alert } from 'react-bootstrap';\nimport agent from '../../agent'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction InqueryForm(props) {\n    const [state, setState] = useState(\n        {fullName:\"\",\n            email:\"\",\n            business:\"\",\n            dob:new Date(),\n            gender:\"\",\n            service:\"\",\n            Phone:\"\"\n        });\n    const [dobstate, setdobstate] = useState(new Date());\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\n    const [isnameinvalid,setisnameinvalid] = useState(false);\n    // const [isaddressinvalid,setisaddressinvalid] = useState(false);\n\n    const [message, setmessage] = useState({type:\"\",message:\"\"})\n    const [loading, setloading] = useState(false)\n\n    const handleChange = (e)=>{\n        state[e.target.name] = e.target.value;\n        setState(state);\n        console.log(state);\n    }\n    const handleSubmit = (ev)=>{\n        ev.preventDefault();\n\n        state[\"dob\"] = dobstate;\n        state[\"service\"] = props.serviceType;\n        setState(state);\n        console.log(state);\n        if(checkValidate()){\n            setloading(true);\n            agent.Inquery.submitInquery(state).then((res=>{\n                if(res.statusCode == 200){\n                    ev.target.reset();\n                    message.type = \"success\";\n                    message.message = \"Your Details has been submited. Our agent will contact you soon.\"\n                }else{\n                    message.type = \"error\";\n                    message.message = \"Something went wrong. Please try again.\"\n                }\n                setmessage(message);\n                setloading(false);\n    \n            }))\n        }\n    }\n    const checkValidate=()=>{\n        let returnType = true;\n        setisnameinvalid(false);\n        //setisaddressinvalid(false);\n        setisphoneinvalid(false);\n    \n        if((state[\"fullName\"] ==undefined || state[\"fullName\"] ==\"\")){\n            setisnameinvalid(true);            \n            returnType = false\n        } \n    \n        if(state[\"phone\"] ==undefined || state[\"phone\"] ==\"\"){\n            setisphoneinvalid(true);\n            returnType = false\n        }\n        // if((shipingDetails[\"address\"] ==undefined || shipingDetails[\"address\"] ==\"\") ){\n        //     setisaddressinvalid(true);            \n        //     returnType = false\n        // } \n        return returnType;\n    } \n        return (\n        <>\n\n        <Modal show={props.isopen} onHide={props.hide} >\n\n            <Modal.Header closeButton>\n                <Modal.Title>Enquiry</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {  message.type != \"\"? \n                message.type ==\"success\"?\n                <Alert key={message.type} variant={\"success\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\n                    {message.message}\n                </Alert>:<Alert key={message.type} variant={\"danger\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\n                    {message.message}\n                </Alert>:\"\"        \n                }\n\n                <Form onSubmit={handleSubmit}>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                            <Form.Label>Full Name*</Form.Label>\n                            <Form.Control onChange={handleChange} type=\"text\" name=\"fullName\" isInvalid={isnameinvalid}/>\n                            <Form.Control.Feedback type=\"invalid\">\n                            Please provide your name.\n                            </Form.Control.Feedback>                    \n                        </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" onChange={handleChange} name=\"email\" placeholder=\"xyz@abc.com\" />\n                        </Form.Group>\n\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\n                        <Form.Label>Business</Form.Label>\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"business\"/>\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\n                        <Form.Label>Date of Birth</Form.Label>\n                        <DatePicker\n                         selected={dobstate} \n                         onChange={date=>setdobstate(date)}\n                         dateFormat=\"dd/MM/yyyy\"\n                         showYearDropdown\n                         dateFormatCalendar=\"MMMM\"\n                         yearDropdownItemNumber={50}\n                         scrollableYearDropdown\n                         maxDate={new Date()}\n                         />\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                    <Form.Label>Gender</Form.Label>\n                    <Form.Control name=\"gender\" as=\"select\" onChange={handleChange} defaultValue=\"Choose...\">\n                        <option>Choose...</option>\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                    </Form.Control>\n                    </Form.Group>                        \n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                    <Form.Label>Service</Form.Label>\n                        <Form.Control onChange={handleChange} type=\"text\" name=\"service\" value={props.serviceType} readOnly/>\n                    </Form.Group>                        \n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\n                        <Form.Label>Phone*</Form.Label>\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"phone\" isInvalid={isphoneinvalid}/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide your phone no..\n                        </Form.Control.Feedback>                    \n                    </Form.Group>\n                    </Form.Row>\n\n                    <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n                    {loading ? 'Loading…' : \"Submit\"}\n\n                    </Button>\n                </Form>\n            </Modal.Body>\n        </Modal>\n        </>\n    )\n}\n\nexport default InqueryForm\n","import React, { Component} from 'react'\nimport ItrPopup from '../finance-Itr/ItrPopup'\nimport InqueryForm from '../home/InqueryForm'\nimport {Link} from 'react-router-dom';\n\n  class SectionMenu extends Component {\n    isopen = false;\n    constructor(props){\n      super(props);\n      this.state = {\n        isopen:false,\n        openEnqueryForm:false,\n        serviceType:\"\"\n      }\n    }\n    handleITRPopup = () =>{\n      this.setState({\n        isopen:this.state.isopen?false:true\n      })\n    }\n    handleEnqueryForm = (serviceType = \"\")=>{\n      console.log(serviceType);\n      this.setState({\n        openEnqueryForm:this.state.openEnqueryForm?false:true,\n        serviceType:serviceType\n      })\n\n    }\n    render() {\n        return (\n          <>\n            <section className=\"text-center \">\n            <div className=\"container\">\n              <div className=\"col-md-12 shadow-sm p-5 service \">\n                <div className=\"row roww\">\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={this.handleITRPopup}>\n                    <img src={process.env.PUBLIC_URL + '/assets/img/itr.png'} alt=\"\"/>\n                    <h5 className=\"my-4\">Fill ITR</h5>\n                  </div>\n                 \n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box \">\n                  <Link to=\"/CategoryList\">\n                    <img  src={process.env.PUBLIC_URL + '/assets/img/food.png'} alt=\"\"/>\n                    <h5 className=\"my-4\">FOOD</h5></Link>\n                  </div>\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" >\n\n                    <img src={process.env.PUBLIC_URL + '/assets/img/catering.png'} alt=\"\"/>\n                    <h5 className=\"my-4\">Catering</h5>\n                  </div>\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Balance Sheet\")}>\n\n                    <img src={process.env.PUBLIC_URL + '/assets/img/finance.png'} alt=\"\"/>\n                    <h5 className=\"my-4\">Financial Consultancy</h5>\n                  </div>\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Investment Planning\")}>\n\n                    <img src={process.env.PUBLIC_URL + '/assets/img/investment.png'} alt=\"\"/>\n                    <h5 className=\"my-4\">Investment Planning</h5>\n                  </div>\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"GST filing\")}>\n                    <img src={process.env.PUBLIC_URL + '/assets/img/gst.png'} alt=\"\"/>\n                    <h5 className=\"my-4\">GST Filing </h5>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n          <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\n          <InqueryForm isopen={this.state.openEnqueryForm} serviceType={this.state.serviceType} hide={this.handleEnqueryForm}/>         \n        </>\n        )\n    }\n}\nexport default SectionMenu\n","import React, { Component } from 'react'\n\nexport default class SectionOffers extends Component {\n    render() {\n        return (\n            <section className=\"text-center\">\n                <div className=\"container\">\n                    <h4 className=\"h4-responsive font-weight-bold my-3 text-primary\">Best Offers</h4>\n                    <div className=\"row my-5\">\n                        <div className=\"col-md-3\">\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-1.jpeg'} className=\"img-fluid radius\" alt=\"\" />\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 1</h5>\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 50% Off\n                            </p>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-2.jpg'} className=\"img-fluid radius\" alt=\"\" />\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 2</h5>\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 60% off\n                  </p>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-4.jpeg'} className=\"img-fluid radius\" alt=\"\" />\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 3</h5>\n                            <p className=\"grey-text mb-0 text-primary\">Up to 50% off\n                  </p>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-3.jpeg'} className=\"img-fluid radius\" alt=\"\" />\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 4</h5>\n                            <p className=\"grey-text mb-0 text-primary\">Standard EMI Options Available\n                  </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n","import React from 'react'\nimport { Route,NavLink } from 'react-router-dom'\n\nfunction LogedInView(props) {\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\n        return (\n\n        <li className=\"nav-item\">\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\n        </li>\n        )\n    }\n    return null;\n\n}\n\nexport default LogedInView\n","import React from 'react'\nimport { Route, NavLink } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport {useHistory} from 'react-router-dom';\n\nimport {\n    LOGOUT\n  } from '../../constants/actionTypes';\nfunction LogedOutView(props) {\n    const dispatch = useDispatch();\n    let history = useHistory();\n\n    const logout = ()=>{\n         dispatch({ type: LOGOUT })\n           console.log(\"hollo\");\n           history.push(\"/\");\n       }\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\n        let name = props.currentUser.email.split(\"@\");\n\n        return (<>\n            \n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\n            <li className=\"nav-item\">\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\n            </li>\n                \n            </li>:\"\"}            \n            <li className=\"nav-item\">\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\n                    {name[0]}\n\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \n\n                    \n                    </NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\n            </li>\n        </>\n        )\n    }\n    return null;\n}\n\nexport default LogedOutView\n","import React, { Component } from 'react'\nimport { Route,NavLink, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport LoggedInView from './LogedInView';\nimport LoggedOutView from './LogedOutView';\nimport ItrPopup from '../finance-Itr/ItrPopup'\nimport { Button, Form, Col, Row, Container, Modal,Alert } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Header extends Component {\n    isopen = false;\n    constructor(props){\n      super(props);\n      this.state = {\n        isopen:false\n      }\n    }\n    handleITRPopup = () =>{\n        this.setState({\n          isopen:this.state.isopen?false:true\n        })\n      }\n  \n    render(){\n\n    return (\n        <header>\n            <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar top-nav-collapse\">\n                <div className=\"container\">\n                    <NavLink className=\"navbar-brand\" to=\"/\"> <h2>KANBA</h2></NavLink>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item\">\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink>\n\n                            </li>\n                            <li className=\"nav-item\" onClick={this.handleITRPopup}>\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink activeClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\n                                \n                            </li>\n                            <LoggedOutView currentUser={this.props}/>\n                            <LoggedInView currentUser={this.props}/>\n\n                        </ul>\n\n                    </div>\n                </div>\n            </nav>\n            <div className=\"view\">\n                <div className=\"mask rgba-gradient d-flex justify-content-center align-items-center\">\n                    {/* <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 white-text text-center mx-auto  mb-5 wow fadeInLeft\" data-wow-delay=\"0.3s\">\n                                <h1 className=\"my-3 text-center mx-auto font-weight-bold wow fadeInLeft\">Services, on demand.</h1>\n\n                                <div className=\"ml-auto mr-auto main-search \">\n\n                                    <form action=\"\" className=\"search-service\">\n                                        <input className=\"search-form form-control form-control-lg\" type=\"text\" placeholder=\"Search Services\" />\n                                    </form>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\n        </header>\n    )}\n}\n\nconst mapStateToProps = state => ({ ...state.auth});\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React,{useState} from 'react'\nimport { Alert, Button, Row, Col, Container,Modal } from 'react-bootstrap';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { Route,NavLink, Redirect, Link } from 'react-router-dom'\nimport {\n  RESET_ORDER\n} from '../../constants/actionTypes';\n\nfunction TotalAmount(props) {\n  const counter = useSelector(state => state.order);\n  const authState = useSelector(state => state.auth);\n  const [show, setShow] = useState(false);\n\nconst handleShow = () => setShow(true);\n\n  const dispatch = useDispatch();\n  var priceTotal = counter.addedItem.reduce(\n    (prevValue, currentValue) => prevValue + (currentValue.quantity * parseInt(currentValue.perItemPrice)),\n    0\n  );\n  const quantityTotal = counter.addedItem.reduce(\n    (prevValue, currentValue) => prevValue + currentValue.quantity,\n    0\n  );\n  if(authState?.errors?.body?.record?.isPrimeMember){\n    priceTotal -= ((priceTotal*10)/100)\n}\nconst handleClose = (action) => {\n  if(action==\"yes\"){\n    dispatch({type:RESET_ORDER})\n  }\n  setShow(false)\n};\n\n  if (quantityTotal > 0) {\n    return (\n      <>\n      <div className=\"order-popup pb-1\">\n        <div className=\"text-right py-1\">\n          <svg onClick={handleShow} width=\"2em\" height=\"2em\" viewBox=\"0 0 16 16\" class=\"bi bi-x-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n            <path fill-rule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n          </svg>\n        </div>\n        <Row>\n          <Col sm={8} className=\"pl-5\"><Link to=\"/myCart\" className=\"underline\"><h4>Your Order ({quantityTotal})</h4></Link></Col>\n          <Col sm={4} className=\"d-flex justify-content-end\"> \n          <NavLink to=\"/placeOrder\">\n            <Button variant=\"danger\">\n            Continue\n            </Button>\n          </NavLink>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"pl-5\">\n            <h4><span>&#8377;</span>{priceTotal}</h4>\n          </Col>\n        </Row>\n      </div>\n      <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Alert</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Are you sure you want to remove the items from cart?</Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\n                        Yes\n                    </Button>\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\n                        Cancel\n                    </Button>\n                    </Modal.Footer>\n                </Modal> \n\n      </>\n    )\n  \n}else {\n  return null;\n}\n\n}\nexport default TotalAmount\n","import React from 'react'\nimport TotalAmount from '../food-order/TotalAmount'\nfunction Footer() {\n    return (\n      <>\n\n        <footer className=\"page-footer font-small stylish-color-dark pt-4\">\n        {/* <div className=\"container text-center text-md-left\">\n          <div className=\"row\">\n            <div className=\"col-md-4 mx-auto\">\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Footer Content</h5>\n              <p>Here you can use rows and columns to organize your footer content. Lorem ipsum dolor sit amet,\n                consectetur\n                adipisicing elit.</p>\n            </div>\n            <hr className=\"clearfix w-100 d-md-none\"/>\n            <div className=\"col-md-2 mx-auto\">\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\n              <ul className=\"list-unstyled\">\n                <li>\n                  <a href=\"#!\">Link 1</a>\n                </li>\n              </ul>\n            </div>    \n            <hr className=\"clearfix w-100 d-md-none\"/>\n            <div className=\"col-md-2 mx-auto\">\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\n              <ul className=\"list-unstyled\">\n                <li>\n                  <a href=\"#!\">Link 1</a>\n                </li>\n              </ul>\n            </div>\n            <hr className=\"clearfix w-100 d-md-none\"/>\n            <div className=\"col-md-2 mx-auto\">\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\n              <ul className=\"list-unstyled\">\n                <li>\n                  <a href=\"#!\">Link 1</a>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div> */}\n    \n        {/* <ul className=\"list-unstyled list-inline text-center py-2\">\n          <li className=\"list-inlin e-item\">\n            <h5 className=\"mb-1\">Register for free</h5>\n          </li>\n          <li className=\"list-inline-item\">\n            <a href=\"#!\" className=\"btn btn-danger btn-rounded\">Sign up!</a>\n          </li>\n        </ul> */}\n    \n        <hr/>\n    \n        <ul className=\"list-unstyled list-inline text-center\">\n          <li className=\"list-inline-item\">\n            <a className=\"btn-floating btn-fb mx-1\">\n              <i className=\"fab fa-facebook-f\"> </i>\n            </a>\n          </li>\n          <li className=\"list-inline-item\">\n            <a className=\"btn-floating btn-tw mx-1\">\n              <i className=\"fab fa-twitter\"> </i>\n            </a>\n          </li>\n          <li className=\"list-inline-item\">\n            <a className=\"btn-floating btn-gplus mx-1\">\n              <i className=\"fab fa-google-plus-g\"> </i>\n            </a>\n          </li>\n          <li className=\"list-inline-item\">\n            <a className=\"btn-floating btn-li mx-1\">\n              <i className=\"fab fa-linkedin-in\"> </i>\n            </a>\n          </li>\n          <li className=\"list-inline-item\">\n            <a className=\"btn-floating btn-dribbble mx-1\">\n              <i className=\"fab fa-dribbble\"> </i>\n            </a>\n          </li>\n        </ul>\n        <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\n        </div>\n        <TotalAmount/>\n      </footer>\n      </>\n        )\n}\n\nexport default Footer\n","import React from 'react'\nimport SectionMenu from '../layout/SectionMenu'\nimport SectionOffers from '../layout/SectionOffers'\nimport Header from '../layout/Header'\nimport Footer from '../layout/Footer'\nfunction Home() {\n    return (\n        <>\n            <Header />\n            <SectionMenu />\n            {/* <SectionOffers /> */}\n            <Footer />\n        </>\n    )\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\n\nexport default class ListErrors extends Component {\n    render() {\n        const errors = this.props.errors;\n        const statusCode = this.props.statusCode;\n        if (errors) {\n            return (\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\n                    {errors.body.message}\n              </Alert>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n","import React from 'react'\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\nimport agent from '../../agent'\nimport ListErrors from '../layout/ListErrors';\n\n\nclass Registration extends React.Component {    \n    constructor(props){\n        super(props)\n        this.state = {\n            userDetails: {},\n            errors:\"\",\n            statusCode:\"\",\n            isLoading:false,\n            isemailinvalid:false,\n            isphoneinvalid:false,\n            ispasswordinvalid:false\n        }\n    }\n    handleChange = (e) => {\n        const state = this.state.userDetails\n        state[e.target.name] = e.target.value;\n        this.setState({ userDetails: state });\n        \n    }\n    submitForm=() => ev =>{\n        ev.preventDefault();\n        if(this.checkValidate()){\n            this.setState({ isLoading: true });\n            agent.Auth.register(this.state.userDetails).then((res=>{\n                this.setState({ errors: res, statusCode:res.statusCode, isLoading:false});\n                if(res.statusCode == 200){\n                    ev.target.reset();\n                    //this.props.history.push('/login')\n                }\n            }));\n        }\n    }\n    checkValidate=()=>{\n        let returnType = true;\n        this.setState({isemailinvalid:false})\n        this.setState({isphoneinvalid:false})\n        this.setState({ispasswordinvalid:false})\n\n        if(this.state.userDetails?.email ==undefined || this.state.userDetails?.email ==\"\"){\n            this.setState({isemailinvalid:true})\n            returnType = false\n        }\n        if(this.state.userDetails?.phone ==undefined || this.state.userDetails?.phone ==\"\"){\n            this.setState({isphoneinvalid:true})\n            returnType = false\n        }\n        if(this.state.userDetails?.password ==undefined || this.state.userDetails?.password ==\"\"){\n            this.setState({ispasswordinvalid:true})\n            returnType = false\n        }\n        return returnType;\n    } \n\n    render() {\n    return (\n        <div className=\"login-div\">\n            <ListErrors errors={this.state.errors} statusCode={this.state.statusCode} />\n            <Form className=\"login-form\" onSubmit={this.submitForm()}>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formBasicEmail\" >\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  onChange={this.handleChange} isInvalid={this.state.isemailinvalid}/>\n                        <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                    </Form.Text>\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide your email.\n                    </Form.Control.Feedback>                    \n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formBasicEmail\">\n                        <Form.Label>Phone</Form.Label>\n                        <Form.Control type=\"phone\" name=\"phone\"  onChange={this.handleChange} isInvalid={this.state.isphoneinvalid}/>\n                        <Form.Text className=\"text-muted\">\n                            We'll never share your phone no with anyone else.\n                    </Form.Text>\n                    <Form.Control.Feedback type=\"invalid\">\n                        Please provide your phone number.\n                    </Form.Control.Feedback>                    \n\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col}  controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\"  onChange={this.handleChange} isInvalid={this.state.ispasswordinvalid}/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide your password.\n                        </Form.Control.Feedback>                    \n                    </Form.Group>\n\n                </Form.Row>\n                <Form.Row>\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.state.isLoading}>\n                        \n                        {this.state.isLoading ? 'Loading…' : \"Register\"}\n                    </Button>\n                </Form.Row>\n\n            </Form>\n        </div>\n\n    )}\n}\n\nexport default Registration\n","import React, { Component}  from 'react'\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport agent from '../../agent'\nimport ListErrors from '../layout/ListErrors';\n\nimport {\n    UPDATE_FIELD_AUTH,\n    LOGIN,\n    LOGIN_PAGE_UNLOADED\n} from '../../constants/actionTypes';\n\nclass Login extends Component {\n   // let history = useHistory();\n\n    constructor(props) {\n        super(props);\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\n        this.submitForm = (email, password) => ev => {\n            ev.preventDefault();\n            this.props.onSubmit(email, password);\n        };\n    }\n    componentDidUpdate(){\n        if(this.props.isLoginSuccess){\n            this.props.history.push('/')\n        }\n        \n    }\n    \n    componentWillUnmount() {\n        this.props.onUnload();\n      }\n    render() {\n        const email = this.props.email;\n        const password = this.props.password;\n        return (\n            <>\n            <div className=\"login-div\">\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\n                <Form className=\"login-form\" onSubmit={this.submitForm(email, password)}>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={this.changeEmail} required/>\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your email with anyone else.\n                    </Form.Text>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={password}  onChange={this.changePassword} required/>\n                        </Form.Group>\n\n                    </Form.Row>\n                    <Form.Row>\n                        <Button variant=\"primary\" disabled={this.props.inProgress} type=\"submit\">{this.props.inProgress ? 'Loading…' : \"Login\"}\n                            \n                    </Button>\n                    </Form.Row>\n                    <Form.Row>\n                        <Link as={Col} to=\"/registration\" > SignUp</Link>\n                    </Form.Row>\n\n                </Form>\n            </div>\n            </>\n        )\n    }\n}\nconst mapStateToProps = state => ({ ...state.auth });\nconst mapDispatchToProps = dispatch => ({\n    onChangeEmail: value =>\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'email', value }),\n    onChangePassword: value =>\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\n    onSubmit: (email, password) =>\n        dispatch({ type: LOGIN, payload: agent.Auth.login(email, password) }),\n    onUnload: () =>\n        dispatch({ type: LOGIN_PAGE_UNLOADED })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","export const KEY_ID = 'rzp_live_3a3U9A6ckVRlMo';\nexport const KEY_SECRET = '5MdILgcDVa5GVM7UCvMV7frj';\n\n","import React,{useState} from 'react'\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';\nimport './Finance.css';\nimport agent from '../../agent'\nimport {KEY_ID,KEY_SECRET} from '../../constants/paymantConstants'\n\nfunction FillItr(props) {\n    const [state, setstate] = useState({});\n    const [loading, setloading] = useState(false);\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\n    const [isemailinvalid,setiisemailinvalid] = useState(false);\n    const [isaadharinvalid,setiisaadharinvalid] = useState(false);\n    const [form16, setform16] = useState([]);\n    console.log(props);\n    const handleChange = (e) => {\n        state[e.target.name] = e.target.value;\n        setstate(state);\n    }\n\n    const handlePay=()=>{\n        setloading(true);\n        if(checkValidate()){\n            console.log(\"Valid Form\");\n            let orderForService = \"Form16\";\n            if(props.location.query?.type == \"fill\"){\n                orderForService = \"ITR\"\n            }\n            onlinePayment(orderForService);\n        }else{\n            console.log(\"invalid from\")\n            setloading(false);\n\n        }\n    } \n\n    const checkValidate=()=>{\n        let returnType = true;\n        setisphoneinvalid(false);\n        setiisemailinvalid(false);            \n        setiisaadharinvalid(false);\n\n        if(state[\"phone\"] ==undefined || state[\"phone\"] ==\"\"){\n            setisphoneinvalid(true);\n            returnType = false\n        }\n        if((state[\"email\"] ==undefined || state[\"email\"] ==\"\") && props.location.query?.type == \"fill\" ){\n            setiisemailinvalid(true);            \n            returnType = false\n        } \n        if((state[\"aadhar\"] ==undefined || state[\"aadhar\"] ==\"\") && props.location.query?.type == \"fill\"){\n            setiisaadharinvalid(\"Please provide aadhar number.\");\n            returnType = false\n        }\n        if((state[\"aadhar\"] !=undefined && state[\"aadhar\"] !=\"\") && props.location.query?.type == \"fill\"){\n            let str = state[\"aadhar\"];\n            str = str.replace(/\\s+/g, '');\n            if(str.length!=12){\n                setiisaadharinvalid(\"Aadhar card should be 12 digit long.\");\n                returnType = false\n            }\n        } \n        return returnType;\n    } \n\n    const onlinePayment = (orderForService = \"ITR\")=>{\n        let amount = 300;\n        agent.Payment.getRazorpayOrderId({amount:amount,orderForService:orderForService}).then((res=>{\n            if(res.statusCode == 200){\n                console.log(res);\n                var options = {\n                    \"key\": KEY_ID, // Enter the Key ID generated from the Dashboard\n                    \"amount\": amount*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n                    \"currency\": \"INR\",\n                    \"name\": \"Guest\",\n                    \"description\": \"ITR Fill Transaction\",\n                    \"image\": \"https://example.com/your_logo\",\n                    \"order_id\": res.body.record.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n                    \"handler\": function (response){\n                        updatePaymentState(\"success\",response);\n                    },                \n                    \"theme\": {\n                        \"color\": \"#3399cc\"\n                    }\n                };   \n                // console.log(options); \n                const rzp1 = new window.Razorpay(options);\n                rzp1.on('payment.failed', function (response){\n                    updatePaymentState(\"failed\",response);\n    \n                });            \n                rzp1.open();\n    \n            }else{\n                setloading(false);\n\n                alert(res.body)\n\n            }\n        }));\n    \n    }\n    const updatePaymentState=(status,obj)=>{\n        let orderId = \"\";\n        let paymentObj = {\n            razorpay_order_id:\"\",\n            paymentStatus:\"\",\n            paymentResponse:\"\"\n        }\n        if(status == \"success\"){\n            paymentObj.razorpay_order_id = obj.razorpay_order_id;\n            paymentObj.paymentStatus = status;\n            paymentObj.paymentResponse = obj;\n        }\n        if(status == \"failed\"){\n            paymentObj.razorpay_order_id = obj.error.metadata.order_id;\n            paymentObj.paymentStatus = status;\n            paymentObj.paymentResponse = obj;\n        }\n        try{\n            agent.Payment.updatePaymentStatus(paymentObj).then((res=>{\n                if(res.statusCode ==200 && status == \"success\"){\n                    if(props.location.query?.type == \"fill\"){\n                        handleSubmit(paymentObj.razorpay_order_id);\n                    }else{\n                        onFileUpload(paymentObj.razorpay_order_id);\n                    }\n                }\n                if(res.statusCode ==200 && status == \"failed\"){\n                    setloading(false);\n                    props.history.push('/orderFailed')\n    \n                }\n    \n            }),(err)=>{\n                console.log(err.response.body.message);\n            });\n        }catch(err){\n            alert(err);\n        }\n    }\n    const handleSubmit = ( razorpay_order_id, paymentMode=\"online\") =>{\n        state[\"razorpay_order_id\"] = razorpay_order_id;\n        state[\"paymentMode\"] = paymentMode;\n        setstate(state);\n        agent.Finance.fillItr(state).then((res=>{\n            setloading(false);\n            if(res.statusCode ==200){\n                props.history.push('/orderSuccess');\n            }\n        }),(err)=>{\n            console.log(err.response.body.message);\n        });\n    } \n    const handleFileUpload = (e)=>{\n        setform16(e.target.files[0]);   \n    }\n    const onFileUpload=(razorpay_order_id)=>{\n        const formData = new FormData(); \n        formData.append( \n          \"myFile\", \n          form16, \n          form16.name\n        ); \n        formData.append(\"razorpay_order_id\",razorpay_order_id);        \n        formData.append(\"phone\",state[\"phone\"]);        \n        agent.Finance.uploadForm16(formData).then((res=>{\n            setloading(false);\n            if(res.statusCode ==200){\n                props.history.push('/orderSuccess');\n            }\n        }),(err)=>{\n            console.log(err.response.body.message);\n        });   \n\n    }\n    if(props.location.query?.type == \"fill\"){\n        return (\n            <>\n            <h4 className=\"py-5 text-center\"><b>Fill ITR</b></h4>\n            <Form className=\"m-5\">\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\n                        <Form.Label variant=\"primary\">First name</Form.Label>\n                        <Form.Control name=\"firstName\" onChange={handleChange}  type=\"text\"  />\n                    </Form.Group>\n    \n                    <Form.Group as={Col} controlId=\"formGridlastName\">\n                        <Form.Label>Last name</Form.Label>\n                        <Form.Control name=\"lastName\" onChange={handleChange} type=\"text\"  />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\n                        <Form.Label variant=\"primary\">Phone*</Form.Label>\n                        <Form.Control name=\"phone\" onChange={handleChange}  type=\"text\"  isInvalid={isphoneinvalid}/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide a phone number.\n                        </Form.Control.Feedback>                    \n                    </Form.Group>\n                </Form.Row>\n    \n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridBusiness\">\n                        <Form.Label>Business Name</Form.Label>\n                        <Form.Control name=\"business\" onChange={handleChange} type=\"text\" placeholder=\"ABC limited\" />\n                    </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                    <Form.Group  as={Col} controlId=\"formGridEmail\">\n                        <Form.Label>Email*</Form.Label>\n                        <Form.Control name=\"email\" onChange={handleChange} type=\"email\" placeholder=\"you@example.com\" isInvalid={isemailinvalid}/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide a Email.\n                        </Form.Control.Feedback>                    \n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridAadhar\">\n                        <Form.Label>Address</Form.Label>\n                        <Form.Control name=\"address\" onChange={handleChange} as=\"textarea\" rows={3} />\n                    </Form.Group>\n                    </Form.Row><Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridAadhar\">\n                        <Form.Label>Aadhar Number*</Form.Label>\n                        <Form.Control name=\"aadhar\" onChange={handleChange} type=\"text\" isInvalid={isaadharinvalid}/>\n                        <Form.Control.Feedback type=\"invalid\">\n                            {isaadharinvalid}\n                        </Form.Control.Feedback>                    \n    \n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>Service</Form.Label>\n                        <Form.Control name=\"service\" onChange={handleChange} as=\"select\" defaultValue=\"Choose...\">\n                            <option>Choose...</option>\n                            <option>Balance Sheet</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridAddress\">\n                        <Form.Label>PAN Number</Form.Label>\n                        <Form.Control name=\"pan\" onChange={handleChange} type=\"text\" />\n                    </Form.Group>\n    \n    \n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                        <Form.Label>Zip</Form.Label>\n                        <Form.Control type=\"text\" onChange={handleChange} name=\"zip\"/>\n                    </Form.Group>\n                </Form.Row>\n                <Button variant=\"danger\" className=\"center\" type=\"button\" onClick={handlePay} disabled={loading}>\n                    {loading ? 'Loading…' : \"Pay Now\"}\n                </Button>\n            </Form>\n            </>\n            )\n    \n    }else{\n        return (  <div className=\"login-div\">\n                <Form className=\"login-form\">\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\n                        <Form.Label variant=\"primary\">Phone*</Form.Label>\n                        <Form.Control name=\"phone\" onChange={handleChange}  type=\"text\"  isInvalid={isphoneinvalid}/>\n                        <Form.Text className=\"text-muted\">\n                            We will contact you at this phone number.\n                        </Form.Text>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide a phone number.\n                        </Form.Control.Feedback>                    \n                    </Form.Group>\n                </Form.Row>\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\n                        <Form.File id=\"formcheck-api-regular\">\n                        <Form.Label variant=\"primary\">Form16*</Form.Label>\n                            <Form.File.Input accept=\".pdf\" onChange={handleFileUpload}/>\n                        </Form.File>\n                        <Form.Text className=\"text-muted\">\n                            Only PDF file.\n                        </Form.Text>\n                        </Form.Group>\n                    </Form.Row>\n                    <Form.Row>\n                        <Button variant=\"danger\"  type=\"button\" onClick={handlePay} disabled={loading}>{loading ? 'Loading…' : \"Pay Now\"}\n                    </Button>\n                    </Form.Row>\n                </Form>\n                </div>\n    )\n    }       \n}\n\nexport default FillItr\n","import React, { Component } from 'react'\nimport { Route,NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport LoggedInView from './LogedInView';\nimport LoggedOutView from './LogedOutView';\nimport ItrPopup from '../finance-Itr/ItrPopup'\n\nclass InnerHeader extends Component {\n    isopen = false;\n    constructor(props){\n      super(props);\n      this.state = {\n        isopen:false\n      }\n    }\n    handleITRPopup = () =>{\n        this.setState({\n          isopen:this.state.isopen?false:true\n        })\n      }\n    render(){\n    return (\n        <header>\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\n                <div className=\"container\">\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>KANBA</h2></NavLink>\n\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\n                        <ul className=\"navbar-nav ml-auto\">\n                            <li className=\"nav-item\">\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink>\n\n                                {/* <a className=\"nav-link\" href=\"#\">Home\n                    <span className=\"sr-only\">(current)</span>\n                                </a> */}\n                            </li>\n                            <li className=\"nav-item\" onClick={this.handleITRPopup}>\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\n                            </li>\n                            <li className=\"nav-item\">\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\n                                <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\n                            </li>\n                            {/* <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\n\n                            </li> */}\n                            <LoggedOutView currentUser={this.props}/>\n                            <LoggedInView currentUser={this.props}/>\n\n                        </ul>\n\n                    </div>\n                </div>\n            </nav>\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\n        </header>\n    )}\n\n}\nconst mapStateToProps = state => ({ ...state.auth});\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport InnerHeader from './InnerHeader';\nimport Footer from './Footer';\n\nconst InnerLayout = ({ component: Component, ...rest }) => {\n    return (\n        <Route {...rest} render={props => (\n            <>\n            <InnerHeader/>\n                <Component {...props} />\n            <Footer/>\n            </>\n        )} />)\n}\n\nexport default InnerLayout\n","import React ,{Component}from 'react'\nimport { Badge } from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport {\n    ADD_ITEM_INITIAL,\n    DECREASE_QUANTITY,\n    INCREASE_QUANTITY\n} from '../../constants/actionTypes';\n \nclass AddCartButton extends Component {\n    constructor(props){\n        super(props)\n        console.log(props);\n        this.initialAddItem = (item) => ev => {\n            ev.preventDefault();\n            this.props.addItemInitial(item);\n        };\n        this.increaseQuantity = (productId) =>ev =>{\n            ev.preventDefault();\n            this.props.increaseQuantity(productId);\n        }\n        this.decreaseQuantity = (productId) =>ev =>{\n            ev.preventDefault();\n            this.props.decreaseQuantity(productId);\n        }\n    }\n    componentWillReceiveProps(nextprops){\n    }\n    render(){\n    let arr = []\n     arr= this.props.addedItem.filter(record=>record.productId==this.props.item._id);\n    let length = arr.length;\n    console.log(length);\n    console.log(this.props.addedItem);\n    if(!length){\n        return (\n            <Badge variant=\"danger\" className=\"pointer\" onClick={this.initialAddItem(this.props.item)}>ADD+</Badge> \n        )\n    }else{\n        return (\n            <>\n                <Badge className=\"pointer\" variant=\"primary\" onClick={this.decreaseQuantity(arr[0].productId)}>-</Badge> \n                <Badge variant=\"danger\">{arr[0].quantity}</Badge> \n                <Badge className=\"pointer\" variant=\"primary\" onClick={this.increaseQuantity(arr[0].productId)}>+</Badge> \n            </>\n        )}\n    }\n}\n\nconst mapStateToProps = state => ({ ...state.order });\nconst mapDispatchToProps = dispatch => ({\n    addItemInitial: item =>\n        dispatch({ type: ADD_ITEM_INITIAL, item }),\n    increaseQuantity: productId =>\n        dispatch({ type: INCREASE_QUANTITY, productId }),\n    decreaseQuantity: productId =>\n        dispatch({ type: DECREASE_QUANTITY, productId }),\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(AddCartButton)\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap';\n\nfunction Loader(props) {\n    if(props.show){\n        return (\n            <Spinner animation=\"border\" role=\"status\" className=\"loader\">\n            </Spinner>\n        )\n    }else{\n        return null\n    }\n}\n\nexport default Loader\n","import React, { Component } from 'react'\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\nimport agent from '../../agent'\nimport AddCartButton from './AddCartButton';\nimport Loader from '../layout/Loader';\nexport class CategoryList extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            categoryList:[],\n            itemList:[],\n            showloader:false,\n            selectedTab:\"\"\n        }\n    }\n    componentDidMount(){\n     // this.getCategories();\n     this.getInitialData();\n    }\n    selectItem(ev){\n        console.log(ev);\n    }\n     getInitialData=async ()=>{\n        this.setState({\n            showloader:true\n        })\n\n        const [categories, products] =await Promise.all(agent.Order.getCatgoryInitialData())\n        if(categories.statusCode == 200){\n            this.setState({\n                categoryList:categories.body.record\n            })\n        }\n        if(products.statusCode == 200){\n            this.setState({\n                itemList:products.body.record\n            })\n        }\n        this.setState({\n            showloader:false\n        })\n\n\n    }\n    changeCategory= (catName=\"\") => ev =>{\n        this.setState({\n            showloader:true\n        })\n        this.setState({\n            selectedTab:catName\n        })\n        agent.Order.getProductsByCat(catName).then(products=>{\n            this.setState({\n                showloader:false\n            })\n    \n            if(products.statusCode == 200){\n                this.setState({\n                    itemList:products.body.record\n                })\n            }\n    \n        })\n    }\n    render() {\n        return (\n            <>\n\n                <Container fluid>\n                    <Row>\n                        <Col  md={3} className=\"p-4\" >\n                            <ListGroup defaultActiveKey=\"all\">\n                            <ListGroup.Item className=\"mobile-list\" key={\"all\"} active={this.state.selectedTab==\"\"?true:false}  onClick={this.changeCategory()}>All category</ListGroup.Item>\n                                {this.state.categoryList.map(\n                                    (item,index)=><ListGroup.Item className=\"mobile-list\" key={index} active={this.state.selectedTab==item.name?true:false}  action onClick={this.changeCategory(item.name)}>{item.name}</ListGroup.Item>\n                                    )}\n                            </ListGroup>\n                        </Col>\n                        <Col md={9} className=\"p-4 production-col\" >\n                        <Loader show={this.state.showloader}/>\n                            <CardColumns>\n                            {this.state.itemList.map(\n                                (item,index)=> \n                                <Card border=\"danger\" key={index}>\n                                    <Card.Img variant=\"top\" src={item.imageUrl} />\n                                    <Card.Body>\n                                        <Card.Title>{item.title}</Card.Title>\n                                        <Card.Subtitle className=\"mb-2 text-muted\"><span>&#8377;</span>{item.price}</Card.Subtitle>\n                                        <Card.Text>\n                                        {item.description}\n                                        </Card.Text>\n                                    </Card.Body>\n                                    <Card.Footer>\n                                        <AddCartButton  item={item}/>\n                                    </Card.Footer>\n                                </Card>\n                                    )}\n\n                            </CardColumns>\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n}\n\nexport default CategoryList\n","import React, {Component} from 'react'\nimport { Table } from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport AddCartButton from './AddCartButton'\nclass MyCart extends Component {\n    constructor(props){\n        super(props);\n    }\n    render(){\n        const priceTotal = this.props.addedItem.reduce(\n            (prevValue, currentValue) => prevValue + (currentValue.quantity * parseInt(currentValue.perItemPrice)),\n            0\n          );\n        \n        return (\n            <Table responsive striped bordered className=\"cart-table\">\n                <thead>\n                    <tr>\n                        <th>Product</th>\n                        <th>Quantity</th>\n                        <th>Price</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.addedItem.map(record=>\n                    <tr>\n                        <td>{record.item.title}</td>\n                        <td><AddCartButton  item={record.item}/></td>\n                        <td><span>&#8377;</span>{parseInt(record.perItemPrice)*record.quantity}</td>\n                    </tr>\n                    \n                    )}\n                </tbody>\n                <tfoot>\n                    {/* <tr>\n                        <td colSpan=\"2\">\n                            Prime member discount\n                        </td>\n                        <td>\n                            10%\n                        </td>\n    \n                    </tr> */}\n                    <tr>\n                        <td colSpan=\"2\">\n                            <h5>Total</h5>\n                        </td>\n                        <td>\n                        <span>&#8377;</span> {priceTotal}\n                        </td>\n    \n                    </tr>\n                </tfoot>\n            </Table>)\n    \n    }\n}\n\nconst mapStateToProps = state => ({ ...state.order });\nconst mapDispatchToProps = dispatch => ({\n    // addItemInitial: item =>\n    //     dispatch({ type: ADD_ITEM_INITIAL, item }),\n    // increaseQuantity: productId =>\n    //     dispatch({ type: INCREASE_QUANTITY, productId }),\n    // decreaseQuantity: productId =>\n    //     dispatch({ type: DECREASE_QUANTITY, productId }),\n});\nexport default connect(mapStateToProps,mapDispatchToProps)(MyCart)\n","import React,{useState} from 'react'\nimport { Table, Container, Row, Col,Form, Button, Modal} from 'react-bootstrap';\nimport { useSelector } from \"react-redux\";\nimport {Link} from 'react-router-dom';\nimport agent from '../../agent'\nimport {KEY_ID,KEY_SECRET} from '../../constants/paymantConstants'\n//import Razorpay from 'razorpay';\nfunction PlaceOrder(props) {\n    const order = useSelector(state => state.order);\n    const authState = useSelector(state => state.auth);\n    const [shipingDetails, setShipingDetails] = useState([]);\n    const [showPayementModel, setshowPayementModel] = useState(false);\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\n    const [isnameinvalid,setisnameinvalid] = useState(false);\n    const [isaddressinvalid,setisaddressinvalid] = useState(false);\n\n    let totalQuantity = 0;\n    let totalPrice = 0;\n\n    const products = order.addedItem.map(record=>                        \n    <tr>\n        <td>\n        {record.quantity} x {record.item.title}\n        </td>\n        <td>\n        <span>&#8377;</span> {record.quantity*parseInt(record. perItemPrice)}\n        </td>\n    </tr>\n);\nconst handleSubmit=(paymentMode=\"COD\", razorpay_order_id=\"\")=>{\n    let shippingObj = {\n        name:shipingDetails[\"name\"],\n        address:shipingDetails[\"address\"],\n        phone:shipingDetails[\"phone\"],\n        city:\"barh\",\n        street:shipingDetails[\"street\"],\n        landmark:shipingDetails[\"landmark\"]\n    } \n    let data = {\n        items:order.addedItem, \n        shipping:shippingObj,\n        paymentMode:paymentMode,\n        razorpay_order_id:razorpay_order_id\n    };\n    agent.Order.placeOrder(data).then((res=>{\n        if(res.statusCode == 200){\n            props.history.push('/orderSuccess')\n        }\n    }),(err)=>{\n        alert(err.response.body.message);\n    });\n\n}\nconst selectPaymentMode = ()=>{\n    if(checkValidate()){\n        setshowPayementModel(showPayementModel?false:true);\n    }\n}\nconst handleChange = (e) => {\n    shipingDetails[e.target.name] = e.target.value;\n    setShipingDetails(shipingDetails);\n}\n\norder.addedItem.forEach(element => {\n    totalQuantity += element.quantity;\n    totalPrice += parseInt(element.quantity)*element.perItemPrice;\n});\nif(authState?.errors?.body.record.isPrimeMember){\n    totalPrice -= ((totalPrice*10)/100)\n}\nconst onlinePayment = ()=>{\n    agent.Payment.getRazorpayOrderId({amount:totalPrice,orderForService:\"Food Order\"}).then((res=>{\n        if(res.statusCode == 200){\n            console.log(res);\n            var options = {\n                \"key\": KEY_ID, // Enter the Key ID generated from the Dashboard\n                \"amount\": res.body.record.amount*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n                \"currency\": \"INR\",\n                \"name\": \"Guest\",\n                \"description\": \"Food Order Transaction\",\n                \"image\": \"https://example.com/your_logo\",\n                \"order_id\": res.body.record.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n                \"handler\": function (response){\n                    updatePaymentState(\"success\",response);\n                },                \n                \"theme\": {\n                    \"color\": \"#3399cc\"\n                }\n            };   \n            const rzp1 = new window.Razorpay(options);\n            rzp1.on('payment.failed', function (response){\n                updatePaymentState(\"failed\",response);\n\n            });            \n            rzp1.open();\n\n        }else{\n            alert(res.body)\n        }\n    }));\n\n}\nconst updatePaymentState=(status,obj)=>{\n    console.log(\"status\",status);\n    console.log(\"returnobj\",obj);\n    let orderId = \"\";\n    let paymentObj = {\n        razorpay_order_id:\"\",\n        paymentStatus:\"\",\n        paymentResponse:\"\"\n    }\n    if(status == \"success\"){\n        paymentObj.razorpay_order_id = obj.razorpay_order_id;\n        paymentObj.paymentStatus = status;\n        paymentObj.paymentResponse = obj;\n    }\n    if(status == \"failed\"){\n        paymentObj.razorpay_order_id = obj.error.metadata.order_id;\n        paymentObj.paymentStatus = status;\n        paymentObj.paymentResponse = obj;\n    }\n    try{\n        agent.Payment.updatePaymentStatus(paymentObj).then((res=>{\n            console.log(res.body.record)\n            if(res.statusCode ==200 && status == \"success\"){\n                handleSubmit(\"online\",paymentObj.razorpay_order_id);\n            }\n            if(res.statusCode ==200 && status == \"failed\"){\n                props.history.push('/orderFailed')\n\n            }\n\n        }),(err)=>{\n            console.log(err.response.body.message);\n        });\n    }catch(err){\n        alert(err);\n    }\n}\nconst checkValidate=()=>{\n    let returnType = true;\n    setisnameinvalid(false);\n    setisaddressinvalid(false);\n    setisphoneinvalid(false);\n\n    if((shipingDetails[\"name\"] ==undefined || shipingDetails[\"name\"] ==\"\")){\n        setisnameinvalid(true);            \n        returnType = false\n    } \n\n    if(shipingDetails[\"phone\"] ==undefined || shipingDetails[\"phone\"] ==\"\"){\n        setisphoneinvalid(true);\n        returnType = false\n    }\n    if((shipingDetails[\"address\"] ==undefined || shipingDetails[\"address\"] ==\"\") ){\n        setisaddressinvalid(true);            \n        returnType = false\n    } \n    return returnType;\n} \n\nconst token = agent.getToken();\n    return (\n        <>\n        <Container fluid>\n            <Row className=\"p-3 order-summary\">\n                <Col md={6} >\n                    <h4>Shipping Details</h4>\n                    <Form>\n                        <Form.Group controlId=\"exampleForm.ControlInput1\" >\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"text\" name=\"name\"  onChange={handleChange} isInvalid={isnameinvalid}/>\n                            <Form.Control.Feedback type=\"invalid\">\n                            Please provide your name.\n                            </Form.Control.Feedback>                    \n\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Address</Form.Label>\n                            <Form.Control type=\"textarea\" name=\"address\" placeholder=\"Line 1\" onChange={handleChange} isInvalid={isaddressinvalid}/>\n                            <Form.Control.Feedback type=\"invalid\">\n                            Please provide your address.\n                            </Form.Control.Feedback>                    \n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Street/Mohalla</Form.Label>\n                            <Form.Control type=\"textarea\" name=\"street\" onChange={handleChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Landmark</Form.Label>\n                            <Form.Control type=\"textarea\" name=\"landmark\" onChange={handleChange} />\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>Mobile no.</Form.Label>\n                            <Form.Control type=\"text\" name=\"phone\"  onChange={handleChange} isInvalid={isphoneinvalid}/>\n                            <Form.Control.Feedback type=\"invalid\">\n                            Please provide your phone no..\n                            </Form.Control.Feedback>                    \n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control type=\"text\"  name=\"city\" onChange={handleChange} value=\"barh\" readOnly/>\n                        </Form.Group>\n                        <Form.Group>\n                        <Button variant=\"danger\" type=\"button\"  onClick={(ev)=>selectPaymentMode()}>\n                            Place Order\n                        </Button>\n                            {/* {token==null?<Form.Label>Please <Link to=\"/login\" className=\"underline\">login</Link> for place order </Form.Label>:\"\"} */}\n                            \n                        </Form.Group>\n                    </Form>               \n                     </Col>\n                <Col md={6} >\n                    <p>Order Summary</p>\n                    <h5>You have {totalQuantity} items in your food cart</h5>\n                    <Table borderless>\n                        <tbody className=\"order-summary-border\">\n                            {products}\n                        </tbody>\n                        <tfoot >\n                            {authState?.errors?.body.record.isPrimeMember?                            <tr>\n                                <td>\n                                    <b>Prime member discount</b>\n                                </td>\n                                <td>\n                                    10%\n                                </td>\n                            </tr>:\"\"}\n                            <tr>\n                                <td>\n                                    <b>Total</b>\n                                </td>\n                                <td>\n                                <span>&#8377;</span> {totalPrice}\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </Table>\n                </Col>\n            </Row>\n        </Container>\n        <Modal show={showPayementModel} onHide={selectPaymentMode} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>Payment Mode</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <Button variant=\"success\" onClick={()=>handleSubmit()}>Cash on Delivery</Button>\n            <Button variant=\"primary\"onClick={onlinePayment}>Pay Now</Button>\n\n            </Modal.Body>\n        </Modal>\n\n        </>\n    )\n}\n\nexport default PlaceOrder\n","import React from 'react'\nimport { Alert, Button} from 'react-bootstrap';\nimport {useDispatch } from \"react-redux\";\nimport orderR from '../../reducers/order';\nimport {Link} from 'react-router-dom';\n\nimport {\n    RESET_ORDER\n} from '../../constants/actionTypes';\n\nfunction OrderSuccess() {\n    // const [show, setShow] = useState(true);\n    const dispatch = useDispatch();\n    dispatch({type:RESET_ORDER})\n    return (\n      <>\n        <Alert show={true} className=\"login-div\">\n          <Alert.Heading>Success!</Alert.Heading>\n          <p>\n         Our representative will call you for order confirmation within 2 minutes. If you not get a call please dial <b>9990708074</b>.\n          </p>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n              <Link to=\"/\">\n              <Button variant=\"danger\">\n              Ok\n            </Button>\n\n              </Link>\n          </div>\n        </Alert>\n      </>\n    );\n}\n\nexport default OrderSuccess\n","import React,{useState,useEffect, useMemo} from 'react'\nimport { Table, Nav, Button, Modal } from 'react-bootstrap';\nimport agent from '../../agent'\nimport {Link} from 'react-router-dom';\nimport {useTable,useSortBy,usePagination} from 'react-table'\nfunction CategoryManagement(props) {\n      const initialState = {\n          categoryList:[]\n      }\n      const [state, setstate] = useState([]) \n      const [show, setShow] = useState(false);\n      const [alert, setalert] = useState({heading:\"\",message:\"\",data:{}});\n        const handleClose = (action) => {\n            if(action==\"yes\"){\n                props.showLoader(true);\n                agent.Order.deleteCategory(alert.data.name).then((res=>{\n                    props.showLoader(false);\n                    console.log(res);\n                    if(res.statusCode == 200){\n                        getCategories()\n                    }else{\n                    }\n                }));\n        \n            }\n            setShow(false)\n        };\n      const handleShow = () => setShow(true);\n    \n      useEffect(() => {\n        if(props.selectedTab==\"categories\"){\n            getCategories()\n        }\n    },[props.selectedTab])\n\n    const getCategories =()=>{\n        console.log(\"category run\")\n        props.showLoader(true);\n        agent.Order.getCategoryAdmin().then((res=>{\n            props.showLoader(false);\n            if(res.statusCode == 200){\n                setstate(res.body.record);\n            }else{\n                setstate([]);\n            }\n        }));\n    }\n    const deleteCategory = (data)=>{\n        setalert({\n            heading:`Delete Category: ${data.name}`,\n            message:`Are you sure you want to delete category: ${data.name}`,\n            data:data\n        })\n        handleShow();    \n    }\n    const data = useMemo(\n        () => \n            state.map((record,index)=>\n                { return {col1:index+1,\n                col2:record.name,\n                col3:record\n                }\n            }\n        )\n        ,\n        [state]\n      )   \n      const columns = useMemo(\n        () => [\n          {\n            Header: '#',\n            accessor: 'col1', // accessor is the \"key\" in the data\n          },\n          {\n            Header: 'Name',\n            accessor: 'col2',\n          },\n          {\n            Header: 'Action',\n            accessor: 'col3',\n          },\n\n        ],\n        []\n      )    \n      \n      const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        pageOptions,\n        page,\n        state: { pageIndex, pageSize },\n        gotoPage,\n        previousPage,\n        nextPage,\n        setPageSize,\n        canPreviousPage,\n        canNextPage,        \n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\n    if(props.selectedTab == \"categories\"){\n        return (\n            <>\n                <Button type=\"button\" onClick={()=>props.changeTab(\"addCategory\")} variant=\"danger\">Add Category</Button>\n                <Table {...getTableProps()} responsive>\n                    <thead>\n                        {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                            <th\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\n                            >\n                                {column.render('Header')}\n                                <span>\n                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\n                                </span>\n\n                            </th>\n                            ))}\n                        </tr>\n                        ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                        {page.map(row => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                if(cell.column.id !=\"col3\"){\n                                    return (\n                                        <td {...cell.getCellProps()}>\n                                            {cell.render('Cell')}\n                                        </td>\n                                        )\n        \n                                }else{\n                                    return (\n                                        <td>\n                                        <span onClick={()=>deleteCategory(cell.value)}>\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n                                            </svg>\n                                        </span>\n                                    </td>\n        \n                                    )\n                                }\n                            })}\n                            </tr>\n                        )\n                        })}\n                    </tbody>\n                </Table>\n    <div>\n     <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n        Previous Page\n      </button>\n       <button onClick={() => nextPage()} disabled={!canNextPage}>\n         Next Page\n       </button>\n       <div>\n         Page{' '}\n         <em>\n           {pageIndex + 1} of {pageOptions.length}\n         </em>\n       </div>\n     </div>                                              \n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{alert.heading}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>{alert.message}</Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\n                        Yes\n                    </Button>\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\n                        Cancel\n                    </Button>\n                    </Modal.Footer>\n                </Modal> \n            </>)\n    \n    }else{\n        return \"\";\n    }\n}\n\nexport default CategoryManagement\n","import React, { useEffect, useState } from 'react'\nimport agent from '../../../agent'\nimport { useHistory } from 'react-router-dom';\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\n\nfunction OrderHistory(props) {\n    //let active = 0;\n    let items = [];\n\n    useEffect(() => {\n        if(props.selectedTab==\"orders\"){\n            getOrders()\n        }\n    }, [props.selectedTab])\n\n    const [orderHistory, setorderHistory] = useState([])\n    const [selectedorder, setselectedorder] = useState([]);\n    const [totalPage, settotalPage] = useState(0);\n    const [isopenpopup, setisopenpopup] = useState(false);\n    const [selectedPage,setselectedPage] = useState(0);\n    const handleClose = () => setisopenpopup(false);\n    for (let number = 0; number <= totalPage; number++) {\n        if(totalPage >0){\n            items.push(\n                <Pagination.Item onClick={() => changePage(number)} key={number} active={number == selectedPage}>\n                  {number+1}\n                </Pagination.Item>,\n              );\n        }\n      }         \n      const paginationBasic = (\n        <div>\n          <Pagination>{items}</Pagination>\n        </div>\n      ); \n\n    const viewOrderPopUp = (record) => {\n        setselectedorder(record);\n        setisopenpopup(true);\n    }\n    let history = useHistory();\n    const getOrders = (page=0) => {\n        props.showLoader(true);\n        agent.Order.getOrdersHistoryAdmin(page).then((res => {\n            props.showLoader(false);\n            console.log(res.body.record)\n            setorderHistory(res.body.record);\n            let totalRecord = res.body.totalOrders;\n            let totalPage = parseInt(res.body.totalOrders)/10;\n            console.log(\"totalPage\",totalPage);\n            settotalPage(totalPage);\n        }), (err) => {\n            console.log(err.response.body.message);\n            if (err.response.body.message == \"jwt must be provided\") {\n                console.log(\"login required\");\n                history.push(\"/login\");\n            }\n            props.showLoader(false);\n\n        });\n    }\n    const changePage=(number) =>{\n        console.log(\"page\",number);\n        setselectedPage(number);\n        getOrders(number);\n    }\n    if (props.selectedTab == \"orders\") {\n        return (\n            <>\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Customer</th>\n                            <th>Date</th>\n                            <th>Details</th>\n                            <th>Number</th>\n                            <th>Action</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orderHistory.map((record, index) =>\n                            <tr>\n                                <td>{index + 1}</td>\n                                <td>{record.shipping.name}</td>\n                                <td>{record.datePlaced}</td>\n                                <td>{record.items.map(itm => <span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\n                                <td>{record.shipping.phone}</td>\n\n                                <td>\n                                    <Button type=\"button\" onClick={() => viewOrderPopUp(record)}>View</Button>\n                                </td>\n                            </tr>\n\n                        )}\n                    </tbody>\n                </Table>\n                {paginationBasic}\n                <Modal show={isopenpopup} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Order Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Table striped bordered hover responsive>\n                            <thead><tr><td colSpan=\"6\"><h4>Shipping Details</h4></td></tr></thead>\n                            <tbody>\n                                <tr>\n                                    <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\n                                    <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\n                                    <td><b>Street:</b> {selectedorder?.shipping?.street}</td>\n                                    <td><b>Landmark:</b> {selectedorder?.shipping?.landmark}</td>\n\n                                    <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\n                                    <td><b>City:</b> {selectedorder?.shipping?.city}</td>\n\n                                </tr>\n                            </tbody>\n                        </Table>\n                        <Table striped bordered hover responsive>\n                            <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\n                            <tbody>{selectedorder?.items?.map(itm => <tr>\n                                <td><b>Title:</b> {itm.item.title}</td>\n                                <td><b>Description:</b> {itm.item.description}</td>\n                                <td><b>Quantity:</b> {itm.quantity}</td>\n                                <td><b>Total Price:</b> {parseInt(itm.quantity) * itm.perItemPrice}</td>\n                            </tr>)}\n                            </tbody>\n                        </Table>\n                        <Table striped bordered hover responsive>\n                            <thead><tr><td colSpan=\"4\"><h4>Payment Details</h4></td></tr></thead>\n                            <tbody>\n                                <tr>\n                                    <td><b>Payment Mode: </b>{selectedorder.paymentMode}</td>\n                                    <td><b>Razorpay Order id: </b>{selectedorder.razorpay_order_id}</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n\n\n                        <Table striped bordered hover responsive>\n                            <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\n                            <tbody>\n                                {selectedorder.isDiscountApplied ? <tr>\n                                    <td>\n                                        <b>\n                                            Prime Member Discount:\n                                </b>\n                                    </td>\n                                    <td>10%</td>\n                                </tr> : \"\"}\n                                <tr>\n                                    <td>\n                                        <b>Total Bill Amount</b>\n                                    </td>\n                                    <td>{selectedorder.totalBillAmount}</td>\n                                </tr>\n                            </tbody>\n\n                        </Table>\n\n                    </Modal.Body>\n                </Modal>\n\n            </>\n        )\n\n    } else {\n        return \"\";\n    }\n}\n\nexport default OrderHistory\n","import React,{useState} from 'react'\nimport { Button,Form, Col} from 'react-bootstrap';\nimport agent from '../../agent'\nimport { Formik} from 'formik';\nimport * as Yup from 'yup';\n//const { Formik } = formik;\nconst schema = Yup.object({\n    name: Yup.string().required(\"Category name is required.\"),\n  });\nfunction AddCategory(props) {\n    const [isloading, setisloading] = useState(false)\n    // const handleSubmit=(ev) =>{\n    //     props.showLoader(false);\n    //     agent.Order.addCategory({name:state}).then((res=>{\n    //         props.showLoader(false);\n\n    //         if(res.statusCode == 200){\n    //             console.log(props);\n    //             props.changeTab(\"categories\");\n    //         }else{\n    //             //setstate([]);\n    //         }\n    //     }));\n    //     ev.preventDefault();\n    // }\n    // const handleChange = (e) => {\n    //     setstate(e.target.value);\n    // }    \n    if (props.selectedTab == \"addCategory\") {\n\n        return (\n            <Formik\n            validationSchema={schema}\n            onSubmit={fields=>{\n                console.log(fields)\n                props.showLoader(false);\n                agent.Order.addCategory(fields).then((res=>{\n                    props.showLoader(false);\n\n                    if(res.statusCode == 200){\n                        console.log(props);\n                        props.changeTab(\"categories\");\n                    }else{\n                        //setstate([]);\n                    }\n                }));\n            \n            }}\n            initialValues={{\n              name: '',\n            }}\n          >\n            {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              isValid,\n              errors,\n            }) => (            \n            <Form onSubmit={handleSubmit} noValidate>\n                <Form.Row>\n                <Form.Group as={Col} md=\"4\" controlId=\"formBasicEmail\">\n                    <Form.Label>Category Name:</Form.Label>\n                    <Form.Control \n                    type=\"text\" \n                    name=\"name\" \n                    placeholder=\"\" \n                    onChange={handleChange}\n                    value={values.name}\n                    isInvalid={!!errors.name}/>\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.name}\n              </Form.Control.Feedback>                    \n                </Form.Group>\n\n                </Form.Row>\n                <Button variant=\"primary\" type=\"submit\" disabled={isloading}>\n                     {isloading?\"Loading...\":\"Save\"}\n                </Button>\n            </Form>\n      )}\n      </Formik>            \n            )\n\n    } else {\n        return \"\";\n    }\n}\n\nexport default AddCategory\n","import React,{useState,useEffect, useMemo} from 'react'\nimport { Table, Nav, Pagination, Button, Modal, Image } from 'react-bootstrap';\nimport agent from '../../../agent'\nimport {Link} from 'react-router-dom';\nimport {useDispatch } from \"react-redux\";\nimport {useTable,useSortBy,usePagination} from 'react-table'\n\nimport {\n    STORE_EDIT_PRODUCT\n} from '../../../constants/actionTypes';\n\nfunction ProductManagement(props) {\n    \n    useEffect(() => {\n        if(props.selectedTab==\"products\"){\n            getProducts()\n        }\n    },[props.selectedTab])\n\n    const [state, setstate] = useState([]) \n    const [show, setShow] = useState(false);\n    const [alert, setalert] = useState({heading:\"\",message:\"\",data:{}});\n    const dispatch = useDispatch()\n    \n    const getProducts =()=>{\n        props.showLoader(true);\n        agent.Order.getProducts().then((res=>{\n            props.showLoader(false);\n\n            if(res.statusCode == 200){\n                setstate(res.body.record);\n            }else{\n                setstate([]);\n            }\n        }));\n    }\n    const handleClose = (action) => {\n        if(action==\"yes\"){\n            props.showLoader(true);\n            agent.Order.deleteProduct(alert.data.title).then((res=>{\n                props.showLoader(false);\n                if(res.statusCode == 200){\n                    getProducts()\n                }else{\n                }\n            }));\n    \n        }\n        setShow(false)\n    };\n    const handleShow = () => setShow(true);\n    const deleteProduct = (data)=>{\n        console.log(data);\n        setalert({\n            heading:`Delete Product: ${data.title}`,\n            message:`Are you sure you want to delete Product: ${data.title}`,\n            data:data\n        })\n        handleShow();    \n    }\n    const editProduct = (data)=>{\n        dispatch({type:STORE_EDIT_PRODUCT,data})\n        props.changeTab(\"editProduct\")\n    }\n    const columns = useMemo(\n        () => [\n          {\n            Header: '#',\n            accessor: 'col1', // accessor is the \"key\" in the data\n          },\n          {\n            Header: 'Image',\n            accessor: 'col2',\n          },\n          {\n            Header: 'Title',\n            accessor: 'col3',\n          },\n          {\n            Header: 'Description',\n            accessor: 'col4',\n          },\n          {\n            Header: 'Price',\n            accessor: 'col5',\n          },\n          {\n            Header: 'Category',\n            accessor: 'col6',\n          },\n          {\n            Header: 'Action',\n            accessor: 'col7',\n          },\n\n        ],\n        []\n    )    \n\n    const data = useMemo(\n        () => \n            state.map((record,index)=>\n                { return {col1:index+1,\n                col2:record.imageUrl,\n                col3:record.title,\n                col4:record.description,\n                col5:record.price,\n                col6:record.category,\n                col7:record\n                }\n            }\n        )\n        ,\n        [state]\n      )  \n\n      const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        pageOptions,\n        page,\n        state: { pageIndex, pageSize },\n        gotoPage,\n        previousPage,\n        nextPage,\n        setPageSize,\n        canPreviousPage,\n        canNextPage,        \n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\n\n    if(props.selectedTab == \"products\"){\n        return (\n            <>\n                <Button type=\"button\" onClick={()=>props.changeTab(\"addProduct\")} variant=\"danger\">Add Product</Button>\n                <Table {...getTableProps()} responsive>\n                    <thead>\n                        {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                            <th\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\n                            >\n                                {column.render('Header')}\n                                <span>\n                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\n                                </span>\n\n                            </th>\n                            ))}\n                        </tr>\n                        ))}\n                    </thead>\n                    <tbody {...getTableBodyProps()}>\n                        {page.map(row => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                if(cell.column.id ==\"col2\"){\n                                    return(<td>{cell.value !=\"\"?<Image src={cell.value} className=\"product-image\" thumbnail />:\"No Image\"}</td>)\n                                }                                \n                                if(cell.column.id !=\"col7\"){\n                                    return (\n                                        <td {...cell.getCellProps()}>\n                                            {cell.render('Cell')}\n                                        </td>\n                                        )\n        \n                                }else{\n                                    return (\n                                        <td>\n                                        <span onClick={()=>deleteProduct(cell.value)}>\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n                                            </svg>\n                                        </span>\n                                        <span className=\"ml-2\" onClick={()=>editProduct(cell.value)}>\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n                                            <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n                                            </svg>\n                                        </span>\n                                    </td>\n        \n                                    )\n                                }\n                            })}\n                            </tr>\n                        )\n                        })}\n                    </tbody>\n                </Table>\n                <div>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                    {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                </div>                                              \n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>{alert.heading}</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>{alert.message}</Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\n                        Yes\n                    </Button>\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\n                        Cancel\n                    </Button>\n                    </Modal.Footer>\n                </Modal>               \n            </>)\n    \n    }else{\n        return \"\";\n    }\n}\n\nexport default ProductManagement\n","import React,{useState,useEffect} from 'react'\nimport {Button, Form, Col } from 'react-bootstrap';\nimport agent from '../../../agent';\nimport { Formik} from 'formik';\nimport * as Yup from 'yup';\n//const { Formik } = formik;\nconst schema = Yup.object({\n    title: Yup.string().required(\"Title is required.\"),\n    category: Yup.string().required(\"Category is required.\"),\n    price: Yup.string().required(\"Price is required.\")\n  });\n\nfunction AddProduct(props) {\n    const [category, setcategory] = useState([])\n    //const [state, setState] = useState({})\n\n    useEffect(() => {\n        if(props.selectedTab==\"addProduct\"){\n            getCategories()\n        }\n    },[props.selectedTab])\n    const getCategories =()=>{\n        props.showLoader(true);\n        agent.Order.getCategoryAdmin().then((res=>{\n            props.showLoader(false);\n\n            if(res.statusCode == 200){\n                //setstate(res.body.record);\n                setcategory(res.body.record)\n            }else{\n                //setstate([]);\n                setcategory([])\n            }\n        }));\n    }\n    // const handleChange = (e) => {\n\n    //     //const state = this.state.userDetails\n    //     state[e.target.name] = e.target.value;\n    //     setState(state);\n    //     console.log(state);\n        \n    // }\n\n    // const handleSubmit=(ev) =>{\n    //     props.showLoader(false);\n    //     console.log(state);\n    //     agent.Order.addProducts(state).then((res=>{\n    //         props.showLoader(false);\n\n    //         if(res.statusCode == 200){\n    //             //console.log(props);\n    //             props.changeTab(\"products\");\n    //         }else{\n    //             //setstate([]);\n    //         }\n    //     }));\n    //     ev.preventDefault();\n    // }\n\n    if (props.selectedTab == \"addProduct\") {\n        return (\n            <Formik\n            validationSchema={schema}\n            onSubmit={fields=>{\n                console.log(fields)\n                props.showLoader(false);\n                agent.Order.addProducts(fields).then((res=>{\n                    props.showLoader(false);\n\n                    if(res.statusCode == 200){\n                        //console.log(props);\n                        props.changeTab(\"products\");\n                    }else{\n                        //setstate([]);\n                    }\n                }));\n            \n            }}\n            initialValues={{\n              title: '',\n              category:'',\n              description:'',\n              price:'',\n              imageUrl:''\n            }}\n          >\n            {({\n              handleSubmit,\n              handleChange,\n              handleBlur,\n              values,\n              touched,\n              isValid,\n              errors,\n            }) => (            \n\n            <Form noValidate onSubmit={handleSubmit}>\n                <Form.Row>\n            <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>Select Category*</Form.Label>\n                <Form.Control \n                as=\"select\" \n                name=\"category\" \n                onChange={handleChange} \n                value={values.category}\n                isInvalid={!!errors.category}\n                >\n                <option key={\"\"}>Select Category</option>\n                    {category.map(item=><option key={item.name}>{item.name}</option>)}\n                </Form.Control>\n          <Form.Control.Feedback type=\"invalid\">\n                {errors.category}\n              </Form.Control.Feedback>                    \n\n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>Title*</Form.Label>\n                <Form.Control \n                type=\"text\"  \n                name=\"title\" \n                onChange={handleChange} \n                value={values.title}\n                isInvalid={!!errors.title}\n                />\n          <Form.Control.Feedback type=\"invalid\">\n                {errors.title}\n              </Form.Control.Feedback>                    \n\n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control as=\"textarea\" rows={3} name=\"description\" onChange={handleChange}/>\n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Price*</Form.Label>\n                <Form.Control \n                type=\"number\" \n                name=\"price\" \n                onChange={handleChange}\n                value={values.price}\n                isInvalid={!!errors.price}\n                />\n            <Form.Control.Feedback type=\"invalid\">\n                {errors.price}\n              </Form.Control.Feedback>                    \n\n            </Form.Group>\n            </Form.Row>\n            <Form.Row>\n            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\n                <Form.Label>ImageURL</Form.Label>\n                <Form.Control type=\"text\"  name=\"imageUrl\" onChange={handleChange}/>\n            </Form.Group>\n            </Form.Row>\n            <Button variant=\"primary\" type=\"submit\">\n                Save\n            </Button>    \n            </Form>  \n            )}\n            </Formik>              \n         )\n        \n    }else{\n        return \"\";\n    }\n}\n\nexport default AddProduct\n","import React, { useState, useEffect } from 'react'\nimport { Button, Form, Col } from 'react-bootstrap';\nimport agent from '../../../agent';\nimport { useSelector,useDispatch } from \"react-redux\";\nimport {\n    UPDATE_PRODUCT_FIELD\n} from '../../../constants/actionTypes';\n\nfunction EditProduct(props) {\n    const storeProduct = useSelector(state => state.product);\n\n    const [category, setcategory] = useState([])\n    const [state, setState] = useState({})\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (props.selectedTab == \"editProduct\") {\n            getCategories()\n        }\n    }, [props.selectedTab])\n\n    const getCategories = () => {\n        props.showLoader(true);\n        agent.Order.getCategoryAdmin().then((res => {\n            props.showLoader(false);\n\n            if (res.statusCode == 200) {\n                setcategory(res.body.record)\n            } else {\n                setcategory([])\n            }\n        }));\n    }\n\n    const handleChange = (e) => {\n        let data = {key:e.target.name,value:e.target.value}\n        dispatch({type:UPDATE_PRODUCT_FIELD,data});\n    }\n\n    const handleSubmit = (ev) => {\n        console.log(storeProduct);\n        props.showLoader(false);\n        agent.Order.editProducts(storeProduct.product).then((res => {\n            props.showLoader(false);\n            if (res.statusCode == 200) {\n                props.changeTab(\"products\");\n            } else {\n            }\n        }));\n        ev.preventDefault();\n    }\n\n    if (props.selectedTab == \"editProduct\") {\n        return (\n            <Form onSubmit={handleSubmit}>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Select Category</Form.Label>\n                        <Form.Control as=\"select\" value={storeProduct.product?.category} name=\"category\" onChange={handleChange} required>\n                            <option key={\"\"}>Select Category</option>\n                            {category.map(item => <option key={item.name}>{item.name}</option>)}\n                        </Form.Control>\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type=\"text\" value={storeProduct.product?.title} name=\"title\" onChange={handleChange} required />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as=\"textarea\" value={storeProduct.product?.description} rows={3} name=\"description\" onChange={handleChange} />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Price</Form.Label>\n                        <Form.Control type=\"number\" value={storeProduct.product?.price} name=\"price\" onChange={handleChange} />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlInput5\">\n                        <Form.Label>ImageURL</Form.Label>\n                        <Form.Control type=\"text\" value={storeProduct.product?.imageUrl} name=\"imageUrl\" onChange={handleChange} />\n                    </Form.Group>\n                </Form.Row>\n                <Button variant=\"primary\" type=\"submit\">\n                    Save\n            </Button>\n            </Form>\n        )\n\n    } else {\n        return \"\"\n    }\n}\n\nexport default EditProduct\n","import React, { useEffect, useState,useMemo } from 'react'\nimport agent from '../../../agent'\nimport { useHistory } from 'react-router-dom';\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\nimport {useTable,useSortBy,usePagination} from 'react-table'\n\nfunction FinanceRequests(props) {\n    const [ITRrequests, setITRrequests] = useState([])\n    const [isopenpopup, setisopenpopup] = useState(false);\n    const [selectedorder, setselectedorder] = useState([]);\n\n    const handleClose = () => setisopenpopup(false);\n\n    useEffect(() => {\n        if(props.selectedTab==\"finance\"){\n            getITRrequests()\n        }\n    }, [props.selectedTab])\n\n    const getITRrequests = () => {\n        props.showLoader(true);\n        agent.Finance.getAdminItr().then((res => {\n            props.showLoader(false);\n            console.log(res.body.record);\n            setITRrequests(res.body.record);\n        }), (err) => {\n            // if (err.response.body.message == \"jwt must be provided\") {\n            //     console.log(\"login required\");\n            //     history.push(\"/login\");\n            // }\n            props.showLoader(false);\n\n        });\n    }\n    const columns = useMemo(\n        () => [\n          {\n            Header: '#',\n            accessor: 'col1', // accessor is the \"key\" in the data\n          },\n          {\n            Header: 'FirstName',\n            accessor: 'col2',\n          },\n          {\n            Header: 'LastName',\n            accessor: 'col3',\n          },\n          {\n            Header: 'Phone',\n            accessor: 'col4',\n          },\n          {\n            Header: 'Email',\n            accessor: 'col5',\n          },\n          // {\n          //   Header: 'Address',\n          //   accessor: 'col6',\n          // },\n          // {\n          //   Header: 'Aadhar',\n          //   accessor: 'col7',\n          // },\n          // {\n          //   Header: 'Business',\n          //   accessor: 'col8',\n          // },\n          // {\n          //   Header: 'Zip',\n          //   accessor: 'col9',\n          // },\n          // {\n          //   Header: 'Service',\n          //   accessor: 'col10',\n          // },\n          {\n            Header:'Action',\n            accessor: 'col6'\n          }\n        ],\n        []\n    )    \n    const data = useMemo(\n        () => \n        ITRrequests.map((record,index)=>\n                { return {col1:index+1,\n                col2:record.firstName,\n                col3:record.lastName,\n                col4:record.phone,\n                col5:record.email,\n                col6:record\n                // col6:record.address,\n                // col7:record.aadhar,\n                // col8:record.business,\n                // col9:record.zip,\n                // col10:record.service\n                }\n            }\n        )\n        ,\n        [ITRrequests]\n      )  \n      const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        pageOptions,\n        page,\n        state: { pageIndex, pageSize },\n        gotoPage,\n        previousPage,\n        nextPage,\n        setPageSize,\n        canPreviousPage,\n        canNextPage,        \n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\n    const viewOrderPopUp = (record) => {\n        setselectedorder(record);\n        setisopenpopup(true);\n    }\n\n    if (props.selectedTab == \"finance\") {\n    return (\n        <>\n        <Table {...getTableProps()} responsive>\n        <thead>\n            {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                <th\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                >\n                    {column.render('Header')}\n                    <span>\n                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\n                    </span>\n\n                </th>\n                ))}\n            </tr>\n            ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n            {page.map(row => {\n            prepareRow(row)\n            return (\n                <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                                if(cell.column.id ==\"col6\"){\n                                  return(\n                                  <td>\n                                    <Button type=\"button\" onClick={() => viewOrderPopUp(cell.value)}>View</Button>\n                                    </td>\n                                  )\n                              } else{\n                                return (\n                                  <td {...cell.getCellProps()}>\n                                      {cell.render('Cell')}\n                                  </td>\n                                  )\n          \n                              }                               \n\n                })}\n                </tr>\n            )\n            })}\n        </tbody>\n    </Table>\n                <div>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                    {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                </div> \n                <Modal show={isopenpopup} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>User Details</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Table striped bordered hover responsive>\n                            <tbody>\n                                <tr>\n                                    <td><b>First Name: </b></td>\n                                    <td>{selectedorder.firstName}</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Last Name: </b></td>\n                                    <td>{selectedorder.lastName}</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Phone: </b></td>\n                                    <td>{selectedorder.phone}</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Email: </b></td>\n                                    <td>{selectedorder.email}</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Address: </b></td>\n                                    <td>{selectedorder.address}</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Aadhar: </b></td>\n                                    <td>{selectedorder.aadhar}</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Business: </b></td>\n                                    <td>{selectedorder.business}</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Zip: </b></td>\n                                    <td>{selectedorder.zip}</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Service: </b></td>\n                                    <td>{selectedorder.service}</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Razorpay order id: </b></td>\n                                    <td>{selectedorder.razorpay_order_id}</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Modal.Body>\n                </Modal>\n\n                </>    \n                                                       \n\n)\n    }else{\n        return \"\";\n    }\n}\n\nexport default FinanceRequests\n","import React, { useEffect, useState,useMemo } from 'react'\nimport agent from '../../../agent'\nimport { useHistory } from 'react-router-dom';\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\nimport {useTable,useSortBy,usePagination} from 'react-table'\nimport {Link} from 'react-router-dom';\n\nfunction Form16Requests(props) {\n    const [form16requests, setform16requests] = useState([])\n    useEffect(() => {\n        if(props.selectedTab==\"form16\"){\n            getForm16requests()\n        }\n    }, [props.selectedTab])\n\n    const getForm16requests = () => {\n        props.showLoader(true);\n        agent.Finance.getAdminForm16().then((res => {\n            props.showLoader(false);\n            console.log(res.body.record);\n            setform16requests(res.body.record);\n        }), (err) => {\n            props.showLoader(false);\n\n        });\n    }\n    const downloadForm16=(filepath=\"\")=>{\n        console.log(filepath);\n        let filePathArr = filepath.split(\"/\");\n        let fileName = filePathArr[filePathArr.length -1];\n        console.log(fileName);\n        agent.Finance.downloadForm16({fileName:fileName}).then(res => {\n            console.log(res);\n\n        });\n    }\n    const columns = useMemo(\n        () => [\n          {\n            Header: '#',\n            accessor: 'col1', // accessor is the \"key\" in the data\n          },\n          {\n            Header: 'Phone',\n            accessor: 'col2',\n          },\n          {\n            Header: 'Form16',\n            accessor: 'col3',\n          },\n          {\n            Header: 'Razorpay Order Id',\n            accessor: 'col4',\n          }\n\n\n        ],\n        []\n    )    \n    const data = useMemo(\n        () => \n        form16requests.map((record,index)=>\n                { \n                    let filePathArr = record.filePath.split(\"/\");\n                    let fileName = filePathArr[filePathArr.length -1];\n                return {col1:index+1,\n                col2:record.phone,\n                col3:fileName,\n                col4:record.razorpay_order_id,\n                }\n            }\n        )\n        ,\n        [form16requests]\n      )  \n      const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        pageOptions,\n        page,\n        state: { pageIndex, pageSize },\n        gotoPage,\n        previousPage,\n        nextPage,\n        setPageSize,\n        canPreviousPage,\n        canNextPage,        \n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\n\n    if(props.selectedTab == \"form16\"){\n        return (\n            <>\n            <Table {...getTableProps()} responsive>\n            <thead>\n                {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                    <th\n                        {...column.getHeaderProps(column.getSortByToggleProps())}\n                    >\n                        {column.render('Header')}\n                        <span>\n                        {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\n                        </span>\n    \n                    </th>\n                    ))}\n                </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {page.map(row => {\n                prepareRow(row)\n                return (\n                    <tr {...row.getRowProps()}>\n                    {row.cells.map(cell => {\n                                if(cell.column.id ==\"col3\"){\n                                    return(<td>\n                                        {/* <a target={\"_blank\"}  href = \"http://localhost:3000/api/download?fileName=16057165121892019-08-30-12-14-11-448_1567147451448_XXXPK9512X_Acknowledgement.pdf\">Download</a> */}\n                                        <Link className=\"btn btn-danger\" target={\"_blank\"} to={`/api/download?fileName=${cell.value}`}>Download</Link>\n                                        {/* <Button type=\"button\" onClick={()=>downloadForm16(cell.value)} variant=\"danger\"> Download</Button>  */}\n                                         </td>)\n                                }else{\n                                    return (\n                                        <td {...cell.getCellProps()}>\n                                            {cell.render('Cell')}\n                                        </td>\n                                        )\n        \n                                }                                \n\n                    })}\n                    </tr>\n                )\n                })}\n            </tbody>\n        </Table>\n                    <div>\n                    <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                        Previous Page\n                    </button>\n                    <button onClick={() => nextPage()} disabled={!canNextPage}>\n                        Next Page\n                    </button>\n                    <div>\n                        Page{' '}\n                        <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                        </em>\n                    </div>\n                    </div>   \n                    </>                                           \n    \n            )\n        }else{\n        return \"\";\n    }\n}\n\nexport default Form16Requests\n","import React,{useState,useEffect, useMemo} from 'react'\nimport { Table, Nav, Button, Modal } from 'react-bootstrap';\nimport agent from '../../../agent'\nimport {Link} from 'react-router-dom';\nimport {useTable,useSortBy,usePagination} from 'react-table'\n\nfunction UsersManagement(props) {\n    const [state, setstate] = useState([]) \n    useEffect(() => {\n        if(props.selectedTab==\"users\"){\n            getUsers()\n        }\n    },[props.selectedTab])\n\n    const getUsers =()=>{\n        props.showLoader(true);\n        agent.User.getUserList().then((res=>{\n            props.showLoader(false);\n            if(res.statusCode == 200){\n                setstate(res.body.record);\n            }else{\n                setstate([]);\n            }\n        }));\n    }\n    const makeOrRemovePrimeMember =(UserDetails,ActionForMake=true)=>{\n        UserDetails.isPrimeMember = ActionForMake;\n        console.log(UserDetails);\n        props.showLoader(true);\n        agent.User.makeOrRemovePrimeMember(UserDetails).then((res=>{\n            props.showLoader(false);\n            if(res.statusCode == 200){\n                getUsers();\n            }else{\n                console.log(res.body);\n            }\n        }));\n\n    }\n    if(props.selectedTab == \"users\"){\n    return (\n        <Table>\n            <thead>\n                <tr>\n                    <td><b>Email</b></td>\n                    <td><b>Phone</b></td>\n                    <td><b>Is Prime Member</b></td>\n                    <td><b>Action</b></td>\n                </tr>\n            </thead>\n            <tbody>\n                {state.map(item=>(<tr>\n                    <td>{item.email}</td>\n                    <td>{item.phone}</td>\n                    <td>{item.isPrimeMember?\"Yes\":\"No\"}</td>\n\n                    <td>{item.isPrimeMember?<Button type=\"button\" variant=\"danger\" onClick={()=>makeOrRemovePrimeMember(item,false)}>Remove Membership</Button>:<Button type=\"button\" onClick={()=>makeOrRemovePrimeMember(item)}>Make Prime Member</Button>} </td>\n                    </tr>))}\n            </tbody>\n        </Table>\n        )\n    }else{\n        return \"\"\n    }\n}\n\nexport default UsersManagement\n","import React,{useState,useEffect} from 'react'\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\n import CategoryManagement from '../Admin/CategoryManagement';\nimport Loader from '../layout/Loader';\nimport OrderHistory from '../Admin/orders/OrderHistory';\nimport AddCategory from '../Admin/AddCategory';\nimport ProductManagement from '../Admin/products/ProductManagement'\nimport AddProduct from '../Admin/products/AddProduct'\nimport EditProduct from '../Admin/products/EditProduct'\nimport FinanceRequests from '../Admin/finance/FinanceRequests';\nimport Form16Requests from '../Admin/finance/Form16Requests';\nimport UsersManagement from '../Admin/users/UsersManagement';\nfunction Home(props) {\n    const [isShowLoader, setisShowLoader] = useState(false)\n    const [selectedTab, setselectedTab] = useState(\"categories\")\n    const showLoader =(value)=>{\n        setisShowLoader(value);\n    }\n    const changeTab=(tab=\"\")=>{\n        setselectedTab(tab);\n    }\n\n    return (\n        <>\n        <Container fluid>\n            <Row>\n                <Col md={3} className=\"p-4\">\n                    <ListGroup >\n                        <ListGroup.Item key={\"categories\"} active={selectedTab==\"categories\"?true:false} action  onClick={()=>changeTab(\"categories\")}>Category Management</ListGroup.Item>\n                        <ListGroup.Item key={\"products\"} active={selectedTab==\"products\"?true:false} action onClick={()=>changeTab(\"products\")}>Product Management</ListGroup.Item>\n                        <ListGroup.Item key={\"orders\"} active={selectedTab==\"orders\"?true:false} action onClick={()=>changeTab(\"orders\")}>Order History</ListGroup.Item>\n                        <ListGroup.Item key={\"finance\"}  active={selectedTab==\"finance\"?true:false} action onClick={()=>changeTab(\"finance\")}>ITR Requests</ListGroup.Item>\n                        <ListGroup.Item key={\"form16\"}  active={selectedTab==\"form16\"?true:false} action onClick={()=>changeTab(\"form16\")}>Form16 Requests</ListGroup.Item>\n                        <ListGroup.Item key={\"form16\"}  active={selectedTab==\"users\"?true:false} action onClick={()=>changeTab(\"users\")}>Users Management</ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={9} className=\"p-4 production-col\" >\n                    <Loader show={isShowLoader}/>\n                    \n                    <CategoryManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\n                    <ProductManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\n                    <OrderHistory  selectedTab={selectedTab} showLoader={showLoader}/>\n                    <AddCategory changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\n                    <AddProduct changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\n                    <EditProduct changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\n                    <FinanceRequests changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\n                    <Form16Requests changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\n                    <UsersManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\n\n                </Col>\n            </Row>\n        </Container>\n    </>\n)\n}\n\nexport default Home\n","import React,{useEffect,useState} from 'react'\nimport agent from '../../agent'\nimport {useHistory} from 'react-router-dom';\nimport { Table, Nav, Pagination,Button,Modal } from 'react-bootstrap';\n\nfunction UserOrderHistory(props) {\n    useEffect(() => {\n        getOrders()\n  },[])\n  const [orderHistory, setorderHistory] = useState([])\n  const [selectedorder,setselectedorder] = useState([]);\n  const [isopenpopup, setisopenpopup] = useState(false)\n  const handleClose = () => setisopenpopup(false);\n\n  const viewOrderPopUp = (record)=>{\n      setselectedorder(record);\n      setisopenpopup(true);\n  }\n  let history = useHistory();\n  const getOrders =()=>{\n      props.showLoader(true);\n      agent.Order.getOrderHistoryByUserEmail().then((res=>{\n          props.showLoader(false);\n          console.log(res.body.record)\n\n          setorderHistory(res.body.record);\n      }),(err)=>{\n          console.log(err.response.body.message);\n          if(err.response.body.message ==\"jwt must be provided\"){\n              console.log(\"login required\");\n            history.push(\"/login\");\n          }\n          props.showLoader(false);\n\n      });\n  }\n\n    return (\n        <>\n        <Table responsive>\n        <thead>\n            <tr>\n                <th>#</th>\n                <th>Customer</th>\n                <th>Date</th>\n                <th>Details</th>\n                <th>Number</th>\n                <th>Action</th>\n\n            </tr>\n        </thead>\n        <tbody>\n            {orderHistory.map((record,index)=>\n            <tr>\n                <td>{index+1}</td>\n                <td>{record.shipping.name}</td>\n                <td>{record.datePlaced}</td>\n                <td>{record.items.map(itm=><span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\n                <td>{record.shipping.phone}</td>\n\n                <td>\n                    <Button type=\"button\" onClick={()=>viewOrderPopUp(record)}>View</Button>\n                </td>\n            </tr>\n\n            )}\n        </tbody>\n    </Table>\n    <Modal show={isopenpopup} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Order Details</Modal.Title>\n        </Modal.Header>\n            <Modal.Body>\n                <Table striped bordered hover responsive>\n                    <thead><tr><td colSpan=\"4\"><h4>Shipping Details</h4></td></tr></thead>\n                    <tbody>\n                        <tr>\n                            <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\n                            <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\n                            <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\n                            <td><b>City:</b> {selectedorder?.shipping?.city}</td>\n\n                        </tr>\n                    </tbody>\n                </Table>\n                <Table striped bordered hover responsive>\n                    <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\n                    <tbody>{selectedorder?.items?.map(itm=><tr>\n                    <td><b>Title:</b> {itm.item.title}</td>\n                    <td><b>Description:</b> {itm.item.description}</td>\n                    <td><b>Quantity:</b> {itm.quantity}</td>\n                    <td><b>Total Price:</b> {parseInt(itm.quantity)*itm.perItemPrice}</td>\n                    </tr>)}\n                    </tbody>\n                </Table>\n\n                <Table striped bordered hover responsive>\n                <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\n                    <tbody>\n                        {selectedorder.isDiscountApplied?<tr>\n                            <td>\n                                <b>\n                                Prime Member Discount:\n                                </b>\n                            </td>\n                            <td>10%</td>\n                        </tr>:\"\"}\n                        <tr>\n                            <td>\n                                <b>Total Bill Amount</b>\n                            </td>\n                            <td>{selectedorder.totalBillAmount}</td>\n                        </tr>\n                    </tbody>\n\n                </Table>\n\n            </Modal.Body>\n      </Modal>\n\n    </>\n)\n}\n\nexport default UserOrderHistory\n","import React,{useState} from 'react'\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\n// import CategoryManagement from '../Admin/CategoryManagement';\nimport Loader from '../../layout/Loader';\nimport UserOrderHistory from '../UserOrderHistory';\nfunction UserAction(props) {\n\nconst [isShowLoader, setisShowLoader] = useState(false)\nconst showLoader =(value)=>{\n    setisShowLoader(value);\n}\nreturn (\n    <>\n    <Container fluid>\n        <Row>\n            <Col md={3} className=\"p-4\">\n                <ListGroup>\n                    {/* <ListGroup.Item  active action>Category Management</ListGroup.Item>\n                    <ListGroup.Item  action>Product Management</ListGroup.Item> */}\n                    <ListGroup.Item  action active>Order History</ListGroup.Item>\n                    {/* <ListGroup.Item  action>Finance</ListGroup.Item> */}\n                </ListGroup>\n            </Col>\n            <Col md={9} className=\"p-4 production-col\" >\n                <Loader show={isShowLoader}/>\n                {/* <CategoryManagement showLoader={showLoader}/> */}\n                <UserOrderHistory showLoader={showLoader}/>\n            </Col>\n        </Row>\n    </Container>\n</>\n)\n\n}\nexport default UserAction\n","import React from 'react'\nimport { Alert, Button} from 'react-bootstrap';\nimport {useDispatch } from \"react-redux\";\nimport orderR from '../../reducers/order';\nimport {Link} from 'react-router-dom';\n\nfunction OrderFailed() {\n    // const [show, setShow] = useState(true);\n    return (\n      <>\n        <Alert show={true} className=\"login-div\">\n          <Alert.Heading>Filed!</Alert.Heading>\n          <p>\nSomething went wrong to place order. Please try again.\n          </p>\n          <hr />\n          <div className=\"d-flex justify-content-end\">\n              <Link to=\"/placeOrder\">\n              <Button variant=\"danger\">\n              Ok\n            </Button>\n\n              </Link>\n          </div>\n        </Alert>\n      </>\n    );\n}\n\nexport default OrderFailed\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/home/Home'\nimport Registration from './components/users/Registration'\nimport Login from './components/users/Login'\nimport FillItr from './components/finance-Itr/FillItr'\nimport InnerLayout from './components/layout/InnerLayout'\nimport CategoryList from './components/food-order/CategoryList'\nimport MyCart from './components/food-order/MyCart'\nimport PlaceOrder from './components/food-order/PlaceOrder'\nimport OrderSuccess from './components/food-order/OrderSuccess'\nimport AdminHome from './components/Admin/Home';\nimport CategoryManagement from './components/Admin/CategoryManagement';\nimport AddCategory from './components/Admin/AddCategory';\nimport OrderHistory from './components/Admin/orders/OrderHistory';\nimport UserOrderHistory from './components/users/UserOrderHistory';\nimport UserAction from './components/users/user-actions/UserAction';\nimport ProductManagement from './components/Admin/products/ProductManagement';\nimport AddProduct from './components/Admin/products/AddProduct';\nimport EditProduct from './components/Admin/products/EditProduct';\nimport OrderFailed from './components/food-order/OrderFailed';\nimport FinanceRequests from './components/Admin/finance/FinanceRequests';\nimport Form16Requests from './components/Admin/finance/Form16Requests';\nimport InqueryForm from './components/home/InqueryForm';\nimport UsersManagement from './components/Admin/users/UsersManagement';\nfunction Routes() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <InnerLayout path=\"/login\" component={Login} />\n                <InnerLayout path=\"/registration\" component={Registration} />\n                <InnerLayout path=\"/fillItr\" component={FillItr} />\n                <InnerLayout path=\"/CategoryList\" component={CategoryList} />\n                <InnerLayout path=\"/myCart\" component={MyCart} />\n                <InnerLayout path=\"/placeOrder\" component={PlaceOrder} />\n                <InnerLayout path=\"/orderSuccess\" component={OrderSuccess} />\n                <InnerLayout path=\"/adminHome\" component={AdminHome} />\n                <InnerLayout path=\"/categoryManagement\" component={CategoryManagement} />\n                <InnerLayout path=\"/addCategory\" component={AddCategory} />\n                <InnerLayout path=\"/orderHistory\" component={OrderHistory} />\n                <InnerLayout path=\"/userOrderHistory\" component={UserOrderHistory} />\n                <InnerLayout path=\"/userAction\" component={UserAction} />\n                <InnerLayout path=\"/productManagement\" component={ProductManagement} />\n                <InnerLayout path=\"/addProduct\" component={AddProduct} />\n                <InnerLayout path=\"/editProduct\" component={EditProduct} />\n                <InnerLayout path=\"/orderFailed\" component={OrderFailed} />\n                <InnerLayout path=\"/financeRequests\" component={FinanceRequests} />\n                <InnerLayout path=\"/form16Requests\" component={Form16Requests} />\n                <InnerLayout path=\"/inqueryForm\" component={InqueryForm} />\n                <InnerLayout path=\"/usersManagement\" component={UsersManagement} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Routes\n","import './App.css';\nimport { Provider } from 'react-redux';\nimport { store} from './store';\n\nimport Routes from './Routes';\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      {/* <Header/> */}\n      <Routes/>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}