{"version":3,"sources":["models/BaseUrl.js","agent.js","constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/finance-Itr/ItrPopup.js","components/home/InqueryForm.js","components/layout/SectionMenu.js","components/layout/SectionOffers.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/layout/Header.js","components/home/Home.js","components/layout/ListErrors.js","components/users/Registration.js","models/user.js","components/layout/Loader.js","components/users/Login.js","components/finance-Itr/FillItr.js","components/layout/InnerHeader.js","components/layout/Leftbar.js","components/layout/TopNav.js","components/layout/InnerLayout.js","components/food-order/AddCartButton.js","components/food-order/CategoryList.js","components/food-order/MyCart.js","components/food-order/PlaceOrder.js","components/food-order/OrderSuccess.js","components/Admin/CategoryManagement.js","components/Admin/orders/OrderHistory.js","components/Admin/AddCategory.js","components/Admin/products/ProductManagement.js","components/Admin/products/AddProduct.js","components/Admin/products/EditProduct.js","components/Admin/finance/FinanceRequests.js","components/Admin/finance/Form16Requests.js","components/Admin/Home.js","components/users/UserOrderHistory.js","components/users/user-actions/UserAction.js","components/food-order/OrderFailed.js","models/masterRecord.js","components/masterRecord/memberGroup/MemberGroup.js","components/masterRecord/memberGroup/AddMemberGroup.js","models/memberDetails.js","components/masterRecord/member/AddMember.js","components/masterRecord/member/Member.js","components/masterRecord/member/MemberViewDetails.js","models/groupLoan.js","components/groupLoan/Scheme.js","components/groupLoan/AddScheme.js","components/dashboard/Dashboard.js","components/groupLoan/LoanApplication.js","components/groupLoan/LoanApproval.js","components/groupLoan/DisburseLoan.js","components/groupLoan/EmiCard.js","components/groupLoan/EmiCardPrint.js","components/groupLoan/LoanApprovalDetails.js","components/groupLoan/AllApplications.js","components/groupLoan/EmiCalculator.js","components/emis/printDueEmis.js","components/emis/DueEmis.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","API_ROOT","window","location","hostname","encodeURIComponent","responseBody","res","errorBody","err","response","token","tokenPlugin","req","set","requests","url","get","use","then","body","post","Auth","login","email","password","register","userDetails","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","data","getCategoryAdmin","getOrdersHistoryAdmin","page","getOrderHistoryByUserEmail","addCategory","deleteCategory","del","editCategory","put","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","Inquery","submitInquery","getToken","setToken","_token","REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","message","role","record","id","statusCode","jwtToken","isLoginSuccess","subtype","key","value","common","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","prod","rootReducer","undefined","promiseMiddleware","store","next","v","dispatch","currentView","getState","viewChangeCounter","skipTracking","currentState","promise","error","localStorageMiddleware","localStorage","setItem","agent","createStore","reducer","composeWithDevTools","applyMiddleware","ItrPopup","props","Modal","show","isopen","onHide","hide","centered","className","Header","closeButton","Title","Body","to","pathname","query","InqueryForm","useState","fullName","business","dob","Date","gender","service","Phone","setState","dobstate","setdobstate","setmessage","loading","setloading","handleChange","e","target","name","console","log","Alert","variant","onClose","dismissible","Form","onSubmit","ev","preventDefault","serviceType","reset","Row","Group","as","Col","controlId","Label","Control","onChange","placeholder","selected","date","dateFormat","showYearDropdown","dateFormatCalendar","yearDropdownItemNumber","scrollableYearDropdown","maxDate","defaultValue","readOnly","Button","disabled","Component","LogedInView","currentUser","aactiveClassName","LogedOutView","useDispatch","history","useHistory","split","isAdmin","isPrimeMember","onClick","push","handleITRPopup","this","connect","Home","ListErrors","Registration","submitForm","isLoading","required","Text","React","username","Loader","Spinner","animation","relative","Login","isShowLoader","user","changeEmail","onChangeEmail","changePassword","onChangePassword","onUnload","FillItr","setstate","isphoneinvalid","setisphoneinvalid","isemailinvalid","setiisemailinvalid","isaadharinvalid","setiisaadharinvalid","form16","setform16","handlePay","checkValidate","orderForService","onlinePayment","returnType","amount","options","updatePaymentState","rzp1","Razorpay","on","open","alert","status","obj","paymentObj","razorpay_order_id","paymentStatus","paymentResponse","metadata","order_id","handleSubmit","onFileUpload","paymentMode","formData","FormData","append","isInvalid","Feedback","rows","File","Input","accept","files","InnerHeader","Leftbar","useSelector","Nav","Item","Link","href","class","eventKey","TopNav","Navbar","collapseOnSelect","expand","bg","toggleSidebar","Toggle","Collapse","InnerLayout","component","rest","showSidebar","setshowSidebar","useEffect","innerWidth","checkLogin","jwt","getItem","hasOwnProperty","render","Container","fluid","md","sm","AddCartButton","initialAddItem","addItemInitial","increaseQuantity","decreaseQuantity","nextprops","arr","length","filter","Badge","CategoryList","getInitialData","a","showloader","all","categories","products","categoryList","itemList","changeCategory","catName","selectedTab","ListGroup","defaultActiveKey","active","index","CardColumns","Card","border","Img","src","imageUrl","title","Subtitle","description","Footer","MyCart","priceTotal","reduce","prevValue","currentValue","parseInt","Table","responsive","striped","bordered","colSpan","PlaceOrder","authState","shipingDetails","setShipingDetails","showPayementModel","setshowPayementModel","isnameinvalid","setisnameinvalid","isaddressinvalid","setisaddressinvalid","totalQuantity","totalPrice","shippingObj","address","phone","city","street","landmark","items","shipping","selectPaymentMode","forEach","element","borderless","OrderSuccess","Heading","CategoryManagement","setShow","heading","setalert","handleClose","showLoader","getCategories","useMemo","col1","col2","col3","columns","accessor","useTable","initialState","pageIndex","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","pageOptions","previousPage","pageSize","gotoPage","nextPage","canPreviousPage","setPageSize","canNextPage","changeTab","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","width","height","viewBox","fill","xmlns","d","OrderHistory","getOrders","orderHistory","setorderHistory","selectedorder","setselectedorder","totalPage","settotalPage","isopenpopup","setisopenpopup","selectedPage","setselectedPage","number","Pagination","changePage","paginationBasic","totalOrders","datePlaced","itm","viewOrderPopUp","hover","isDiscountApplied","totalBillAmount","AddCategory","ProductManagement","col4","col5","col6","category","col7","Image","thumbnail","editProduct","AddProduct","setcategory","EditProduct","storeProduct","FinanceRequests","ITRrequests","setITRrequests","getITRrequests","firstName","lastName","aadhar","zip","Form16Requests","form16requests","setform16requests","getForm16requests","filePathArr","filePath","setisShowLoader","setselectedTab","tab","UserOrderHistory","UserAction","OrderFailed","getMemberGroups","saveMemberGroups","MemberGroup","memberGroupRecords","setMemberGroupsRecords","getMemberGroup","masterRecord","size","group","group_code","group_name","remark","moment","created_at","format","AddMemberGroup","values","setValues","isShow","showToast","setShowToast","formik","useFormik","initialValues","user_id","validate","resetForm","prevValues","Toast","autohide","delay","touched","getMemberDetailsData","member_id","saveMemberDetails","deleteMember","editMember","AddMember","enrollmentDate","setEnrollmentDate","setDob","groups","setGroups","getMemberDetails","memberDetails","aadhar_number","member_name","age","marital_status","mobile_number","email_id","member_group_id","pan_card_number","driving_license_number","voter_id_number","ration_card_number","bank_account","bank_ifsc_code","bank_account_holder","enrollment_date","date_of_birth","Members","showDeleteModel","setShowDeleteModel","deleteID","setDeleteID","memberRecords","setMemberRecords","allowFilter","memberRecord","UpdatedList","member","idx","DefaultColumnFilter","filterValue","preFilteredRows","setFilter","count","defaultColumn","Filter","paginate","pageNumberArray","i","First","Prev","num","Next","Last","useFilters","pageCount","getScheme","saveScheme","deleteScheme","getLoanAppInitialData","applyForloan","getApprovalList","getDisburseList","getLoanDetailbyId","approveRejectLoan","getAllLoanApplications","disburseRejectLoan","calculateEMI","getDueEmis","today","paidEmi","getPaidEmis","loanAccountNo","Scheme","schemes","setSchemes","getSchemes","groupLoan","scheme","scheme_code","scheme_name","max_amount","interest_rate","EMI_type","deleteHandle","AddScheme","min","Dashboard","xs","text","LoanApplication","schemeRecords","setSchemeRecords","selectedScheme","setSelectedScheme","getSchemesAndMembers","scheme_id","application_date","loan_amount","EMI_payout","tenure","schems","LoanApproval","loanlist","setLoanlist","getLoanList","loan","loan_id","DisburseLoan","EmiCard","header","handlePrintEMI","showDisburseButton","emiData","paidEmiRecord","EMI","principal","int_amount","outstanding","EmiCardPrint","PureComponent","LoanApprovalDetails","memberDetailsRef","useRef","handlePrintMemberDetail","useReactToPrint","content","current","documentTitle","applicationRef","handlePrintApplication","emiRef","setPaidEmiRecord","isShowEMILoader","setisShowEMILoader","setEmiData","loanDetails","setLoanDetails","showApprovalButton","setShowApprovalButton","setShowDisburseButton","getLoanDetails","calculateEmi","Tenure","EmiData","paidData","result","loan_account_no","emiDate","EMI_date","is_approved","is_disbursed","actionOnLoan","actionType","actionDisburseLoan","ref","style","display","AllApplications","actionStatus","col8","formatedData","EmiCalculator","calculatedData","setCalculatedData","componentRef","handlePrint","loanStartDate","PrintDueEmis","add","parseFloat","dueEmis","emi","DueEmis","setDueEmis","paidID","setPaidID","emiDetailsRef","handlePrintEmiDetail","getDueEmisRecord","remain_EMI","EMI_amount","toFixed","Cell","loan_table_id","paidHandle","emi_id","substring","paidEMI","emidata","InputGroup","FormLabel","selectedDate","cursor","Routes","exact","path","MemberViewDetails","AdminHome","Member","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d92824f.chunk.js","sourcesContent":["import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nexport const superagent = superagentPromise(_superagent, global.Promise);\r\nexport const API_ROOT = window.location.hostname==\"localhost\"?\"https://dev-microfinance.herokuapp.com/api\": '/api';\r\n\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\nexport const requests = {\r\n    del: url =>\r\n      superagent.del(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    get: url =>\r\n      superagent.get(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    // put: (url, body) =>\r\n    //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n    post: (url, body) =>\r\n      superagent.post(`${API_ROOT}${url}`, body).then(responseBody,errorBody)\r\n  };","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = '/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  // del: url =>\r\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\r\n  // put: (url, body) =>\r\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (email, password) =>\r\n    requests.post('/user/login',  { email, password } ),\r\n  register: (userDetails) =>\r\n    requests.post('/user/registration',  userDetails ),\r\n};\r\n\r\nconst Order = {\r\n  getProductsByCat:(catname)=>\r\n  requests.get(`/products?category=${catname}`),\r\n  getCatgoryInitialData:()=>{\r\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\r\n  },\r\n  placeOrder:(data)=>{\r\n    //requests.post(\"/orders/place-order\",data)\r\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\r\n  },\r\n  getCategoryAdmin(){\r\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\r\n  },\r\n  getOrdersHistoryAdmin(page){\r\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\r\n  },\r\n  getOrderHistoryByUserEmail(){\r\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\r\n  },\r\n  addCategory(data){\r\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  deleteCategory(data){\r\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\r\n  },\r\n  editCategory(data){\r\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  getProducts(){\r\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\r\n  },\r\n  deleteProduct(data){\r\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\r\n  },\r\n  addProducts(data){\r\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  },\r\n  editProducts(data){\r\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Payment = {\r\n  getRazorpayOrderId(data){\r\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\r\n  },\r\n  updatePaymentStatus(data){\r\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Finance = {\r\n  fillItr(data){\r\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\r\n  },\r\n  getAdminItr(){\r\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\r\n  },\r\n  uploadForm16(data){\r\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\r\n  },\r\n  getAdminForm16(){\r\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\r\n  },\r\n  downloadForm16(data){\r\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\r\n  }\r\n \r\n}\r\nconst Inquery = {\r\n  submitInquery(data){\r\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\r\n  }\r\n}\r\nexport default {\r\n  Auth,\r\n  Order,\r\n  Payment,\r\n  Finance,\r\n  Inquery,\r\n  getToken:()=>{return token},\r\n  setToken: _token => { token = _token; }\r\n};","\r\n  \r\nexport const APP_LOAD = 'APP_LOAD';\r\nexport const REDIRECT = 'REDIRECT';\r\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\r\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\r\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\r\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\r\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\r\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\nexport const SET_PAGE = 'SET_PAGE';\r\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\r\nexport const CHANGE_TAB = 'CHANGE_TAB';\r\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\r\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\r\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\r\nexport const ASYNC_START = 'ASYNC_START';\r\nexport const ASYNC_END = 'ASYNC_END';\r\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\r\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const REMOVE_TAG = 'REMOVE_TAG';\r\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\r\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\r\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\r\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const RESET_ORDER = 'RESET_ORDER';\r\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\r\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';","import {\r\n    ADD_ITEM_INITIAL,\r\n    INCREASE_QUANTITY,\r\n    DECREASE_QUANTITY,\r\n    RESET_ORDER\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    addedItem: [],\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case ADD_ITEM_INITIAL:\r\n            const addedItem =[...state.addedItem,{\r\n                productId:action.item._id,\r\n                quantity:1,\r\n                perItemPrice:action.item.price,\r\n                item:action.item\r\n            }]\r\n            return {...state, addedItem};\r\n        case INCREASE_QUANTITY:\r\n             state.addedItem.map(record=>{\r\n                if(record.productId == action.productId){\r\n                    record.quantity +=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case DECREASE_QUANTITY:\r\n            state.addedItem.map(record=>{\r\n                if(record.productId == action.productId && record.quantity !=0){\r\n                        record.quantity -=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case RESET_ORDER:\r\n            state.addedItem = []\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import {\r\n    STORE_EDIT_PRODUCT,\r\n    GET_EDIT_PRODUCT,\r\n    UPDATE_PRODUCT_FIELD\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    product: {},\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case STORE_EDIT_PRODUCT:\r\n            return {...state,\r\n                product:action.data \r\n            };\r\n        case GET_EDIT_PRODUCT:\r\n            return {...state};\r\n        case UPDATE_PRODUCT_FIELD:\r\n            let prod = state.product;\r\n            prod[action.data.key]=action.data.value;\r\n           return {...state,product:prod}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import auth from './reducers/auth';\r\nimport common from './reducers/common';\r\nimport order from './reducers/order';\r\nimport product from './reducers/product';\r\nimport { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  common,\r\n  order,\r\n  product\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\nexport default rootReducer\r\n// export default combineReducers({\r\n//   auth,\r\n//   common,\r\n//   order,\r\n//     //router: routerReducer\r\n//   });","import {\r\n    LOGIN,\r\n    REGISTER,\r\n    LOGIN_PAGE_UNLOADED,\r\n    REGISTER_PAGE_UNLOADED,\r\n    ASYNC_START,\r\n    UPDATE_FIELD_AUTH,\r\n    LOGOUT\r\n  } from '../constants/actionTypes';\r\n  \r\n  export default (state = {}, action) => {\r\n  //console.log(action);\r\n    switch (action.type) {\r\n      case LOGIN:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload.message,\r\n          role:action.payload.record[0]?.role,\r\n          id:action.payload.record[0]?.id,\r\n          statusCode:action.payload.jwtToken != \"\"?\"200\":\"\",\r\n          isLoginSuccess:action.payload.jwtToken != \"\"? true:false\r\n        }\r\n      case REGISTER:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload.statusCode\r\n        };\r\n      case LOGIN_PAGE_UNLOADED:\r\n      return{\r\n        ...state,\r\n        //errors: action.payload,\r\n        //userDetails:\r\n      }\r\n      case REGISTER_PAGE_UNLOADED:\r\n        return {};\r\n      case ASYNC_START:\r\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\r\n          return { ...state, inProgress: true };\r\n        }\r\n        break;\r\n      case UPDATE_FIELD_AUTH:\r\n        return { ...state, [action.key]: action.value };\r\n      default:\r\n        return state;\r\n    }\r\n    return state;\r\n  };","import {\r\n    LOGOUT,\r\n    REDIRECT\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0\r\n  };\r\n  \r\n  export default (state = {}, action) => {\r\n    //console.log(action);\r\n      switch (action.type) {\r\n        case REDIRECT:\r\n            return { ...state, redirectTo: null };\r\n        // case LOGOUT:\r\n        //     return { redirectTo: '/login', token: null, currentUser: null };\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import agent from './agent';\r\nimport {\r\n  ASYNC_START,\r\n  ASYNC_END,\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER\r\n} from './constants/actionTypes';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\r\n\r\n    const currentView = store.getState().viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === LOGIN && action.payload != undefined) {\r\n    if (action.payload.jwtToken!=\"\") {\r\n      window.localStorage.setItem('jwt', action.payload.jwtToken);\r\n      agent.setToken(action.payload.jwtToken);\r\n    }\r\n  } else if (action.type === LOGOUT) {\r\n    window.localStorage.setItem('jwt','');\r\n    agent.setToken(null);\r\n  }\r\n\r\n   next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nconst getMiddleware = () => {\r\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\r\n  };\r\nexport const store = createStore(reducer,composeWithDevTools(getMiddleware()));","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//import \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction ItrPopup(props) {\r\n    return (\r\n    <Modal show={props.isopen} onHide={props.hide} centered className=\"text-center\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Tax Return</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'fill'}}}  className=\"btn btn-danger btn-sm\">Start Your Tax Return</Link>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'uploadForm16'}}} className=\"btn btn-danger btn-sm\">Upload Form-16 Now</Link>\r\n            </Modal.Body>\r\n        </Modal>\r\n        )\r\n}\r\n\r\nexport default ItrPopup\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Col, Row, Container, Modal,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction InqueryForm(props) {\r\n    const [state, setState] = useState(\r\n        {fullName:\"\",\r\n            email:\"\",\r\n            business:\"\",\r\n            dob:new Date(),\r\n            gender:\"\",\r\n            service:\"\",\r\n            Phone:\"\"\r\n        });\r\n    const [dobstate, setdobstate] = useState(new Date());\r\n    const [message, setmessage] = useState({type:\"\",message:\"\"})\r\n    const [loading, setloading] = useState(false)\r\n\r\n    const handleChange = (e)=>{\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n    }\r\n    const handleSubmit = (ev)=>{\r\n        ev.preventDefault();\r\n\r\n        state[\"dob\"] = dobstate;\r\n        state[\"service\"] = props.serviceType;\r\n        setState(state);\r\n        console.log(state);\r\n        setloading(true);\r\n        agent.Inquery.submitInquery(state).then((res=>{\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                message.type = \"success\";\r\n                message.message = \"Your Details has been submited. Our agent will contact you soon.\"\r\n            }else{\r\n                message.type = \"error\";\r\n                message.message = \"Something went wrong. Please try again.\"\r\n            }\r\n            setmessage(message);\r\n            setloading(false);\r\n\r\n        }))\r\n    }\r\n    return (\r\n        <>\r\n\r\n        <Modal show={props.isopen} onHide={props.hide} >\r\n\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Enquiry</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {  message.type != \"\"? \r\n                message.type ==\"success\"?\r\n                <Alert key={message.type} variant={\"success\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:<Alert key={message.type} variant={\"danger\"} onClose={() => setmessage({type:\"\",message:\"\"})} dismissible>\r\n                    {message.message}\r\n                </Alert>:\"\"        \r\n                }\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                            <Form.Label>Full Name</Form.Label>\r\n                            <Form.Control onChange={handleChange} type=\"text\" name=\"fullName\"/>\r\n                        </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"email\" onChange={handleChange} name=\"email\" placeholder=\"Enter email\" />\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Business</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"business\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Date of Birth</Form.Label>\r\n                        <DatePicker\r\n                         selected={dobstate} \r\n                         onChange={date=>setdobstate(date)}\r\n                         dateFormat=\"dd/MM/yyyy\"\r\n                         showYearDropdown\r\n                         dateFormatCalendar=\"MMMM\"\r\n                         yearDropdownItemNumber={50}\r\n                         scrollableYearDropdown\r\n                         maxDate={new Date()}\r\n                         />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Gender</Form.Label>\r\n                    <Form.Control name=\"gender\" as=\"select\" onChange={handleChange} defaultValue=\"Choose...\">\r\n                        <option>Choose...</option>\r\n                        <option value=\"male\">Male</option>\r\n                        <option value=\"female\">Female</option>\r\n                    </Form.Control>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                    <Form.Label>Service</Form.Label>\r\n                        <Form.Control onChange={handleChange} type=\"text\" name=\"service\" value={props.serviceType} readOnly/>\r\n                    </Form.Group>                        \r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress1\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange}  name=\"phone\"/>\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Submit\"}\r\n\r\n                    </Button>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InqueryForm\r\n","import React, { Component} from 'react'\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\nimport InqueryForm from '../home/InqueryForm'\r\nimport {Link} from 'react-router-dom';\r\n\r\n  class SectionMenu extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false,\r\n        openEnqueryForm:false,\r\n        serviceType:\"\"\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n      this.setState({\r\n        isopen:this.state.isopen?false:true\r\n      })\r\n    }\r\n    handleEnqueryForm = (serviceType = \"\")=>{\r\n      console.log(serviceType);\r\n      this.setState({\r\n        openEnqueryForm:this.state.openEnqueryForm?false:true,\r\n        serviceType:serviceType\r\n      })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n          <>\r\n            <section className=\"text-center \">\r\n            <div className=\"container\">\r\n              <div className=\"col-md-12 shadow-sm p-5 service \">\r\n                <div className=\"row roww\">\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={this.handleITRPopup}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/itr.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Fill ITR</h5>\r\n                  </div>\r\n                 \r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box \">\r\n                  <Link to=\"/CategoryList\">\r\n                    <img  src={process.env.PUBLIC_URL + '/assets/img/food.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">FOOD</h5></Link>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Catering\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/catering.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Catering</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Balance Sheet\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/finance.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Financial Consultancy</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"Investment Planning\")}>\r\n\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/investment.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">Investment Planning</h5>\r\n                  </div>\r\n                  <div className=\"col-md-2 col-sm-3 col-xs-3 p-2 service-box\" onClick={()=>this.handleEnqueryForm(\"GST filing\")}>\r\n                    <img src={process.env.PUBLIC_URL + '/assets/img/gst.png'} alt=\"\"/>\r\n                    <h5 className=\"my-4\">GST Filing </h5>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n          <InqueryForm isopen={this.state.openEnqueryForm} serviceType={this.state.serviceType} hide={this.handleEnqueryForm}/>         \r\n        </>\r\n        )\r\n    }\r\n}\r\nexport default SectionMenu\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SectionOffers extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"text-center\">\r\n                <div className=\"container\">\r\n                    <h4 className=\"h4-responsive font-weight-bold my-3 text-primary\">Best Offers</h4>\r\n                    <div className=\"row my-5\">\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-1.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 1</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 50% Off\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-2.jpg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 2</h5>\r\n                            <p className=\"grey-text mb-md-0 mb-5 text-primary\">Up to 60% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-4.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">offer 3</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Up to 50% off\r\n                  </p>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <img src={process.env.PUBLIC_URL + '/assets/img/s-3.jpeg'} className=\"img-fluid radius\" alt=\"\" />\r\n                            <h5 className=\"font-weight-bold my-4 text-primary\">Offer 4</h5>\r\n                            <p className=\"grey-text mb-0 text-primary\">Standard EMI Options Available\r\n                  </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\n\r\nfunction LogedInView(props) {\r\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\r\n        return (\r\n\r\n        <li className=\"nav-item\">\r\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default LogedInView\r\n","import React from 'react'\r\nimport { Route, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    LOGOUT\r\n  } from '../../constants/actionTypes';\r\nfunction LogedOutView(props) {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const logout = ()=>{\r\n         dispatch({ type: LOGOUT })\r\n           console.log(\"hollo\");\r\n           history.push(\"/\");\r\n       }\r\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\r\n        let name = props.currentUser.email.split(\"@\");\r\n\r\n        return (<>\r\n            \r\n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\r\n            <li className=\"nav-item\">\r\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\r\n            </li>\r\n                \r\n            </li>:\"\"}            \r\n            <li className=\"nav-item\">\r\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\r\n                    {name[0]}\r\n\r\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \r\n\r\n                    \r\n                    </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\r\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\r\n            </li>\r\n        </>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LogedOutView\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass Header extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n  \r\n    render(){\r\n\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\">\r\n                <div className=\"container\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item\">\r\n                            {/* <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                            </li>\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                                <NavLink activeClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                                \r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <div className=\"view\">\r\n                <div className=\"mask rgba-gradient d-flex justify-content-center align-items-center\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 white-text text-center mx-auto  mb-5 wow fadeInLeft\" data-wow-delay=\"0.3s\">\r\n                                <h1 className=\"my-3 text-center mx-auto font-weight-bold wow fadeInLeft\">Services, on demand.</h1>\r\n\r\n                                <div className=\"ml-auto mr-auto main-search \">\r\n\r\n                                    <form action=\"\" className=\"search-service\">\r\n                                        <input className=\"search-form form-control form-control-lg\" type=\"text\" placeholder=\"Search Services\" />\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport SectionMenu from '../layout/SectionMenu'\r\nimport SectionOffers from '../layout/SectionOffers'\r\nimport Header from '../layout/Header'\r\nimport Footer from '../layout/Footer'\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <SectionMenu />\r\n            {/* <SectionOffers /> */}\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\n\r\nexport default class ListErrors extends Component {\r\n    render() {\r\n        const errors = this.props.errors;\r\n        const statusCode = this.props.statusCode;\r\n        if (errors) {\r\n            return (\r\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\r\n                    {errors}\r\n              </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\n\r\n\r\nclass Registration extends React.Component {    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            userDetails: {},\r\n            errors:\"\",\r\n            statusCode:\"\",\r\n            isLoading:false\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        this.setState({ userDetails: state });\r\n        \r\n    }\r\n    submitForm=() => ev =>{\r\n        ev.preventDefault();\r\n        this.setState({ isLoading: true });\r\n        agent.Auth.register(this.state.userDetails).then((res=>{\r\n            this.setState({ errors: res, statusCode:res.statusCode, isLoading:false});\r\n            if(res.statusCode == 200){\r\n                ev.target.reset();\r\n                //this.props.history.push('/login')\r\n            }\r\n        }));\r\n    }\r\n    render() {\r\n\r\n    return (\r\n        <div className=\"login-div\">\r\n            <ListErrors errors={this.state.errors} statusCode={this.state.statusCode} />\r\n            <Form className=\"login-form\" onSubmit={this.submitForm()}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\" >\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control type=\"phone\" name=\"phone\"  onChange={this.handleChange} required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We'll never share your phone no with anyone else.\r\n                    </Form.Text>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                    <Form.Group as={Col}  controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\"  onChange={this.handleChange} required/>\r\n                    </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.state.isLoading}>\r\n                        \r\n                        {this.state.isLoading ? 'Loading…' : \"Register\"}\r\n                    </Button>\r\n                </Form.Row>\r\n\r\n            </Form>\r\n        </div>\r\n\r\n    )}\r\n}\r\n\r\nexport default Registration\r\n","import { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n\r\nconst Auth = {\r\n    login: (username, password) =>\r\n    superagent.post(`${API_ROOT}/user/login`,  { username, password } ),\r\n  };\r\n  \r\n  export default {Auth};\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader(props) {\r\n    if(props.show){\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\" className={props?.relative?\"loader-relative\":\"loader\"}>\r\n            </Spinner>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component}  from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\nimport user from \"../../models/user\";\r\nimport Loader from '../layout/Loader';\r\nimport {\r\n    UPDATE_FIELD_AUTH,\r\n    LOGIN,\r\n    LOGIN_PAGE_UNLOADED\r\n} from '../../constants/actionTypes';\r\n\r\nclass Login extends Component {\r\n   // let history = useHistory();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={isShowLoader:false};\r\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\r\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\r\n    }\r\n    submitForm=ev=> {\r\n        ev.preventDefault();\r\n        this.setState({isShowLoader:true});\r\n        user.Auth.login(this.props.username, this.props.password).then(res=>{\r\n            this.setState({isShowLoader:false});\r\n            console.log(res);\r\n            this.props.onSubmit(res.body);\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.isLoginSuccess){\r\n            this.props.history.push('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.props.onUnload();\r\n      }\r\n    render() {\r\n        const username = this.props.username;\r\n        const password = this.props.password;\r\n        return (\r\n            <>\r\n            <div className=\"login-div\">\r\n            <Loader show={this.state.isShowLoader} />\r\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\r\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\r\n                <Form className=\"login-form\" onSubmit={this.submitForm}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={this.changeEmail} required/>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={password}  onChange={this.changePassword} required/>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row >\r\n                        <Col>\r\n                        <Button variant=\"primary\" disabled={this.props.inProgress} type=\"submit\">{this.props.inProgress ? 'Loading…' : \"Login\"}</Button>\r\n\r\n                        </Col>\r\n                    </Form.Row>\r\n                    {/* <Form.Row>\r\n                        <Link as={Col} to=\"/registration\" > SignUp</Link>\r\n                    </Form.Row> */}\r\n\r\n                </Form>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeEmail: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\r\n    onChangePassword: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n    onSubmit: (data) =>\r\n        dispatch({ type: LOGIN, payload: data }),\r\n    onUnload: () =>\r\n        dispatch({ type: LOGIN_PAGE_UNLOADED })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React,{useState} from 'react'\r\nimport { Button, Form, Col, Row, Container } from 'react-bootstrap';\r\nimport './Finance.css';\r\nimport agent from '../../agent'\r\n// import {KEY_ID,KEY_SECRET} from '../../constants/paymantConstants'\r\n\r\nfunction FillItr(props) {\r\n    const [state, setstate] = useState({});\r\n    const [loading, setloading] = useState(false);\r\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\r\n    const [isemailinvalid,setiisemailinvalid] = useState(false);\r\n    const [isaadharinvalid,setiisaadharinvalid] = useState(false);\r\n    const [form16, setform16] = useState([]);\r\n    console.log(props);\r\n    const handleChange = (e) => {\r\n        state[e.target.name] = e.target.value;\r\n        setstate(state);\r\n    }\r\n\r\n    const handlePay=()=>{\r\n        setloading(true);\r\n        if(checkValidate()){\r\n            console.log(\"Valid Form\");\r\n            let orderForService = \"Form16\";\r\n            if(props.location.query?.type == \"fill\"){\r\n                orderForService = \"ITR\"\r\n            }\r\n            onlinePayment(orderForService);\r\n        }else{\r\n            console.log(\"invalid from\")\r\n            setloading(false);\r\n\r\n        }\r\n    } \r\n\r\n    const checkValidate=()=>{\r\n        let returnType = true;\r\n        setisphoneinvalid(false);\r\n        setiisemailinvalid(false);            \r\n        setiisaadharinvalid(false);\r\n\r\n        if(state[\"phone\"] ==undefined || state[\"phone\"] ==\"\"){\r\n            setisphoneinvalid(true);\r\n            returnType = false\r\n        }\r\n        if((state[\"email\"] ==undefined || state[\"email\"] ==\"\") && props.location.query?.type == \"fill\" ){\r\n            setiisemailinvalid(true);            \r\n            returnType = false\r\n        } \r\n        if((state[\"aadhar\"] ==undefined || state[\"aadhar\"] ==\"\") && props.location.query?.type == \"fill\"){\r\n            setiisaadharinvalid(true);\r\n            returnType = false\r\n        } \r\n        return returnType;\r\n    } \r\n\r\n    const onlinePayment = (orderForService = \"ITR\")=>{\r\n        let amount = 300;\r\n        agent.Payment.getRazorpayOrderId({amount:amount,orderForService:orderForService}).then((res=>{\r\n            if(res.statusCode == 200){\r\n                console.log(res);\r\n                var options = {\r\n                    \"key\": \"1234\", // Enter the Key ID generated from the Dashboard\r\n                    \"amount\": amount*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n                    \"currency\": \"INR\",\r\n                    \"name\": \"Guest\",\r\n                    \"description\": \"ITR Fill Transaction\",\r\n                    \"image\": \"https://example.com/your_logo\",\r\n                    \"order_id\": res.body.record.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n                    \"handler\": function (response){\r\n                        updatePaymentState(\"success\",response);\r\n                    },                \r\n                    \"theme\": {\r\n                        \"color\": \"#3399cc\"\r\n                    }\r\n                };   \r\n                // console.log(options); \r\n                const rzp1 = new window.Razorpay(options);\r\n                rzp1.on('payment.failed', function (response){\r\n                    updatePaymentState(\"failed\",response);\r\n    \r\n                });            \r\n                rzp1.open();\r\n    \r\n            }else{\r\n                setloading(false);\r\n\r\n                alert(res.body)\r\n\r\n            }\r\n        }));\r\n    \r\n    }\r\n    const updatePaymentState=(status,obj)=>{\r\n        let orderId = \"\";\r\n        let paymentObj = {\r\n            razorpay_order_id:\"\",\r\n            paymentStatus:\"\",\r\n            paymentResponse:\"\"\r\n        }\r\n        if(status == \"success\"){\r\n            paymentObj.razorpay_order_id = obj.razorpay_order_id;\r\n            paymentObj.paymentStatus = status;\r\n            paymentObj.paymentResponse = obj;\r\n        }\r\n        if(status == \"failed\"){\r\n            paymentObj.razorpay_order_id = obj.error.metadata.order_id;\r\n            paymentObj.paymentStatus = status;\r\n            paymentObj.paymentResponse = obj;\r\n        }\r\n        try{\r\n            agent.Payment.updatePaymentStatus(paymentObj).then((res=>{\r\n                if(res.statusCode ==200 && status == \"success\"){\r\n                    if(props.location.query?.type == \"fill\"){\r\n                        handleSubmit(paymentObj.razorpay_order_id);\r\n                    }else{\r\n                        onFileUpload(paymentObj.razorpay_order_id);\r\n                    }\r\n                }\r\n                if(res.statusCode ==200 && status == \"failed\"){\r\n                    setloading(false);\r\n                    props.history.push('/orderFailed')\r\n    \r\n                }\r\n    \r\n            }),(err)=>{\r\n                console.log(err.response.body.message);\r\n            });\r\n        }catch(err){\r\n            alert(err);\r\n        }\r\n    }\r\n    const handleSubmit = ( razorpay_order_id, paymentMode=\"online\") =>{\r\n        state[\"razorpay_order_id\"] = razorpay_order_id;\r\n        state[\"paymentMode\"] = paymentMode;\r\n        setstate(state);\r\n        agent.Finance.fillItr(state).then((res=>{\r\n            setloading(false);\r\n            if(res.statusCode ==200){\r\n                props.history.push('/orderSuccess');\r\n            }\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });\r\n    } \r\n    const handleFileUpload = (e)=>{\r\n        setform16(e.target.files[0]);   \r\n    }\r\n    const onFileUpload=(razorpay_order_id)=>{\r\n        const formData = new FormData(); \r\n        formData.append( \r\n          \"myFile\", \r\n          form16, \r\n          form16.name\r\n        ); \r\n        formData.append(\"razorpay_order_id\",razorpay_order_id);        \r\n        formData.append(\"phone\",state[\"phone\"]);        \r\n        agent.Finance.uploadForm16(formData).then((res=>{\r\n            setloading(false);\r\n            if(res.statusCode ==200){\r\n                props.history.push('/orderSuccess');\r\n            }\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });   \r\n\r\n    }\r\n    if(props.location.query?.type == \"fill\"){\r\n        return (\r\n            <>\r\n            <h4 className=\"py-5 text-center\"><b>Fill ITR</b></h4>\r\n            <Form className=\"m-5\">\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">First name</Form.Label>\r\n                        <Form.Control name=\"firstName\" onChange={handleChange}  type=\"text\"  />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridlastName\">\r\n                        <Form.Label>Last name</Form.Label>\r\n                        <Form.Control name=\"lastName\" onChange={handleChange} type=\"text\"  />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">Phone*</Form.Label>\r\n                        <Form.Control name=\"phone\" onChange={handleChange}  type=\"text\"  isInvalid={isphoneinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a phone number.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n    \r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridBusiness\">\r\n                        <Form.Label>Business Name</Form.Label>\r\n                        <Form.Control name=\"business\" onChange={handleChange} type=\"text\" placeholder=\"ABC limited\" />\r\n                    </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                    <Form.Group  as={Col} controlId=\"formGridEmail\">\r\n                        <Form.Label>Email*</Form.Label>\r\n                        <Form.Control name=\"email\" onChange={handleChange} type=\"email\" placeholder=\"you@example.com\" isInvalid={isemailinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a Email.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                <Form.Group as={Col} controlId=\"formGridAadhar\">\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control name=\"address\" onChange={handleChange} as=\"textarea\" rows={3} />\r\n                    </Form.Group>\r\n                    </Form.Row><Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridAadhar\">\r\n                        <Form.Label>Aadhar Number*</Form.Label>\r\n                        <Form.Control name=\"aadhar\" onChange={handleChange} type=\"text\" isInvalid={isaadharinvalid}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide aadhar number.\r\n                        </Form.Control.Feedback>                    \r\n    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                        <Form.Label>Service</Form.Label>\r\n                        <Form.Control name=\"service\" onChange={handleChange} as=\"select\" defaultValue=\"Choose...\">\r\n                            <option>Choose...</option>\r\n                            <option>Balance Sheet</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} controlId=\"formGridAddress\">\r\n                        <Form.Label>PAN Number</Form.Label>\r\n                        <Form.Control name=\"pan\" onChange={handleChange} type=\"text\" />\r\n                    </Form.Group>\r\n    \r\n    \r\n                    <Form.Group as={Col} controlId=\"formGridZip\">\r\n                        <Form.Label>Zip</Form.Label>\r\n                        <Form.Control type=\"text\" onChange={handleChange} name=\"zip\"/>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button variant=\"danger\" className=\"center\" type=\"button\" onClick={handlePay} disabled={loading}>\r\n                    {loading ? 'Loading…' : \"Pay Now\"}\r\n                </Button>\r\n            </Form>\r\n            </>\r\n            )\r\n    \r\n    }else{\r\n        return (  <div className=\"login-div\">\r\n                <Form className=\"login-form\">\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n                        <Form.Label variant=\"primary\">Phone*</Form.Label>\r\n                        <Form.Control name=\"phone\" onChange={handleChange}  type=\"text\"  isInvalid={isphoneinvalid}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                            We will contact you at this phone number.\r\n                        </Form.Text>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a phone number.\r\n                        </Form.Control.Feedback>                    \r\n                    </Form.Group>\r\n                </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                        <Form.File id=\"formcheck-api-regular\">\r\n                        <Form.Label variant=\"primary\">Form16*</Form.Label>\r\n                            <Form.File.Input accept=\".pdf\" onChange={handleFileUpload}/>\r\n                        </Form.File>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Only PDF file.\r\n                        </Form.Text>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Button variant=\"danger\"  type=\"button\" onClick={handlePay} disabled={loading}>{loading ? 'Loading…' : \"Pay Now\"}\r\n                    </Button>\r\n                    </Form.Row>\r\n                </Form>\r\n                </div>\r\n    )\r\n    }       \r\n}\r\n\r\nexport default FillItr\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass InnerHeader extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n    render(){\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\r\n                <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                                {/* <a className=\"nav-link\" href=\"#\">Home\r\n                    <span className=\"sr-only\">(current)</span>\r\n                                </a> */}\r\n                            {/* </li> */}\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\"> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\r\n                                {/* <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n\r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\r\n","import React from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, Nav} from 'react-bootstrap';\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nexport default function Leftbar() {\r\n    const auth = useSelector(state => state.auth);\r\n    return (\r\n        // <Col md={2} id=\"sidebar-col\" className=\"pr-0\">\r\n            <nav id=\"sidebar\">\r\n                {/* <div className=\"sidebar-header\">\r\n                    <h5>AA2 MutualHelp</h5>\r\n                </div> */}\r\n                <Nav className=\"list-unstyled components flex-column\" as=\"ul\" >\r\n                <Nav.Item as=\"li\" className=\"active\">\r\n                <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                     Dashboard\r\n            </Nav.Link>\r\n            </LinkContainer>\r\n                </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                   \r\n                        <Nav.Link href=\"#homeSubmenu\" className=\"dropdown-toggle\" data-toggle=\"collapse\" aria-expanded=\"false\">Master Record</Nav.Link>\r\n                        \r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"homeSubmenu\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/memberGroup\">\r\n                                <Nav.Link href=\"/home\">Member Group</Nav.Link>\r\n                                </LinkContainer>\r\n                                {/* <NavLink to=\"/memberGroup\">Member Group</NavLink> */}\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/member\">\r\n                                <Nav.Link eventKey=\"link-1\">Members</Nav.Link>\r\n                            </LinkContainer>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#groupLoan\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Group Loan</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"groupLoan\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/emiCalculator\">\r\n                                <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/scheme\">\r\n                                <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/loanApplication\">\r\n                                <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/loanApproval\">\r\n                                <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>:\"\"}\r\n                            {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/disburseLoan\">\r\n                                <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>:\"\"}\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/allApplications\">\r\n                                <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#processingFee\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"processingFee\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"#\">List Processing Fee</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#expense\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Expense</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"expense\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <Nav.Link href=\"#\">List Expense</Nav.Link>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#payments\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Payment to collect</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"payments\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <LinkContainer to=\"/dueEmis\">\r\n                                    <Nav.Link href=\"#\">Payment to collect(Loan)</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </nav>\r\n        // </Col>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router';\r\nimport {LOGOUT} from '../../constants/actionTypes';\r\n\r\nexport default function TopNav(props) {\r\nconst auth = useSelector(state => state.auth);\r\nconst dispatch = useDispatch();\r\nlet history = useHistory();\r\nconst logout = ()=>{\r\n     dispatch({ type: LOGOUT })\r\n       history.push(\"/login\");\r\n   }\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\r\n               \r\n                <h4 id=\"logo-web\" className=\"mr-4\">AA2 MutualHelp</h4>\r\n            <button type=\"button\" onClick={props.toggleSidebar} class=\"btn btn-dark\">\r\n                <i class=\"fas fa-align-left\"></i>\r\n            </button>\r\n            <h4 id=\"logo-mobile\" className=\"\">AA2 MutualHelp</h4>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link href=\"#\">{auth.username}</Nav.Link>\r\n                    <Nav.Link eventKey={2} onClick={logout}>\r\n                        Logout\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport InnerHeader from './InnerHeader';\r\nimport Footer from './Footer';\r\nimport Leftbar from './Leftbar';\r\nimport TopNav from './TopNav';\r\nimport { useHistory } from 'react-router';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst InnerLayout = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const [showSidebar, setshowSidebar] = useState(true)\r\n    useEffect(() => {\r\n        setshowSidebar(window.innerWidth <= 768 ? false : true);\r\n        checkLogin();\r\n    }, [Component]);\r\n    const toggleSidebar = () => {\r\n\r\n        console.log(window);\r\n        setshowSidebar(showSidebar ? false : true)\r\n        // this.setState({\r\n        //   isopen:this.state.isopen?false:true\r\n        // })\r\n    }\r\n    const checkLogin = () =>{\r\n        let jwt = \"\";\r\n         jwt = localStorage.getItem(\"jwt\");\r\n         console.log(jwt);\r\n         if(jwt==\"\" || !auth.hasOwnProperty(\"username\")){\r\n             history.push(\"/login\");\r\n         }\r\n    }\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <>\r\n            \r\n            <Container fluid className=\"pl-0 pr-0\">\r\n            <Row>\r\n                <Col>\r\n                <TopNav toggleSidebar={toggleSidebar} />\r\n                </Col>\r\n            \r\n            </Row>\r\n                \r\n                <Row>\r\n                    \r\n                        {showSidebar ?<Col md={2} sm={2} id=\"sidebar-col\" className=\"bg-info\"><Leftbar/></Col> : \"\"}\r\n                        \r\n                   \r\n                    <Col sm={showSidebar ? 10 : 12} >\r\n                        <div id=\"content\">\r\n\r\n                            <Component {...props} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* <Footer /> */}\r\n                </Container>\r\n            </>\r\n        )} />)\r\n}\r\n\r\nexport default InnerLayout\r\n","import React ,{Component}from 'react'\r\nimport { Badge } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    ADD_ITEM_INITIAL,\r\n    DECREASE_QUANTITY,\r\n    INCREASE_QUANTITY\r\n} from '../../constants/actionTypes';\r\n \r\nclass AddCartButton extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(props);\r\n        this.initialAddItem = (item) => ev => {\r\n            ev.preventDefault();\r\n            this.props.addItemInitial(item);\r\n        };\r\n        this.increaseQuantity = (productId) =>ev =>{\r\n            ev.preventDefault();\r\n            this.props.increaseQuantity(productId);\r\n        }\r\n        this.decreaseQuantity = (productId) =>ev =>{\r\n            ev.preventDefault();\r\n            this.props.decreaseQuantity(productId);\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextprops){\r\n    }\r\n    render(){\r\n    let arr = []\r\n     arr= this.props.addedItem.filter(record=>record.productId==this.props.item._id);\r\n    let length = arr.length;\r\n    console.log(length);\r\n    console.log(this.props.addedItem);\r\n    if(!length){\r\n        return (\r\n            <Badge variant=\"danger\" className=\"pointer\" onClick={this.initialAddItem(this.props.item)}>ADD+</Badge> \r\n        )\r\n    }else{\r\n        return (\r\n            <>\r\n                <Badge className=\"pointer\" variant=\"primary\" onClick={this.decreaseQuantity(arr[0].productId)}>-</Badge> \r\n                <Badge variant=\"danger\">{arr[0].quantity}</Badge> \r\n                <Badge className=\"pointer\" variant=\"primary\" onClick={this.increaseQuantity(arr[0].productId)}>+</Badge> \r\n            </>\r\n        )}\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.order });\r\nconst mapDispatchToProps = dispatch => ({\r\n    addItemInitial: item =>\r\n        dispatch({ type: ADD_ITEM_INITIAL, item }),\r\n    increaseQuantity: productId =>\r\n        dispatch({ type: INCREASE_QUANTITY, productId }),\r\n    decreaseQuantity: productId =>\r\n        dispatch({ type: DECREASE_QUANTITY, productId }),\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddCartButton)\r\n","import React, { Component } from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport AddCartButton from './AddCartButton';\r\nimport Loader from '../layout/Loader';\r\nexport class CategoryList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            categoryList:[],\r\n            itemList:[],\r\n            showloader:false,\r\n            selectedTab:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n     // this.getCategories();\r\n     //this.getInitialData();\r\n    }\r\n    selectItem(ev){\r\n        console.log(ev);\r\n    }\r\n     getInitialData=async ()=>{\r\n        this.setState({\r\n            showloader:true\r\n        })\r\n\r\n        const [categories, products] =await Promise.all(agent.Order.getCatgoryInitialData())\r\n        if(categories.statusCode == 200){\r\n            this.setState({\r\n                categoryList:categories.body.record\r\n            })\r\n        }\r\n        if(products.statusCode == 200){\r\n            this.setState({\r\n                itemList:products.body.record\r\n            })\r\n        }\r\n        this.setState({\r\n            showloader:false\r\n        })\r\n\r\n\r\n    }\r\n    changeCategory= (catName=\"\") => ev =>{\r\n        this.setState({\r\n            showloader:true\r\n        })\r\n        this.setState({\r\n            selectedTab:catName\r\n        })\r\n        agent.Order.getProductsByCat(catName).then(products=>{\r\n            this.setState({\r\n                showloader:false\r\n            })\r\n    \r\n            if(products.statusCode == 200){\r\n                this.setState({\r\n                    itemList:products.body.record\r\n                })\r\n            }\r\n    \r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col  md={3} className=\"p-4\" >\r\n                            <ListGroup defaultActiveKey=\"all\">\r\n                            <ListGroup.Item className=\"mobile-list\" key={\"all\"} active={this.state.selectedTab==\"\"?true:false}  onClick={this.changeCategory()}>All category</ListGroup.Item>\r\n                                {this.state.categoryList.map(\r\n                                    (item,index)=><ListGroup.Item className=\"mobile-list\" key={index} active={this.state.selectedTab==item.name?true:false}  action onClick={this.changeCategory(item.name)}>{item.name}</ListGroup.Item>\r\n                                    )}\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={9} className=\"p-4 production-col\" >\r\n                        <Loader show={this.state.showloader}/>\r\n                            <CardColumns>\r\n                            {this.state.itemList.map(\r\n                                (item,index)=> \r\n                                <Card border=\"danger\" key={index}>\r\n                                    <Card.Img variant=\"top\" src={item.imageUrl} />\r\n                                    <Card.Body>\r\n                                        <Card.Title>{item.title}</Card.Title>\r\n                                        <Card.Subtitle className=\"mb-2 text-muted\"><span>&#8377;</span>{item.price}</Card.Subtitle>\r\n                                        <Card.Text>\r\n                                        {item.description}\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                    <Card.Footer>\r\n                                        <AddCartButton  item={item}/>\r\n                                    </Card.Footer>\r\n                                </Card>\r\n                                    )}\r\n\r\n                            </CardColumns>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CategoryList\r\n","import React, {Component} from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport AddCartButton from './AddCartButton'\r\nclass MyCart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        const priceTotal = this.props.addedItem.reduce(\r\n            (prevValue, currentValue) => prevValue + (currentValue.quantity * parseInt(currentValue.perItemPrice)),\r\n            0\r\n          );\r\n        \r\n        return (\r\n            <Table responsive striped bordered className=\"cart-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Product</th>\r\n                        <th>Quantity</th>\r\n                        <th>Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.addedItem.map(record=>\r\n                    <tr>\r\n                        <td>{record.item.title}</td>\r\n                        <td><AddCartButton  item={record.item}/></td>\r\n                        <td><span>&#8377;</span>{parseInt(record.perItemPrice)*record.quantity}</td>\r\n                    </tr>\r\n                    \r\n                    )}\r\n                </tbody>\r\n                <tfoot>\r\n                    {/* <tr>\r\n                        <td colSpan=\"2\">\r\n                            Prime member discount\r\n                        </td>\r\n                        <td>\r\n                            10%\r\n                        </td>\r\n    \r\n                    </tr> */}\r\n                    <tr>\r\n                        <td colSpan=\"2\">\r\n                            <h5>Total</h5>\r\n                        </td>\r\n                        <td>\r\n                        <span>&#8377;</span> {priceTotal}\r\n                        </td>\r\n    \r\n                    </tr>\r\n                </tfoot>\r\n            </Table>)\r\n    \r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({ ...state.order });\r\nconst mapDispatchToProps = dispatch => ({\r\n    // addItemInitial: item =>\r\n    //     dispatch({ type: ADD_ITEM_INITIAL, item }),\r\n    // increaseQuantity: productId =>\r\n    //     dispatch({ type: INCREASE_QUANTITY, productId }),\r\n    // decreaseQuantity: productId =>\r\n    //     dispatch({ type: DECREASE_QUANTITY, productId }),\r\n});\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MyCart)\r\n","import React,{useState} from 'react'\r\nimport { Table, Container, Row, Col,Form, Button, Modal} from 'react-bootstrap';\r\nimport { useSelector } from \"react-redux\";\r\nimport {Link} from 'react-router-dom';\r\nimport agent from '../../agent'\r\n// import {KEY_ID,KEY_SECRET} from '../../constants/paymantConstants'\r\n//import Razorpay from 'razorpay';\r\nfunction PlaceOrder(props) {\r\n    const order = useSelector(state => state.order);\r\n    const authState = useSelector(state => state.auth);\r\n    const [shipingDetails, setShipingDetails] = useState([]);\r\n    const [showPayementModel, setshowPayementModel] = useState(false);\r\n    const [isphoneinvalid,setisphoneinvalid] = useState(false);\r\n    const [isnameinvalid,setisnameinvalid] = useState(false);\r\n    const [isaddressinvalid,setisaddressinvalid] = useState(false);\r\n\r\n    let totalQuantity = 0;\r\n    let totalPrice = 0;\r\n\r\n    const products = order.addedItem.map(record=>                        \r\n    <tr>\r\n        <td>\r\n        {record.quantity} x {record.item.title}\r\n        </td>\r\n        <td>\r\n        <span>&#8377;</span> {record.quantity*parseInt(record. perItemPrice)}\r\n        </td>\r\n    </tr>\r\n);\r\nconst handleSubmit=(paymentMode=\"COD\", razorpay_order_id=\"\")=>{\r\n    let shippingObj = {\r\n        name:shipingDetails[\"name\"],\r\n        address:shipingDetails[\"address\"],\r\n        phone:shipingDetails[\"phone\"],\r\n        city:\"barh\",\r\n        street:shipingDetails[\"street\"],\r\n        landmark:shipingDetails[\"landmark\"]\r\n    } \r\n    let data = {\r\n        items:order.addedItem, \r\n        shipping:shippingObj,\r\n        paymentMode:paymentMode,\r\n        razorpay_order_id:razorpay_order_id\r\n    };\r\n    agent.Order.placeOrder(data).then((res=>{\r\n        if(res.statusCode == 200){\r\n            props.history.push('/orderSuccess')\r\n        }\r\n    }),(err)=>{\r\n        alert(err.response.body.message);\r\n    });\r\n\r\n}\r\nconst selectPaymentMode = ()=>{\r\n    if(checkValidate()){\r\n        setshowPayementModel(showPayementModel?false:true);\r\n    }\r\n}\r\nconst handleChange = (e) => {\r\n    shipingDetails[e.target.name] = e.target.value;\r\n    setShipingDetails(shipingDetails);\r\n}\r\n\r\norder.addedItem.forEach(element => {\r\n    totalQuantity += element.quantity;\r\n    totalPrice += parseInt(element.quantity)*element.perItemPrice;\r\n});\r\nif(authState?.errors?.body.record.isPrimeMember){\r\n    totalPrice -= ((totalPrice*10)/100)\r\n}\r\nconst onlinePayment = ()=>{\r\n    agent.Payment.getRazorpayOrderId({amount:totalPrice,orderForService:\"Food Order\"}).then((res=>{\r\n        if(res.statusCode == 200){\r\n            console.log(res);\r\n            var options = {\r\n                \"key\": \"123\", // Enter the Key ID generated from the Dashboard\r\n                \"amount\": res.body.record.amount*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\r\n                \"currency\": \"INR\",\r\n                \"name\": \"Guest\",\r\n                \"description\": \"Food Order Transaction\",\r\n                \"image\": \"https://example.com/your_logo\",\r\n                \"order_id\": res.body.record.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\r\n                \"handler\": function (response){\r\n                    updatePaymentState(\"success\",response);\r\n                },                \r\n                \"theme\": {\r\n                    \"color\": \"#3399cc\"\r\n                }\r\n            };   \r\n            const rzp1 = new window.Razorpay(options);\r\n            rzp1.on('payment.failed', function (response){\r\n                updatePaymentState(\"failed\",response);\r\n\r\n            });            \r\n            rzp1.open();\r\n\r\n        }else{\r\n            alert(res.body)\r\n        }\r\n    }));\r\n\r\n}\r\nconst updatePaymentState=(status,obj)=>{\r\n    console.log(\"status\",status);\r\n    console.log(\"returnobj\",obj);\r\n    let orderId = \"\";\r\n    let paymentObj = {\r\n        razorpay_order_id:\"\",\r\n        paymentStatus:\"\",\r\n        paymentResponse:\"\"\r\n    }\r\n    if(status == \"success\"){\r\n        paymentObj.razorpay_order_id = obj.razorpay_order_id;\r\n        paymentObj.paymentStatus = status;\r\n        paymentObj.paymentResponse = obj;\r\n    }\r\n    if(status == \"failed\"){\r\n        paymentObj.razorpay_order_id = obj.error.metadata.order_id;\r\n        paymentObj.paymentStatus = status;\r\n        paymentObj.paymentResponse = obj;\r\n    }\r\n    try{\r\n        agent.Payment.updatePaymentStatus(paymentObj).then((res=>{\r\n            console.log(res.body.record)\r\n            if(res.statusCode ==200 && status == \"success\"){\r\n                handleSubmit(\"online\",paymentObj.razorpay_order_id);\r\n            }\r\n            if(res.statusCode ==200 && status == \"failed\"){\r\n                props.history.push('/orderFailed')\r\n\r\n            }\r\n\r\n        }),(err)=>{\r\n            console.log(err.response.body.message);\r\n        });\r\n    }catch(err){\r\n        alert(err);\r\n    }\r\n}\r\nconst checkValidate=()=>{\r\n    let returnType = true;\r\n    setisnameinvalid(false);\r\n    setisaddressinvalid(false);\r\n    setisphoneinvalid(false);\r\n\r\n    if((shipingDetails[\"name\"] ==undefined || shipingDetails[\"name\"] ==\"\")){\r\n        setisnameinvalid(true);            \r\n        returnType = false\r\n    } \r\n\r\n    if(shipingDetails[\"phone\"] ==undefined || shipingDetails[\"phone\"] ==\"\"){\r\n        setisphoneinvalid(true);\r\n        returnType = false\r\n    }\r\n    if((shipingDetails[\"address\"] ==undefined || shipingDetails[\"address\"] ==\"\") ){\r\n        setisaddressinvalid(true);            \r\n        returnType = false\r\n    } \r\n    return returnType;\r\n} \r\n\r\nconst token = agent.getToken();\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n            <Row className=\"p-3 order-summary\">\r\n                <Col md={6} >\r\n                    <h4>Shipping Details</h4>\r\n                    <Form>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\" >\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"name\"  onChange={handleChange} isInvalid={isnameinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your name.\r\n                            </Form.Control.Feedback>                    \r\n\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"address\" placeholder=\"Line 1\" onChange={handleChange} isInvalid={isaddressinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your address.\r\n                            </Form.Control.Feedback>                    \r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Street/Mohalla</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"street\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Landmark</Form.Label>\r\n                            <Form.Control type=\"textarea\" name=\"landmark\" onChange={handleChange} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Mobile no.</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"phone\"  onChange={handleChange} isInvalid={isphoneinvalid}/>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide your phone no..\r\n                            </Form.Control.Feedback>                    \r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control type=\"text\"  name=\"city\" onChange={handleChange} value=\"barh\" readOnly/>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <Button variant=\"danger\" type=\"button\"  onClick={(ev)=>selectPaymentMode()}>\r\n                            Place Order\r\n                        </Button>\r\n                            {/* {token==null?<Form.Label>Please <Link to=\"/login\" className=\"underline\">login</Link> for place order </Form.Label>:\"\"} */}\r\n                            \r\n                        </Form.Group>\r\n                    </Form>               \r\n                     </Col>\r\n                <Col md={6} >\r\n                    <p>Order Summary</p>\r\n                    <h5>You have {totalQuantity} items in your food cart</h5>\r\n                    <Table borderless>\r\n                        <tbody className=\"order-summary-border\">\r\n                            {products}\r\n                        </tbody>\r\n                        <tfoot >\r\n                            {authState?.errors?.body.record.isPrimeMember?                            <tr>\r\n                                <td>\r\n                                    <b>Prime member discount</b>\r\n                                </td>\r\n                                <td>\r\n                                    10%\r\n                                </td>\r\n                            </tr>:\"\"}\r\n                            <tr>\r\n                                <td>\r\n                                    <b>Total</b>\r\n                                </td>\r\n                                <td>\r\n                                <span>&#8377;</span> {totalPrice}\r\n                                </td>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </Table>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        <Modal show={showPayementModel} onHide={selectPaymentMode} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Payment Mode</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Button variant=\"success\" onClick={()=>handleSubmit()}>Cash on Delivery</Button>\r\n            <Button variant=\"primary\"onClick={onlinePayment}>Pay Now</Button>\r\n\r\n            </Modal.Body>\r\n        </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrder\r\n","import React from 'react'\r\nimport { Alert, Button} from 'react-bootstrap';\r\nimport {useDispatch } from \"react-redux\";\r\nimport orderR from '../../reducers/order';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {\r\n    RESET_ORDER\r\n} from '../../constants/actionTypes';\r\n\r\nfunction OrderSuccess() {\r\n    // const [show, setShow] = useState(true);\r\n    const dispatch = useDispatch();\r\n    dispatch({type:RESET_ORDER})\r\n    return (\r\n      <>\r\n        <Alert show={true} className=\"login-div\">\r\n          <Alert.Heading>Success!</Alert.Heading>\r\n          <p>\r\n         Our representative will call you for order confirmation within 2 minutes. If you not get a call please dial <b>9990708074</b>.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n              <Link to=\"/\">\r\n              <Button variant=\"danger\">\r\n              Ok\r\n            </Button>\r\n\r\n              </Link>\r\n          </div>\r\n        </Alert>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OrderSuccess\r\n","import React,{useState,useEffect, useMemo} from 'react'\r\nimport { Table, Nav, Button, Modal } from 'react-bootstrap';\r\nimport agent from '../../agent'\r\nimport {Link} from 'react-router-dom';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\nfunction CategoryManagement(props) {\r\n      const initialState = {\r\n          categoryList:[]\r\n      }\r\n      const [state, setstate] = useState([]) \r\n      const [show, setShow] = useState(false);\r\n      const [alert, setalert] = useState({heading:\"\",message:\"\",data:{}});\r\n        const handleClose = (action) => {\r\n            if(action==\"yes\"){\r\n                props.showLoader(true);\r\n                agent.Order.deleteCategory(alert.data.name).then((res=>{\r\n                    props.showLoader(false);\r\n                    console.log(res);\r\n                    if(res.statusCode == 200){\r\n                        getCategories()\r\n                    }else{\r\n                    }\r\n                }));\r\n        \r\n            }\r\n            setShow(false)\r\n        };\r\n      const handleShow = () => setShow(true);\r\n    \r\n      useEffect(() => {\r\n        if(props.selectedTab==\"categories\"){\r\n            getCategories()\r\n        }\r\n    },[props.selectedTab])\r\n\r\n    const getCategories =()=>{\r\n        console.log(\"category run\")\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res=>{\r\n            props.showLoader(false);\r\n            if(res.statusCode == 200){\r\n                setstate(res.body.record);\r\n            }else{\r\n                setstate([]);\r\n            }\r\n        }));\r\n    }\r\n    const deleteCategory = (data)=>{\r\n        console.log(data);\r\n        setalert({\r\n            heading:`Delete Category: ${data.name}`,\r\n            message:`Are you sure you want to delete category: ${data.name}`,\r\n            data:data\r\n        })\r\n        handleShow();    \r\n    }\r\n    const data = useMemo(\r\n        () => \r\n            state.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.name,\r\n                col3:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [state]\r\n      )   \r\n      const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Name',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col3',\r\n          },\r\n\r\n        ],\r\n        []\r\n      )    \r\n      \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n    if(props.selectedTab == \"categories\"){\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={()=>props.changeTab(\"addCategory\")} variant=\"danger\">Add Category</Button>\r\n                <Table {...getTableProps()} responsive>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                            >\r\n                                {column.render('Header')}\r\n                                <span>\r\n                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                </span>\r\n\r\n                            </th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col3\"){\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }else{\r\n                                    return (\r\n                                        <td>\r\n                                        <span onClick={()=>deleteCategory(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </td>\r\n        \r\n                                    )\r\n                                }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n    <div>\r\n     <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n        Previous Page\r\n      </button>\r\n       <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n         Next Page\r\n       </button>\r\n       <div>\r\n         Page{' '}\r\n         <em>\r\n           {pageIndex + 1} of {pageOptions.length}\r\n         </em>\r\n       </div>\r\n     </div>                                              \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{alert.heading}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{alert.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\r\n                        Cancel\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal> \r\n            </>)\r\n    \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default CategoryManagement\r\n","import React, { useEffect, useState } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\n\r\nfunction OrderHistory(props) {\r\n    //let active = 0;\r\n    let items = [];\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"orders\"){\r\n            getOrders()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const [orderHistory, setorderHistory] = useState([])\r\n    const [selectedorder, setselectedorder] = useState([]);\r\n    const [totalPage, settotalPage] = useState(0);\r\n    const [isopenpopup, setisopenpopup] = useState(false);\r\n    const [selectedPage,setselectedPage] = useState(0);\r\n    const handleClose = () => setisopenpopup(false);\r\n    for (let number = 0; number <= totalPage; number++) {\r\n        if(totalPage >0){\r\n            items.push(\r\n                <Pagination.Item onClick={() => changePage(number)} key={number} active={number == selectedPage}>\r\n                  {number+1}\r\n                </Pagination.Item>,\r\n              );\r\n        }\r\n      }         \r\n      const paginationBasic = (\r\n        <div>\r\n          <Pagination>{items}</Pagination>\r\n        </div>\r\n      ); \r\n\r\n    const viewOrderPopUp = (record) => {\r\n        setselectedorder(record);\r\n        setisopenpopup(true);\r\n    }\r\n    let history = useHistory();\r\n    const getOrders = (page=0) => {\r\n        props.showLoader(true);\r\n        agent.Order.getOrdersHistoryAdmin(page).then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record)\r\n            setorderHistory(res.body.record);\r\n            let totalRecord = res.body.totalOrders;\r\n            let totalPage = parseInt(res.body.totalOrders)/10;\r\n            console.log(\"totalPage\",totalPage);\r\n            settotalPage(totalPage);\r\n        }), (err) => {\r\n            console.log(err.response.body.message);\r\n            if (err.response.body.message == \"jwt must be provided\") {\r\n                console.log(\"login required\");\r\n                history.push(\"/login\");\r\n            }\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const changePage=(number) =>{\r\n        console.log(\"page\",number);\r\n        setselectedPage(number);\r\n        getOrders(number);\r\n    }\r\n    if (props.selectedTab == \"orders\") {\r\n        return (\r\n            <>\r\n                <Table responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Customer</th>\r\n                            <th>Date</th>\r\n                            <th>Details</th>\r\n                            <th>Number</th>\r\n                            <th>Action</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orderHistory.map((record, index) =>\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{record.shipping.name}</td>\r\n                                <td>{record.datePlaced}</td>\r\n                                <td>{record.items.map(itm => <span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                                <td>{record.shipping.phone}</td>\r\n\r\n                                <td>\r\n                                    <Button type=\"button\" onClick={() => viewOrderPopUp(record)}>View</Button>\r\n                                </td>\r\n                            </tr>\r\n\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n                {paginationBasic}\r\n                <Modal show={isopenpopup} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Order Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"6\"><h4>Shipping Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                                    <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                                    <td><b>Street:</b> {selectedorder?.shipping?.street}</td>\r\n                                    <td><b>Landmark:</b> {selectedorder?.shipping?.landmark}</td>\r\n\r\n                                    <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                                    <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                            <tbody>{selectedorder?.items?.map(itm => <tr>\r\n                                <td><b>Title:</b> {itm.item.title}</td>\r\n                                <td><b>Description:</b> {itm.item.description}</td>\r\n                                <td><b>Quantity:</b> {itm.quantity}</td>\r\n                                <td><b>Total Price:</b> {parseInt(itm.quantity) * itm.perItemPrice}</td>\r\n                            </tr>)}\r\n                            </tbody>\r\n                        </Table>\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Payment Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>Payment Mode: </b>{selectedorder.paymentMode}</td>\r\n                                    <td><b>Razorpay Order id: </b>{selectedorder.razorpay_order_id}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n\r\n\r\n                        <Table striped bordered hover responsive>\r\n                            <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                            <tbody>\r\n                                {selectedorder.isDiscountApplied ? <tr>\r\n                                    <td>\r\n                                        <b>\r\n                                            Prime Member Discount:\r\n                                </b>\r\n                                    </td>\r\n                                    <td>10%</td>\r\n                                </tr> : \"\"}\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Total Bill Amount</b>\r\n                                    </td>\r\n                                    <td>{selectedorder.totalBillAmount}</td>\r\n                                </tr>\r\n                            </tbody>\r\n\r\n                        </Table>\r\n\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n            </>\r\n        )\r\n\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default OrderHistory\r\n","import React,{useState} from 'react'\r\nimport { Button,Form, Col} from 'react-bootstrap';\r\nimport agent from '../../agent'\r\n\r\nfunction AddCategory(props) {\r\n    const [state, setstate] = useState(\"\")\r\n    const handleSubmit=(ev) =>{\r\n        props.showLoader(false);\r\n        agent.Order.addCategory({name:state}).then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                console.log(props);\r\n                props.changeTab(\"categories\");\r\n            }else{\r\n                //setstate([]);\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n    const handleChange = (e) => {\r\n        setstate(e.target.value);\r\n    }    \r\n    if (props.selectedTab == \"addCategory\") {\r\n\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                <Form.Group as={Col} md=\"4\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Category Name:</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"\" onChange={handleChange}/>\r\n                </Form.Group>\r\n\r\n                </Form.Row>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n                </Button>\r\n            </Form>\r\n            )\r\n\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default AddCategory\r\n","import React,{useState,useEffect, useMemo} from 'react'\r\nimport { Table, Nav, Pagination, Button, Modal, Image } from 'react-bootstrap';\r\nimport agent from '../../../agent'\r\nimport {Link} from 'react-router-dom';\r\nimport {useDispatch } from \"react-redux\";\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\n\r\nimport {\r\n    STORE_EDIT_PRODUCT\r\n} from '../../../constants/actionTypes';\r\n\r\nfunction ProductManagement(props) {\r\n    \r\n    useEffect(() => {\r\n        if(props.selectedTab==\"products\"){\r\n            getProducts()\r\n        }\r\n    },[props.selectedTab])\r\n\r\n    const [state, setstate] = useState([]) \r\n    const [show, setShow] = useState(false);\r\n    const [alert, setalert] = useState({heading:\"\",message:\"\",data:{}});\r\n    const dispatch = useDispatch()\r\n    \r\n    const getProducts =()=>{\r\n        props.showLoader(true);\r\n        agent.Order.getProducts().then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                setstate(res.body.record);\r\n            }else{\r\n                setstate([]);\r\n            }\r\n        }));\r\n    }\r\n    const handleClose = (action) => {\r\n        if(action==\"yes\"){\r\n            props.showLoader(true);\r\n            agent.Order.deleteProduct(alert.data.title).then((res=>{\r\n                props.showLoader(false);\r\n                if(res.statusCode == 200){\r\n                    getProducts()\r\n                }else{\r\n                }\r\n            }));\r\n    \r\n        }\r\n        setShow(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n    const deleteProduct = (data)=>{\r\n        console.log(data);\r\n        setalert({\r\n            heading:`Delete Product: ${data.title}`,\r\n            message:`Are you sure you want to delete Product: ${data.title}`,\r\n            data:data\r\n        })\r\n        handleShow();    \r\n    }\r\n    const editProduct = (data)=>{\r\n        dispatch({type:STORE_EDIT_PRODUCT,data})\r\n        props.changeTab(\"editProduct\")\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Image',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Title',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Description',\r\n            accessor: 'col4',\r\n          },\r\n          {\r\n            Header: 'Price',\r\n            accessor: 'col5',\r\n          },\r\n          {\r\n            Header: 'Category',\r\n            accessor: 'col6',\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col7',\r\n          },\r\n\r\n        ],\r\n        []\r\n    )    \r\n\r\n    const data = useMemo(\r\n        () => \r\n            state.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.imageUrl,\r\n                col3:record.title,\r\n                col4:record.description,\r\n                col5:record.price,\r\n                col6:record.category,\r\n                col7:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [state]\r\n      )  \r\n\r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n\r\n    if(props.selectedTab == \"products\"){\r\n        return (\r\n            <>\r\n                <Button type=\"button\" onClick={()=>props.changeTab(\"addProduct\")} variant=\"danger\">Add Product</Button>\r\n                <Table {...getTableProps()} responsive>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th\r\n                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                            >\r\n                                {column.render('Header')}\r\n                                <span>\r\n                                {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                </span>\r\n\r\n                            </th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id ==\"col2\"){\r\n                                    return(<td>{cell.value !=\"\"?<Image src={cell.value} className=\"product-image\" thumbnail />:\"No Image\"}</td>)\r\n                                }                                \r\n                                if(cell.column.id !=\"col7\"){\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }else{\r\n                                    return (\r\n                                        <td>\r\n                                        <span onClick={()=>deleteProduct(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-trash\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                        <span className=\"ml-2\" onClick={()=>editProduct(cell.value)}>\r\n                                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-pencil-square\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                            <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\r\n                                            <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\r\n                                            </svg>\r\n                                        </span>\r\n                                    </td>\r\n        \r\n                                    )\r\n                                }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n                <div>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                </div>                                              \r\n                <Modal show={show} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{alert.heading}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>{alert.message}</Modal.Body>\r\n                    <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>handleClose(\"yes\")}>\r\n                        Yes\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={()=>handleClose(\"no\")}>\r\n                        Cancel\r\n                    </Button>\r\n                    </Modal.Footer>\r\n                </Modal>               \r\n            </>)\r\n    \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default ProductManagement\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Button, Form, Col } from 'react-bootstrap';\r\nimport agent from '../../../agent';\r\n\r\nfunction AddProduct(props) {\r\n    const [category, setcategory] = useState([])\r\n    const [state, setState] = useState({})\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"addProduct\"){\r\n            getCategories()\r\n        }\r\n    },[props.selectedTab])\r\n    const getCategories =()=>{\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                //setstate(res.body.record);\r\n                setcategory(res.body.record)\r\n            }else{\r\n                //setstate([]);\r\n                setcategory([])\r\n            }\r\n        }));\r\n    }\r\n    const handleChange = (e) => {\r\n\r\n        //const state = this.state.userDetails\r\n        state[e.target.name] = e.target.value;\r\n        setState(state);\r\n        console.log(state);\r\n        \r\n    }\r\n\r\n    const handleSubmit=(ev) =>{\r\n        props.showLoader(false);\r\n        console.log(state);\r\n        agent.Order.addProducts(state).then((res=>{\r\n            props.showLoader(false);\r\n\r\n            if(res.statusCode == 200){\r\n                //console.log(props);\r\n                props.changeTab(\"products\");\r\n            }else{\r\n                //setstate([]);\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n\r\n    if (props.selectedTab == \"addProduct\") {\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>Select Category</Form.Label>\r\n                <Form.Control as=\"select\" name=\"category\" onChange={handleChange} required>\r\n                <option key={\"\"}>Select Category</option>\r\n                    {category.map(item=><option key={item.name}>{item.name}</option>)}\r\n                </Form.Control>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control type=\"text\"  name=\"title\" onChange={handleChange} required/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} name=\"description\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control type=\"number\" name=\"price\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Form.Row>\r\n            <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>ImageURL</Form.Label>\r\n                <Form.Control type=\"text\"  name=\"imageURL\" onChange={handleChange}/>\r\n            </Form.Group>\r\n            </Form.Row>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n            </Button>    \r\n            </Form>   \r\n         )\r\n        \r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default AddProduct\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap';\r\nimport agent from '../../../agent';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport {\r\n    UPDATE_PRODUCT_FIELD\r\n} from '../../../constants/actionTypes';\r\n\r\nfunction EditProduct(props) {\r\n    const storeProduct = useSelector(state => state.product);\r\n\r\n    const [category, setcategory] = useState([])\r\n    const [state, setState] = useState({})\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (props.selectedTab == \"editProduct\") {\r\n            getCategories()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getCategories = () => {\r\n        props.showLoader(true);\r\n        agent.Order.getCategoryAdmin().then((res => {\r\n            props.showLoader(false);\r\n\r\n            if (res.statusCode == 200) {\r\n                setcategory(res.body.record)\r\n            } else {\r\n                setcategory([])\r\n            }\r\n        }));\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        let data = {key:e.target.name,value:e.target.value}\r\n        dispatch({type:UPDATE_PRODUCT_FIELD,data});\r\n    }\r\n\r\n    const handleSubmit = (ev) => {\r\n        console.log(storeProduct);\r\n        props.showLoader(false);\r\n        agent.Order.editProducts(storeProduct.product).then((res => {\r\n            props.showLoader(false);\r\n            if (res.statusCode == 200) {\r\n                props.changeTab(\"products\");\r\n            } else {\r\n            }\r\n        }));\r\n        ev.preventDefault();\r\n    }\r\n\r\n    if (props.selectedTab == \"editProduct\") {\r\n        return (\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\r\n                        <Form.Label>Select Category</Form.Label>\r\n                        <Form.Control as=\"select\" value={storeProduct.product?.category} name=\"category\" onChange={handleChange} required>\r\n                            <option key={\"\"}>Select Category</option>\r\n                            {category.map(item => <option key={item.name}>{item.name}</option>)}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control type=\"text\" value={storeProduct.product?.title} name=\"title\" onChange={handleChange} required />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control as=\"textarea\" value={storeProduct.product?.description} rows={3} name=\"description\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"number\" value={storeProduct.product?.price} name=\"price\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlInput5\">\r\n                        <Form.Label>ImageURL</Form.Label>\r\n                        <Form.Control type=\"text\" value={storeProduct.product?.imageUrl} name=\"imageUrl\" onChange={handleChange} />\r\n                    </Form.Group>\r\n                </Form.Row>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Save\r\n            </Button>\r\n            </Form>\r\n        )\r\n\r\n    } else {\r\n        return \"\"\r\n    }\r\n}\r\n\r\nexport default EditProduct\r\n","import React, { useEffect, useState,useMemo } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\n\r\nfunction FinanceRequests(props) {\r\n    const [ITRrequests, setITRrequests] = useState([])\r\n    const [isopenpopup, setisopenpopup] = useState(false);\r\n    const [selectedorder, setselectedorder] = useState([]);\r\n\r\n    const handleClose = () => setisopenpopup(false);\r\n\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"finance\"){\r\n            getITRrequests()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getITRrequests = () => {\r\n        props.showLoader(true);\r\n        agent.Finance.getAdminItr().then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record);\r\n            setITRrequests(res.body.record);\r\n        }), (err) => {\r\n            // if (err.response.body.message == \"jwt must be provided\") {\r\n            //     console.log(\"login required\");\r\n            //     history.push(\"/login\");\r\n            // }\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'FirstName',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'LastName',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Phone',\r\n            accessor: 'col4',\r\n          },\r\n          {\r\n            Header: 'Email',\r\n            accessor: 'col5',\r\n          },\r\n          // {\r\n          //   Header: 'Address',\r\n          //   accessor: 'col6',\r\n          // },\r\n          // {\r\n          //   Header: 'Aadhar',\r\n          //   accessor: 'col7',\r\n          // },\r\n          // {\r\n          //   Header: 'Business',\r\n          //   accessor: 'col8',\r\n          // },\r\n          // {\r\n          //   Header: 'Zip',\r\n          //   accessor: 'col9',\r\n          // },\r\n          // {\r\n          //   Header: 'Service',\r\n          //   accessor: 'col10',\r\n          // },\r\n          {\r\n            Header:'Action',\r\n            accessor: 'col6'\r\n          }\r\n        ],\r\n        []\r\n    )    \r\n    const data = useMemo(\r\n        () => \r\n        ITRrequests.map((record,index)=>\r\n                { return {col1:index+1,\r\n                col2:record.firstName,\r\n                col3:record.lastName,\r\n                col4:record.phone,\r\n                col5:record.email,\r\n                col6:record\r\n                // col6:record.address,\r\n                // col7:record.aadhar,\r\n                // col8:record.business,\r\n                // col9:record.zip,\r\n                // col10:record.service\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [ITRrequests]\r\n      )  \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n    const viewOrderPopUp = (record) => {\r\n        setselectedorder(record);\r\n        setisopenpopup(true);\r\n    }\r\n\r\n    if (props.selectedTab == \"finance\") {\r\n    return (\r\n        <>\r\n        <Table {...getTableProps()} responsive>\r\n        <thead>\r\n            {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                <th\r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                >\r\n                    {column.render('Header')}\r\n                    <span>\r\n                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                    </span>\r\n\r\n                </th>\r\n                ))}\r\n            </tr>\r\n            ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n            {page.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n                <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                                if(cell.column.id ==\"col6\"){\r\n                                  return(\r\n                                  <td>\r\n                                    <Button type=\"button\" onClick={() => viewOrderPopUp(cell.value)}>View</Button>\r\n                                    </td>\r\n                                  )\r\n                              } else{\r\n                                return (\r\n                                  <td {...cell.getCellProps()}>\r\n                                      {cell.render('Cell')}\r\n                                  </td>\r\n                                  )\r\n          \r\n                              }                               \r\n\r\n                })}\r\n                </tr>\r\n            )\r\n            })}\r\n        </tbody>\r\n    </Table>\r\n                <div>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                    {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                </div> \r\n                <Modal show={isopenpopup} onHide={handleClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>User Details</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Table striped bordered hover responsive>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><b>First Name: </b></td>\r\n                                    <td>{selectedorder.firstName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Last Name: </b></td>\r\n                                    <td>{selectedorder.lastName}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Phone: </b></td>\r\n                                    <td>{selectedorder.phone}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Email: </b></td>\r\n                                    <td>{selectedorder.email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Address: </b></td>\r\n                                    <td>{selectedorder.address}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Aadhar: </b></td>\r\n                                    <td>{selectedorder.aadhar}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Business: </b></td>\r\n                                    <td>{selectedorder.business}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Zip: </b></td>\r\n                                    <td>{selectedorder.zip}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Service: </b></td>\r\n                                    <td>{selectedorder.service}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><b>Razorpay order id: </b></td>\r\n                                    <td>{selectedorder.razorpay_order_id}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                </>    \r\n                                                       \r\n\r\n)\r\n    }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default FinanceRequests\r\n","import React, { useEffect, useState,useMemo } from 'react'\r\nimport agent from '../../../agent'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Nav, Pagination, Button, Modal } from 'react-bootstrap';\r\nimport {useTable,useSortBy,usePagination} from 'react-table'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Form16Requests(props) {\r\n    const [form16requests, setform16requests] = useState([])\r\n    useEffect(() => {\r\n        if(props.selectedTab==\"form16\"){\r\n            getForm16requests()\r\n        }\r\n    }, [props.selectedTab])\r\n\r\n    const getForm16requests = () => {\r\n        props.showLoader(true);\r\n        agent.Finance.getAdminForm16().then((res => {\r\n            props.showLoader(false);\r\n            console.log(res.body.record);\r\n            setform16requests(res.body.record);\r\n        }), (err) => {\r\n            props.showLoader(false);\r\n\r\n        });\r\n    }\r\n    const downloadForm16=(filepath=\"\")=>{\r\n        console.log(filepath);\r\n        let filePathArr = filepath.split(\"/\");\r\n        let fileName = filePathArr[filePathArr.length -1];\r\n        console.log(fileName);\r\n        agent.Finance.downloadForm16({fileName:fileName}).then(res => {\r\n            console.log(res);\r\n\r\n        });\r\n    }\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: '#',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n          },\r\n          {\r\n            Header: 'Phone',\r\n            accessor: 'col2',\r\n          },\r\n          {\r\n            Header: 'Form16',\r\n            accessor: 'col3',\r\n          },\r\n          {\r\n            Header: 'Razorpay Order Id',\r\n            accessor: 'col4',\r\n          }\r\n\r\n\r\n        ],\r\n        []\r\n    )    \r\n    const data = useMemo(\r\n        () => \r\n        form16requests.map((record,index)=>\r\n                { \r\n                    let filePathArr = record.filePath.split(\"/\");\r\n                    let fileName = filePathArr[filePathArr.length -1];\r\n                return {col1:index+1,\r\n                col2:record.phone,\r\n                col3:fileName,\r\n                col4:record.razorpay_order_id,\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [form16requests]\r\n      )  \r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,        \r\n      } = useTable({ columns, data ,initialState: { pageIndex: 0 }},useSortBy,usePagination)\r\n\r\n    if(props.selectedTab == \"form16\"){\r\n        return (\r\n            <>\r\n            <Table {...getTableProps()} responsive>\r\n            <thead>\r\n                {headerGroups.map(headerGroup => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {headerGroup.headers.map(column => (\r\n                    <th\r\n                        {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                    >\r\n                        {column.render('Header')}\r\n                        <span>\r\n                        {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                        </span>\r\n    \r\n                    </th>\r\n                    ))}\r\n                </tr>\r\n                ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {page.map(row => {\r\n                prepareRow(row)\r\n                return (\r\n                    <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                                if(cell.column.id ==\"col3\"){\r\n                                    return(<td>\r\n                                        {/* <a target={\"_blank\"}  href = \"http://localhost:3000/api/download?fileName=16057165121892019-08-30-12-14-11-448_1567147451448_XXXPK9512X_Acknowledgement.pdf\">Download</a> */}\r\n                                        <Link className=\"btn btn-danger\" target={\"_blank\"} to={`/api/download?fileName=${cell.value}`}>Download</Link>\r\n                                        {/* <Button type=\"button\" onClick={()=>downloadForm16(cell.value)} variant=\"danger\"> Download</Button>  */}\r\n                                         </td>)\r\n                                }else{\r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n        \r\n                                }                                \r\n\r\n                    })}\r\n                    </tr>\r\n                )\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n                    <div>\r\n                    <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                        Previous Page\r\n                    </button>\r\n                    <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                        Next Page\r\n                    </button>\r\n                    <div>\r\n                        Page{' '}\r\n                        <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                        </em>\r\n                    </div>\r\n                    </div>   \r\n                    </>                                           \r\n    \r\n            )\r\n        }else{\r\n        return \"\";\r\n    }\r\n}\r\n\r\nexport default Form16Requests\r\n","import React,{useState,useEffect} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../layout/Loader';\r\nimport OrderHistory from '../Admin/orders/OrderHistory';\r\nimport AddCategory from '../Admin/AddCategory';\r\nimport ProductManagement from '../Admin/products/ProductManagement'\r\nimport AddProduct from '../Admin/products/AddProduct'\r\nimport EditProduct from '../Admin/products/EditProduct'\r\nimport FinanceRequests from '../Admin/finance/FinanceRequests';\r\nimport Form16Requests from '../Admin/finance/Form16Requests';\r\n\r\nfunction Home(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [selectedTab, setselectedTab] = useState(\"categories\")\r\n    const showLoader =(value)=>{\r\n        setisShowLoader(value);\r\n    }\r\n    const changeTab=(tab=\"\")=>{\r\n        setselectedTab(tab);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Container fluid>\r\n            <Row>\r\n                <Col md={3} className=\"p-4\">\r\n                    <ListGroup >\r\n                        <ListGroup.Item key={\"categories\"} active={selectedTab==\"categories\"?true:false} action  onClick={()=>changeTab(\"categories\")}>Category Management</ListGroup.Item>\r\n                        <ListGroup.Item key={\"products\"} active={selectedTab==\"products\"?true:false} action onClick={()=>changeTab(\"products\")}>Product Management</ListGroup.Item>\r\n                        <ListGroup.Item key={\"orders\"} active={selectedTab==\"orders\"?true:false} action onClick={()=>changeTab(\"orders\")}>Order History</ListGroup.Item>\r\n                        <ListGroup.Item key={\"finance\"}  active={selectedTab==\"finance\"?true:false} action onClick={()=>changeTab(\"finance\")}>ITR Requests</ListGroup.Item>\r\n                        <ListGroup.Item key={\"form16\"}  active={selectedTab==\"form16\"?true:false} action onClick={()=>changeTab(\"form16\")}>Form16 Requests</ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={9} className=\"p-4 production-col\" >\r\n                    <Loader show={isShowLoader}/>\r\n                    \r\n                    <CategoryManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <ProductManagement changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <OrderHistory  selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <AddCategory changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <AddProduct changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <EditProduct changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <FinanceRequests changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n                    <Form16Requests changeTab={changeTab} selectedTab={selectedTab} showLoader={showLoader}/>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Home\r\n","import React,{useEffect,useState} from 'react'\r\nimport agent from '../../agent'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Table, Nav, Pagination,Button,Modal } from 'react-bootstrap';\r\n\r\nfunction UserOrderHistory(props) {\r\n    useEffect(() => {\r\n        getOrders()\r\n  },[])\r\n  const [orderHistory, setorderHistory] = useState([])\r\n  const [selectedorder,setselectedorder] = useState([]);\r\n  const [isopenpopup, setisopenpopup] = useState(false)\r\n  const handleClose = () => setisopenpopup(false);\r\n\r\n  const viewOrderPopUp = (record)=>{\r\n      setselectedorder(record);\r\n      setisopenpopup(true);\r\n  }\r\n  let history = useHistory();\r\n  const getOrders =()=>{\r\n      props.showLoader(true);\r\n      agent.Order.getOrderHistoryByUserEmail().then((res=>{\r\n          props.showLoader(false);\r\n          console.log(res.body.record)\r\n\r\n          setorderHistory(res.body.record);\r\n      }),(err)=>{\r\n          console.log(err.response.body.message);\r\n          if(err.response.body.message ==\"jwt must be provided\"){\r\n              console.log(\"login required\");\r\n            history.push(\"/login\");\r\n          }\r\n          props.showLoader(false);\r\n\r\n      });\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <Table responsive>\r\n        <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Customer</th>\r\n                <th>Date</th>\r\n                <th>Details</th>\r\n                <th>Number</th>\r\n                <th>Action</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            {orderHistory.map((record,index)=>\r\n            <tr>\r\n                <td>{index+1}</td>\r\n                <td>{record.shipping.name}</td>\r\n                <td>{record.datePlaced}</td>\r\n                <td>{record.items.map(itm=><span>{itm.item.title} Quantity:{itm.quantity}<br></br></span>)}</td>\r\n                <td>{record.shipping.phone}</td>\r\n\r\n                <td>\r\n                    <Button type=\"button\" onClick={()=>viewOrderPopUp(record)}>View</Button>\r\n                </td>\r\n            </tr>\r\n\r\n            )}\r\n        </tbody>\r\n    </Table>\r\n    <Modal show={isopenpopup} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Order Details</Modal.Title>\r\n        </Modal.Header>\r\n            <Modal.Body>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Shipping Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><b>Name:</b> {selectedorder?.shipping?.name}</td>\r\n                            <td><b>Address:</b> {selectedorder?.shipping?.address}</td>\r\n                            <td><b>Phone:</b> {selectedorder?.shipping?.phone}</td>\r\n                            <td><b>City:</b> {selectedorder?.shipping?.city}</td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Table striped bordered hover responsive>\r\n                    <thead><tr><td colSpan=\"4\"><h4>Products</h4></td></tr></thead>\r\n                    <tbody>{selectedorder?.items?.map(itm=><tr>\r\n                    <td><b>Title:</b> {itm.item.title}</td>\r\n                    <td><b>Description:</b> {itm.item.description}</td>\r\n                    <td><b>Quantity:</b> {itm.quantity}</td>\r\n                    <td><b>Total Price:</b> {parseInt(itm.quantity)*itm.perItemPrice}</td>\r\n                    </tr>)}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Table striped bordered hover responsive>\r\n                <thead><tr><td colSpan=\"4\"><h4>Bill Details</h4></td></tr></thead>\r\n                    <tbody>\r\n                        {selectedorder.isDiscountApplied?<tr>\r\n                            <td>\r\n                                <b>\r\n                                Prime Member Discount:\r\n                                </b>\r\n                            </td>\r\n                            <td>10%</td>\r\n                        </tr>:\"\"}\r\n                        <tr>\r\n                            <td>\r\n                                <b>Total Bill Amount</b>\r\n                            </td>\r\n                            <td>{selectedorder.totalBillAmount}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Modal.Body>\r\n      </Modal>\r\n\r\n    </>\r\n)\r\n}\r\n\r\nexport default UserOrderHistory\r\n","import React,{useState} from 'react'\r\nimport { ListGroup, Container, Row, Col, Card, Button, CardColumns,Toast,Alert } from 'react-bootstrap';\r\n// import CategoryManagement from '../Admin/CategoryManagement';\r\nimport Loader from '../../layout/Loader';\r\nimport UserOrderHistory from '../UserOrderHistory';\r\nfunction UserAction(props) {\r\n\r\nconst [isShowLoader, setisShowLoader] = useState(false)\r\nconst showLoader =(value)=>{\r\n    setisShowLoader(value);\r\n}\r\nreturn (\r\n    <>\r\n    <Container fluid>\r\n        <Row>\r\n            <Col md={3} className=\"p-4\">\r\n                <ListGroup>\r\n                    {/* <ListGroup.Item  active action>Category Management</ListGroup.Item>\r\n                    <ListGroup.Item  action>Product Management</ListGroup.Item> */}\r\n                    <ListGroup.Item  action active>Order History</ListGroup.Item>\r\n                    {/* <ListGroup.Item  action>Finance</ListGroup.Item> */}\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={9} className=\"p-4 production-col\" >\r\n                <Loader show={isShowLoader}/>\r\n                {/* <CategoryManagement showLoader={showLoader}/> */}\r\n                <UserOrderHistory showLoader={showLoader}/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</>\r\n)\r\n\r\n}\r\nexport default UserAction\r\n","import React from 'react'\r\nimport { Alert, Button} from 'react-bootstrap';\r\nimport {useDispatch } from \"react-redux\";\r\nimport orderR from '../../reducers/order';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction OrderFailed() {\r\n    // const [show, setShow] = useState(true);\r\n    return (\r\n      <>\r\n        <Alert show={true} className=\"login-div\">\r\n          <Alert.Heading>Filed!</Alert.Heading>\r\n          <p>\r\nSomething went wrong to place order. Please try again.\r\n          </p>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n              <Link to=\"/placeOrder\">\r\n              <Button variant=\"danger\">\r\n              Ok\r\n            </Button>\r\n\r\n              </Link>\r\n          </div>\r\n        </Alert>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default OrderFailed\r\n","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberGroupModel = {\r\n  getMemberGroups(){\r\n    return superagent.get(`${API_ROOT}/memberGroups/entry`)\r\n  },\r\n  saveMemberGroups(data){\r\n    return superagent.post(`${API_ROOT}/memberGroups/entry`,data)\r\n  }\r\n  }\r\n    export default {MemberGroupModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nfunction MemberGroup(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [memberGroupRecords,setMemberGroupsRecords]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        masterRecord.MemberGroupModel.getMemberGroups().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberGroupsRecords(res.body.message);\r\n            }else{\r\n                setMemberGroupsRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Member Groups</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMemberGroup\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Member Group\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Group Code</th>\r\n                    <th>Name</th>\r\n                    <th>Remark</th>\r\n                    <th>Created At</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {memberGroupRecords.map((group,id)=>(<tr>\r\n                    <td>{group.group_code}</td>\r\n                    <td>{group.group_name}</td>\r\n                    <td>{group.remark}</td>\r\n                    <td>{moment(group.created_at).format(\"DD-MM-YYYY HH:SS\") }</td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default MemberGroup;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddMemberGroup(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false,type:\"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.group_code) {\r\n      errors.group_code = 'Group Code is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      group_code: '',\r\n      group_name: '',\r\n      remark: '',\r\n      user_id:auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await masterRecord.MemberGroupModel.saveMemberGroups(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          formik.resetForm();\r\n        } else {\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Member Group</h2>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Group Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"group_code\"\r\n                  placeholder=\"Enter group code\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.group_code}\r\n\r\n                />\r\n                {formik.touched.group_code && formik.errors.group_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.group_code}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Group Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"group_name\"\r\n                  placeholder=\"Enter group name\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.group_name}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Remark</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} name=\"remark\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.remark} />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddMemberGroup;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberDetailModel = {\r\n  getMemberDetailsData(member_id=\"all\"){\r\n    return superagent.get(`${API_ROOT}/member/entry/${member_id}`)\r\n  },\r\n  saveMemberDetails(data){\r\n    return superagent.post(`${API_ROOT}/member/entry`,data)\r\n\r\n  },\r\n  deleteMember(id){\r\n    return superagent.del(`${API_ROOT}/member/entry/${id}`)\r\n  },  \r\n  editMember(data,id){\r\n    return superagent.put(`${API_ROOT}/member/entry/${id}`,data)\r\n  }  \r\n    \r\n  }\r\n    export default {MemberDetailModel};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useFormik } from 'formik';\r\nimport memberDetails from \"../../../models/memberDetails\"\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Loader from '../../layout/Loader';\r\n\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nfunction AddMember(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    let history = useHistory();\r\n\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [dob, setDob] = useState();\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [groups, setGroups] = useState([])\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n        console.log(props);\r\n        if(props.location.state)\r\n            getMemberDetails(props.location.state);\r\n        getMemberGroups();\r\n    }, [])\r\n    const getMemberGroups = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.getMemberGroups();\r\n            setisShowLoader(false);\r\n            setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const getMemberDetails = async(member_id)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await memberDetails.MemberDetailModel.getMemberDetailsData(member_id);\r\n            console.log(response);\r\n            formik.values.aadhar_number = response.body.message[0].aadhar_number  \r\n            formik.values.member_name = response.body.message[0].member_name \r\n            formik.values.gender = response.body.message[0].gender \r\n            formik.values.age = response.body.message[0].age \r\n            formik.values.marital_status = response.body.message[0].marital_status \r\n            formik.values.mobile_number = response.body.message[0].mobile_number \r\n            formik.values.email_id = response.body.message[0].email_id \r\n            formik.values.member_group_id = response.body.message[0].member_group_id \r\n            formik.values.pan_card_number = response.body.message[0].pan_card_number \r\n            formik.values.driving_license_number = response.body.message[0].driving_license_number \r\n            formik.values.voter_id_number = response.body.message[0].voter_id_number \r\n            formik.values.ration_card_number = response.body.message[0].ration_card_number \r\n            formik.values.bank_account = response.body.message[0].bank_account \r\n            formik.values.bank_ifsc_code = response.body.message[0].bank_ifsc_code \r\n            formik.values.bank_account_holder = response.body.message[0].bank_account_holder \r\n            formik.values.enrollment_date = response.body.message[0].enrollment_date \r\n            setEnrollmentDate(new Date(response.body.message[0].enrollment_date));\r\n            formik.values.date_of_birth = response.body.message[0].date_of_birth \r\n            setDob(new Date(response.body.message[0].date_of_birth));\r\n\r\n            setisShowLoader(false);\r\n            //setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.member_name) {\r\n            errors.member_name = 'Please provide member name';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            enrollment_date: enrollmentDate,\r\n            date_of_birth: dob,\r\n            member_name: '',\r\n            gender: \"\",\r\n            age: \"\",\r\n            marital_status: \"\",\r\n            mobile_number: \"\",\r\n            email_id: \"\",\r\n            member_group_id: \"\",\r\n            aadhar_number: \"\",\r\n            pan_card_number: \"\",\r\n            driving_license_number: \"\",\r\n            voter_id_number: \"\",\r\n            ration_card_number: \"\",\r\n            bank_account:\"\",\r\n            bank_ifsc_code:\"\",\r\n            bank_account_holder:\"\",\r\n            user_id:auth.id\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setisShowLoader(true);\r\n            try {\r\n                values.enrollment_date = enrollmentDate;\r\n                values.date_of_birth = dob;\r\n                let response = [];\r\n                if(props.location.state){\r\n                     response = await memberDetails.MemberDetailModel.editMember(values,props.location.state);\r\n\r\n                }else{\r\n                     response = await memberDetails.MemberDetailModel.saveMemberDetails(values);\r\n                }\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    if(props.location.state)\r\n                        history.push(\"/member\")\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: response.body.message })\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <>\r\n            <Toast key={1} autohide delay={3000}  show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                <Toast.Header>\r\n                    <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                </Toast.Header>\r\n                <Toast.Body className=\"Dark\">\r\n                    {showToast.message}\r\n                </Toast.Body>\r\n            </Toast>\r\n\r\n            <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Member</h2>\r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Enrollment Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"enrollment_date\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridName\">\r\n                            <Form.Label >Member Name</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                placeholder=\"member name\"\r\n                                name=\"member_name\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_name}\r\n\r\n                            />\r\n                            {formik.touched.member_name && formik.errors.member_name ? (\r\n                                <div class=\"text-danger\">{formik.errors.member_name}</div>\r\n                            ) : null}\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Date of Birth</Form.Label>\r\n                            <DatePicker\r\n                                class=\"form-control\"\r\n                                selected={dob}\r\n                                onChange={(date) => setDob(date)}\r\n                                name=\"date_of_birth\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>Gender</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"gender\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.gender}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Gender</option>\r\n\r\n                                <option key=\"male\" value=\"male\">Male</option>\r\n                                <option key=\"female\" value=\"female\">Female</option>\r\n\r\n                            </select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Age</Form.Label>\r\n                            <Form.Control\r\n                                name=\"age\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.age}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Marital Status</Form.Label>\r\n                            <Form.Control\r\n                                name=\"marital_status\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.marital_status}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Phone number</Form.Label>\r\n                            <Form.Control\r\n                                name=\"mobile_number\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.mobile_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                name=\"email_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.email_id}\r\n                                type=\"text\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} md={6} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>Member Group</Form.Label>\r\n                            <select className=\"form-control\" name=\"member_group_id\" onChange={formik.handleChange}\r\n                                value={formik.values.member_group_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member Group</option>\r\n                                {groups.map((group,id)=>(\r\n                                    <option key={group.group_code} value={group.group_code}>{group.group_code}</option>\r\n                                ))}\r\n                            </select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            <h3 className=\"text-info\">KYC Information</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Aadhar no.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"aadhar_number\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.aadhar_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>PAN</Form.Label>\r\n                            <Form.Control\r\n                                name=\"pan_card_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pan_card_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Driving Licence No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"driving_license_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.driving_license_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Voter Id No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"voter_id_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.voter_id_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                            <Form.Label>Ration Card No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"ration_card_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.ration_card_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n \r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            <h3 className=\"text-info\">Bank Details</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Bank Account No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"bank_account\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.bank_account}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>IFSC code</Form.Label>\r\n                            <Form.Control\r\n                                name=\"bank_ifsc_code\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.bank_ifsc_code}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                            <Form.Label>Account holder name</Form.Label>\r\n                            <Form.Control\r\n                                name=\"bank_account_holder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.bank_account_holder}\r\n                            />\r\n                        </Form.Group>\r\n\r\n\r\n                    </Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddMember;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal,Pagination } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\nimport { useHistory } from 'react-router-dom';\r\nfunction Members(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    const [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n    \r\n    const data = useMemo(\r\n        () => \r\n        memberRecords.map((record,index)=>\r\n                { \r\n             return {\r\n                col1:moment(record.enrollment_date).format('DD-MM-yyy hh:ss A'),\r\n                col2:record.member_name,\r\n                col3:record.member_group_id,\r\n                col4:record.mobile_number,\r\n                col5:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [memberRecords]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Enrollment Date',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Name',\r\n            accessor: 'col2',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Group Code',\r\n            accessor: 'col3',\r\n            allowFilter:true\r\n            },\r\n          {\r\n            Header: 'Mobile Number',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col5',\r\n            allowFilter:false\r\n          }\r\n\r\n        ],\r\n        []\r\n      )    \r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMember=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await memberRecord.MemberDetailModel.deleteMember(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = memberRecords.filter((member,idx)=>member.member_id!=deleteID);\r\n                setMemberRecords(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n              \r\n    }\r\n  \r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMember()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Members</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMember\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Member\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <div className=\"text-right\">\r\n              {paginate(pageCount)}\r\n            </div>   \r\n\r\n            <Table {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody{...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col5\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    }else{\r\n                                        return (\r\n                                            <td>\r\n                                                {/* <Link to = \"/viewMemberDetail/:5\" params={{ member_id: cell.value.member_id }}> */}\r\n                                                <Button size={\"sm\"} variant=\"primary\"  onClick={()=>{history.push(\"/viewMemberDetail\",cell.value.member_id)}}>View</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"success\" onClick={()=>{history.push(\"/addMember\",cell.value.member_id)}} >Edit</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(cell.value.member_id)} >Delete</Button>\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n\r\n            </tbody>\r\n        </Table>\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n        </Col>\r\n        </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\n\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n        console.log(props);\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData(props.location.state).then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message[0]);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Member Detail - {memberRecords.member_name}</h2>\r\n\r\n            <Row className=\"mb-5 mt-3\">\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <tbody>\r\n                <tr><th>Enrollment Date</th><td>{moment(memberRecords.enrollment_date).format(\"DD-MM-YYYY hh:ss A\") }</td> </tr>\r\n                <tr><th>Member Name</th>  <td>{memberRecords.member_name}</td></tr> \r\n                <tr><th>Member Id</th>  <td>{memberRecords.member_id}</td></tr> \r\n                <tr> <th>Gender</th>  <td>{memberRecords.gender}</td></tr> \r\n                <tr><th>DOB</th>   <td>{moment(memberRecords.date_of_birth).format(\"DD-MM-YYYY\") } </td></tr> \r\n                <tr><th>Age</th> <td>{memberRecords.age}</td></tr> \r\n                <tr><th>Marital Status</th>  <td>{memberRecords.marital_status}</td></tr> \r\n                <tr><th>Mobile Number</th> <td>{memberRecords.mobile_number}</td></tr> \r\n                <tr><th>Email Id</th> <td>{memberRecords.email_id}</td></tr> \r\n                <tr> <th>Member Group Id</th>  <td>{memberRecords.member_group_id}</td></tr> \r\n                <tr> <th>Aadhar Number</th> <td>{memberRecords.aadhar_number}</td></tr> \r\n                <tr> <th>Driving License Number</th>  <td>{memberRecords.driving_license_number}</td></tr> \r\n                <tr> <th>Voter Id Number </th>  <td>{memberRecords.voter_id_number}</td></tr> \r\n                <tr>  <th>Ration Card Number</th> <td>{memberRecords.ration_card_number}</td></tr> \r\n                <tr> <th>PAN Number</th> <td>{memberRecords.pan_card_number }</td></tr> \r\n                <tr> <th>Bank Account no.</th> <td>{memberRecords.bank_account }</td></tr> \r\n                <tr> <th>IFSC Code</th> <td>{memberRecords.bank_ifsc_code }</td></tr> \r\n                <tr> <th>Bank Account Holder</th> <td>{memberRecords.bank_account_holder }</td></tr> \r\n\r\n            </tbody>\r\n            </Table>\r\n            </Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import moment from \"moment\"\r\nimport { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n//const url = '/memberGroups/';\r\n\r\nconst SchemeModel = {\r\n  getScheme() {\r\n    return superagent.get(`${API_ROOT}/scheme/entry`)\r\n  },\r\n  saveScheme(data) {\r\n    return superagent.post(`${API_ROOT}/scheme/entry`, data)\r\n  },\r\n  deleteScheme(id){\r\n    return superagent.del(`${API_ROOT}/scheme/entry/${id}`)\r\n  },  \r\n  getLoanAppInitialData(){\r\n      return [superagent.get(`${API_ROOT}/scheme/entry`),superagent.get(`${API_ROOT}/member/entry/all`)]\r\n  }\r\n\r\n}\r\nconst GroupLoanModel = {\r\n  applyForloan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/applyGroupLoan`, data)\r\n  },\r\n  getApprovalList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingApproval`);\r\n  },\r\n  getDisburseList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingDisburse`);\r\n  },\r\n  getLoanDetailbyId(id){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/${id}`);\r\n  },\r\n  approveRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/approveLoan`, data)\r\n  },\r\n  getAllLoanApplications(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/all`);\r\n  },\r\n  disburseRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/disburseLoan`, data)\r\n  },\r\n\r\n}\r\nconst EmiModel = {\r\n  calculateEMI(data){\r\n    return superagent.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  },\r\n  getDueEmis(today = moment().format(\"yyyy-MM-DD\")){\r\n    return superagent.get(`${API_ROOT}/emis/dueEMIs/${today}`);\r\n  },\r\n  paidEmi(id){\r\n    return superagent.put(`${API_ROOT}/emis/entry`,{\"id\":id});\r\n  },\r\n  getPaidEmis(loanAccountNo){\r\n    return superagent.get(`${API_ROOT}/emis/entry/${loanAccountNo}`);\r\n  }\r\n}\r\nexport default { SchemeModel,GroupLoanModel,EmiModel };","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\n\r\nfunction Scheme(props) {\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [schemes,setSchemes]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    useEffect(() => {\r\n        getSchemes();\r\n    },[])\r\n\r\n    const getSchemes = () =>{\r\n        setisShowLoader(true);\r\n        groupLoan.SchemeModel.getScheme().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setSchemes(res.body.message);\r\n            }else{\r\n                setSchemes([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.SchemeModel.deleteScheme(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = schemes.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setSchemes(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Scheme</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Schemes</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addScheme\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Scheme\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Scheme code</th>\r\n                    <th>Scheme name</th>\r\n                    <th>Max amount</th>\r\n                    <th>Interest rate (%)</th>\r\n                    <th>EMI type</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {schemes.map((scheme,id)=>(<tr>\r\n                    <td>{scheme.scheme_code}</td>\r\n                    <td>{scheme.scheme_name}</td>\r\n                    <td>{scheme.max_amount}</td>\r\n                    <td>{scheme.interest_rate }%</td>\r\n                    <td>{scheme.EMI_type }</td>\r\n                    <td>\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(scheme.id)} className=\"ml-2\">Delete</Button>\r\n\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\n\r\nexport default Scheme;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddScheme(props) {\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.scheme_code) {\r\n      errors.scheme_code = 'Scheme code is Required!';\r\n    }\r\n    if (!values.scheme_name) {\r\n      errors.scheme_name = 'Scheme name is Required!';\r\n    }\r\n    if (!values.max_amount) {\r\n      errors.max_amount = 'Max amount is Required!';\r\n    }\r\n    if (!values.interest_rate) {\r\n      errors.interest_rate = 'Interest rate is Required!';\r\n    }\r\n    if (!values.EMI_type) {\r\n      errors.EMI_type = 'EMI type is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      scheme_code: '',\r\n      scheme_name: '',\r\n      max_amount: '',\r\n      interest_rate: '',\r\n      EMI_type: '',\r\n      user_id:auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n        try {\r\n          let response = await groupLoan.SchemeModel.saveScheme(values);\r\n          setisShowLoader(false);\r\n          if (response.statusCode == 200) {\r\n            formik.resetForm();\r\n            setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          } else {\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n          }\r\n\r\n        } catch (error) {\r\n          setisShowLoader(false);\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n        }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Scheme</h2>\r\n      <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Scheme Code</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_code\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_code}\r\n              />\r\n                {formik.touched.scheme_code && formik.errors.scheme_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_code}</div>\r\n                ) : null}              \r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\">\r\n              <Form.Label>Scheme Name</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_name\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_name}\r\n              />\r\n                {formik.touched.scheme_name && formik.errors.scheme_name ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_name}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Max amount</Form.Label>\r\n              <Form.Control\r\n                name=\"max_amount\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.max_amount}\r\n              />\r\n                {formik.touched.max_amount && formik.errors.max_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.max_amount}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Interest Rate (in %)</Form.Label>\r\n              <Form.Control\r\n                name=\"interest_rate\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.interest_rate}\r\n              />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" md={6}>\r\n            <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n              <Form.Label>EMI type</Form.Label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"EMI_type\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.EMI_type}\r\n              >\r\n                <option key=\"\" value=\"\">Select EMI type</option>\r\n                <option key=\"flat\" value=\"flat\">Flat rate</option>\r\n                {/* <option key=\"reduceing\" value=\"reduceing\">Reduceing rate</option> */}\r\n              </select>\r\n              {formik.touched.EMI_type && formik.errors.EMI_type ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_type}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddScheme;","import React, { Component } from 'react'\r\nimport agent from '../../agent'\r\nimport Loader from '../layout/Loader';\r\nimport {  Card, Col, Row } from 'react-bootstrap';\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <div >\r\n            <Row xs={1} md={3} className=\"g-2\">\r\n                <Col>\r\n                    <Card\r\n                    bg={\"primary\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    // style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">100</h2></Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                            Received Amount(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card> \r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card\r\n                    bg={\"danger\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    // style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">10</h2> </Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                          Paid Amount(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>            \r\n                </Col>\r\n                <Col>\r\n                    <Card\r\n                    bg={\"success\"}\r\n                    key={0}\r\n                    text={'dark'}\r\n                    // style={{ width: '18rem' }}\r\n                    className=\"m-2\"\r\n                    >\r\n                        <Card.Body>\r\n                        <Card.Title><h2 class=\"text-center\">90</h2> </Card.Title>\r\n                        <Card.Text class=\"text-center\">\r\n                            Cash in hand(Rs)\r\n                        </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>            \r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction LoanApplication(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [schemeRecords, setSchemeRecords] = useState([]);\r\n    const [selectedScheme, setSelectedScheme] = useState({});\r\n\r\n    const tanure = {\"weekly\":\"Weeks\",\"monthly\":\"Months\",\"daily\":\"Days\",\"fortnight\":\"Fortnight\"};\r\n    let history = useHistory();\r\n    //const selectedSm = {\"interest_rate\":0,\"EMI_type\":\"\",\"max_amount\":0};\r\n    useEffect(()=>{\r\n        getSchemesAndMembers();\r\n    },[])\r\n    const getSchemesAndMembers=async()=>{\r\n        try{\r\n            setisShowLoader(true);\r\n            const response =await Promise.all(groupLoan.SchemeModel.getLoanAppInitialData())\r\n            setisShowLoader(false);\r\n            setSchemeRecords(response[0].body.message);\r\n            setMemberRecords(response[1].body.message);\r\n            console.log(response);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.scheme_id) {\r\n            errors.scheme_id = 'Scheme code is Required!';\r\n        }\r\n        if (!values.member_id) {\r\n            errors.member_id = 'Member name is Required!';\r\n        }\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required!';\r\n        }\r\n        if (selectedScheme?.interest_rate>0 && values.interest_rate>selectedScheme?.interest_rate) {\r\n            errors.interest_rate = `As per the Selected Scheme. Interest rate should not greater than ${selectedScheme.interest_rate}.`;\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required!';\r\n        }\r\n        if (selectedScheme?.max_amount>0 && values.loan_amount>selectedScheme.max_amount) {\r\n            errors.loan_amount = `As per the Selected Scheme. Loan amount should not greater than ${selectedScheme.max_amount}.`;\r\n        }\r\n        // if (!values.EMI_amount) {\r\n        //     errors.EMI_amount = 'EMI amount is Required!';\r\n        // }\r\n        if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required!';\r\n        }\r\n        if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required!';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            scheme_id: '',\r\n            application_date: '',\r\n            member_id: '',\r\n            address:'',\r\n            interest_rate: \"\",\r\n            loan_amount:'',\r\n            // EMI_amount: '',\r\n            EMI_payout:\"\",\r\n            EMI_type:\"\",\r\n            tenure:\"\",\r\n            user_id:auth.id\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            console.log(values);\r\n           setisShowLoader(true);\r\n            try {\r\n                //delete values.EMI_type;\r\n                values.application_date = enrollmentDate;\r\n              let response = await groupLoan.GroupLoanModel.applyForloan(values);\r\n              setisShowLoader(false);\r\n              if (response.statusCode == 200) {\r\n                formik.resetForm();\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n              } else {\r\n                setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n              }\r\n\r\n            } catch (error) {\r\n              setisShowLoader(false);\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    const handleScheme=(e)=>{\r\n        console.log(e.target.value);\r\n        let selectedScheme = schemeRecords.filter(scheme=>scheme.scheme_code==e.target.value);\r\n        setSelectedScheme(selectedScheme[0]);\r\n         formik.values.EMI_type = selectedScheme[0].EMI_type;\r\n         formik.values.interest_rate = selectedScheme[0].interest_rate;\r\n        formik.handleChange(e);\r\n    }\r\n    return (\r\n        \r\n        <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n         <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Loan Application</h2>\r\n            \r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"application_date\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Member name</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"member_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member</option>\r\n                                {memberRecords.map((member,id)=>(\r\n                                    <option key={member.member_id} value={member.member_id}>{`name= ${member.member_name} - member_id= ${member.member_id} `}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.member_id && formik.errors.member_id ? (\r\n                  <div class=\"text-danger\">{formik.errors.member_id}</div>\r\n                ) : null}              \r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Member Address</Form.Label>\r\n                            <Form.Control\r\n                                name=\"address\"\r\n                                as=\"textarea\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.address}\r\n\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Scheme</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"scheme_id\"\r\n                                onChange={handleScheme}\r\n                                value={formik.values.scheme_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Scheme</option>\r\n                                {schemeRecords.map((schems,id)=>(\r\n                                    <option key={schems.scheme_code} value={schems.scheme_code}>{schems.scheme_code}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.scheme_id && formik.errors.scheme_id ? (\r\n                                <div class=\"text-danger\">{formik.errors.scheme_id}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Interest Rate (in %)</Form.Label>\r\n                            <Form.Control\r\n                                name=\"interest_rate\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.interest_rate}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per scheme.\r\n                            </Form.Text>                            \r\n                            {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Loan Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"loan_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.loan_amount}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            Default will be Max amount of selected scheme.\r\n                            </Form.Text>                            \r\n\r\n                            {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        {/* <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"EMI_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_amount}\r\n                            />\r\n                            {formik.touched.EMI_amount && formik.errors.EMI_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.EMI_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group> */}\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Payout</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"EMI_payout\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_payout}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Payout</option>\r\n                                {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                                <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n\r\n                            </select>\r\n                            {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                                <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Tenure(in {formik.values.EMI_payout!=\"\"?tanure[formik.values.EMI_payout]:\"Months\"})</Form.Label>\r\n                            <Form.Control\r\n                                name=\"tenure\"\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.tenure}\r\n                            />\r\n                            {formik.touched.tenure && formik.errors.tenure ? (\r\n                                <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                    <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Type</Form.Label>\r\n                            <Form.Control\r\n                                name=\"EMI_type\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_type}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per selected scheme.\r\n                            </Form.Text>                            \r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={()=>{history.push(\"/\")}} type=\"button\" className=\"ml-2\">\r\n                        Cancel\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApplication;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction LoanApproval(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getApprovalList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectApproval=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications for Approval</h2>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Interest rate</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.interest_rate }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectApproval(loan.id)}>Approve</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApproval;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nfunction DisburseLoan(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getDisburseList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectDisburse=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications For Disburse</h2>\r\n            <Row >\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Interest rate</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.interest_rate }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectDisburse(loan.id)}>Disburse</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );}\r\n\r\nexport default DisburseLoan;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nfunction EmiCard(props) {\r\n\r\n    return (\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b>\r\n            <svg onClick={props.handlePrintEMI} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n            <thead>\r\n              <tr className=\"bg-success\">\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  {props.showDisburseButton?<th>EMI Paid</th>:\"\"}\r\n                  \r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {props.emiData.map((value,id)=>(<tr className={props.paidEmiRecord[value.date]?\"bg-warning\":\"\"}>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    {props.showDisburseButton?\r\n                    <td>{props.paidEmiRecord[value.date]?\r\n                    \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check-circle\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                        <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\"/>\r\n                        </svg>:\"\"}</td>:\"\"}\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n}\r\n\r\nexport default EmiCard;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nclass EmiCardPrint extends React.PureComponent {\r\n    render() {\r\n    return (\r\n        <div>\r\n        <h3 className=\"text-center mb-5 mt-3\">AA2 MutualHelp Micro Finance</h3>\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b>\r\n\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  <th>Signature</th>\r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {this.props.emiData.map((value,id)=>(<tr>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    <td></td>\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n    </div>\r\n);\r\n\r\n    }\r\n}\r\n\r\nexport default EmiCardPrint;","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup,Modal,Toast } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport EmiCard from './EmiCard';\r\nimport EmiCardPrint from './EmiCardPrint';\r\nfunction LoanApprovalDetails(props) {\r\n    const memberDetailsRef = useRef();\r\n    const handlePrintMemberDetail = useReactToPrint({\r\n        content: () => memberDetailsRef.current,\r\n        documentTitle:\"AA2-Member\",\r\n      });\r\n\r\n      const applicationRef = useRef();\r\n      const handlePrintApplication = useReactToPrint({\r\n          content: () => applicationRef.current,\r\n          documentTitle:\"AA2-application\",\r\n        });\r\n\r\n        const emiRef = useRef();\r\n        const handlePrintEMI = useReactToPrint({\r\n            content: () => emiRef.current,\r\n            documentTitle:\"AA2-EMI-details\",\r\n          });\r\n      \r\n    const auth = useSelector(state => state.auth);\r\n    const [paidEmiRecord, setPaidEmiRecord] = useState([])\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [isShowEMILoader, setisShowEMILoader] = useState(false)\r\n    const [emiData, setEmiData] = useState([])\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [showApprovalButton,setShowApprovalButton]= useState(false);\r\n    const [showDisburseButton,setShowDisburseButton]= useState(false);\r\n    \r\n    //const [disburseActionButton,setDisburseActionButton]\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getLoanDetails();\r\n    }, [])\r\n\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            setisShowEMILoader(true);\r\n\r\n            let response = await groupLoan.GroupLoanModel.getLoanDetailbyId(props.location.state);\r\n            let calculateEmi ={\r\n                \"loanStartDate\":response.body.message[0].application_date,\r\n                \"interest_rate\":response.body.message[0].interest_rate,\r\n                \"tenure\":response.body.message[0].Tenure,\r\n                \"EMI_payout\":response.body.message[0].EMI_payout,\r\n                \"loan_amount\":response.body.message[0].loan_amount,\r\n                \"EMI_type\":response.body.message[0].EMI_type\r\n            }\r\n            setisShowEMILoader(true);\r\n            let EmiData = await groupLoan.EmiModel.calculateEMI(calculateEmi);\r\n            let paidData = [];\r\n            let result = {};\r\n             paidData = await groupLoan.EmiModel.getPaidEmis(response.body.message[0].loan_account_no);\r\n            for(let i=0;i<paidData.body.message.length;i++){\r\n                let emiDate = moment(paidData.body.message[i].EMI_date).format(\"DD-MM-yyyy\");\r\n                result[emiDate]=true;\r\n            }\r\n            setPaidEmiRecord(result);\r\n            setEmiData(EmiData.body.message);\r\n            setisShowEMILoader(false);\r\n            console.log(response);\r\n\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(response.body.message[0].is_approved!=0?false:true);\r\n                setShowDisburseButton(response.body.message[0].is_approved ==1 && response.body.message[0].is_disbursed==0?true:false);\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionOnLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.approveRejectLoan(data);\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(false);\r\n                //setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionDisburseLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.disburseRejectLoan(data);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n            <Loader show={isShowLoader} />\r\n            {showApprovalButton && (auth.role==\"checker\"||auth.role==\"admin\")?<Row className=\"m-5\">\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionOnLoan(1)}>\r\n                        Approve\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionOnLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            {showDisburseButton&& (auth.role==\"checker\"||auth.role==\"admin\")?<Row className=\"m-5\">\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionDisburseLoan(1)}>\r\n                        Disburse\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionDisburseLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            <Row xs={1} md={2} className=\"g-1\">\r\n                <Col>\r\n                    <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                        ref={memberDetailsRef}\r\n                    >\r\n                        <Card.Header className=\"bg-success text-center\"><b>Member Details</b><svg onClick={handlePrintMemberDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body>\r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Member Name</th><td>{loanDetails.member_name}</td> </tr>\r\n                                    <tr><th>Member Group ID</th>  <td>{loanDetails.member_group_id}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>DOB</th>   <td>{moment(loanDetails.date_of_birth).format(\"DD-MM-YYYY\") }</td></tr>\r\n                                    <tr><th>Phone</th> <td>{loanDetails.mobile_number}</td></tr>\r\n                                    <tr><th>Gender</th>  <td>{loanDetails.gender}</td></tr>\r\n                                    <tr><th>Aadhar No.</th> <td>{loanDetails.aadhar_number}</td></tr>\r\n                                    <tr><th>PAN</th> <td>{loanDetails.pan_card_number}</td></tr>\r\n                                    <tr><th>Driving License</th> <td>{loanDetails.driving_license_number}</td></tr>\r\n                                    <tr><th>Ration Card No.</th> <td>{loanDetails.ration_card_number}</td></tr>\r\n                                    <tr><th>Voter ID No.</th> <td>{loanDetails.voter_id_number}</td></tr>\r\n                                    <tr><th>Bank Account No.</th> <td>{loanDetails.bank_account}</td></tr>\r\n                                    <tr><th>Bank IFSC code</th> <td>{loanDetails.bank_ifsc_code}</td></tr>\r\n                                    <tr><th>Bank Account Holder</th> <td>{loanDetails.bank_account_holder}</td></tr>\r\n\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card border=\"info\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={applicationRef}\r\n                    >\r\n                        <Card.Header className=\"bg-info text-center\"><b>Application Details</b><svg onClick={handlePrintApplication} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body>\r\n                            \r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Account No</th>  <td>{loanDetails.loan_account_no}</td></tr>\r\n                                    <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\") }</td> </tr>\r\n                                    <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                                    <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                    <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                                    <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                                    {/* <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> */}\r\n                                    <tr><th>Tenure</th> <td>{loanDetails.Tenure}</td></tr>\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col >\r\n                    <Loader show={isShowEMILoader} relative={true}/>\r\n                    <EmiCard showDisburseButton={loanDetails.is_approved ==1 && loanDetails.is_disbursed==1}  emiData={emiData} paidEmiRecord={paidEmiRecord} handlePrintEMI={handlePrintEMI}/>\r\n                    <div style={{display:\"none\"}}><EmiCardPrint ref={emiRef} emiData={emiData}/></div> \r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApprovalDetails;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table,Badge, Container, Row, Col, Button, Pagination } from 'react-bootstrap';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\n\r\nfunction AllApplications(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n    const data = useMemo(\r\n        () => \r\n      \r\n        loanlist.map((record,index)=>\r\n                { \r\n             return {\r\n                col1:record.loan_account_no?record.loan_account_no:\"N/A\",\r\n                col2:moment(record.application_date).format('DD-MM-yyy hh:ss A'),\r\n                col3:record.member_name,\r\n                col4:record.scheme_id,\r\n                col5:record.loan_amount,\r\n                col6:record.interest_rate,\r\n                col7:record.actionStatus,\r\n                col8:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [loanlist]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter:true\r\n            },\r\n            {\r\n            Header: 'Application date',\r\n            accessor: 'col2', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member name',\r\n            accessor: 'col3',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Scheme ID',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n            },\r\n          {\r\n            Header: 'Loan amount',\r\n            accessor: 'col5',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Interest rate',\r\n            accessor: 'col6',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Status',\r\n            accessor: 'col7',\r\n            allowFilter:false\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col8',\r\n            allowFilter:false\r\n          }\r\n\r\n        ],\r\n        []\r\n      )    \r\n      function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getAllLoanApplications();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let formatedData = response.body.message.map((loan, id)=>{\r\n                    if(loan.is_approved ==1 && loan.is_disbursed==1){\r\n                        loan[\"actionStatus\"]= \"Disbursed\";\r\n                    }else if(loan.is_approved ==1 && loan.is_disbursed==0){\r\n                        loan[\"actionStatus\"]= \"Approved\";\r\n                    }else if(loan.is_disbursed==-1){\r\n                        loan[\"actionStatus\"]= \"Disburse Rejected\";\r\n                    }else if(loan.is_approved==-1){\r\n                        loan[\"actionStatus\"]= \"Approval Rejected\";\r\n                    }else{\r\n                        loan[\"actionStatus\"]= \"Pending\";\r\n                    }\r\n\r\n                    return loan;\r\n                });\r\n                setLoanlist(formatedData);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">All Loan Applications</h2>\r\n            <Row>\r\n            <Col>\r\n            {/* <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Interest rate</th>\r\n                    <th>Status</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.interest_rate }</td>\r\n                    <td><Badge className={loan.actionStatus==\"Approved\" || loan.actionStatus==\"Disbursed\"?\"bg-success\":\"bg-danger\"}>{loan.actionStatus }</Badge></td>\r\n                    <td> <Button size={\"sm\"} variant=\"info\" onClick={()=>{history.push(\"/loanApprovalDetails\",loan.id)}} type=\"button\" className=\"ml-2\">\r\n                        View\r\n                    </Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table> */}\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n\r\n            <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody{...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col8\" && cell.column.id !=\"col7\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    }else if(cell.column.id ==\"col8\"){\r\n                                        return (\r\n                                                <td>\r\n                                                <Button size={\"sm\"} variant=\"info\" onClick={()=>{history.push(\"/loanApprovalDetails\",cell.value.id)}} type=\"button\" className=\"ml-2\">\r\n                                                    View\r\n                                                </Button>\r\n                                                </td>\r\n                                                )\r\n                                    }else if(cell.column.id ==\"col7\"){\r\n                                        return (\r\n                                        <td>\r\n                                            <Badge className={cell.value==\"Approved\" || cell.value==\"Disbursed\"?\"bg-success\":\"bg-danger\"}>\r\n                                                {cell.value }\r\n                                            </Badge>\r\n                                        </td>                                            )\r\n    \r\n                                    }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n\r\n            </tbody>\r\n        </Table>\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n\r\n        </Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );\r\n    }\r\n\r\nexport default AllApplications;","import React,{useState,useRef,useEffect } from 'react';\r\nimport { Table,Button, Container, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport Loader from '../layout/Loader';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nfunction EmiCalculator(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [calculatedData,setCalculatedData] = useState([]);\r\n    //const [isclickPrint,setisclickPrint] = useState(false);\r\n    const componentRef = useRef();\r\n    // useEffect(()=>{\r\n    //   handlePrint()\r\n    // },[isclickPrint==true])\r\n    const handlePrint = useReactToPrint({\r\n      content: () => componentRef.current,\r\n      documentTitle:\"AA2-EMI-details\",\r\n     // onAfterPrint:()=>{setisclickPrint(false)}\r\n\r\n    });\r\n    // const setPrintCompany = ()=>{\r\n    //   setisclickPrint(true,()=>{console.log(\"print\")})\r\n    // }    \r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.interest_rate) {\r\n          errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required';\r\n          }\r\n          if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required';\r\n          }\r\n          if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required';\r\n          }\r\n          return errors;\r\n      };\r\n      const formik = useFormik({\r\n        initialValues: {\r\n        loanStartDate: '',\r\n        interest_rate: '',\r\n        tenure: '',\r\n        EMI_payout:'',\r\n        loan_amount:'',\r\n        EMI_type:\"flat\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n          setisShowLoader(true);\r\n          try {\r\n             values.loanStartDate = enrollmentDate;\r\n             console.log(values);\r\n            let response = await groupLoan.EmiModel.calculateEMI(values);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              //formik.resetForm();\r\n              setCalculatedData(response.body.message);\r\n            } else {\r\n              //setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n    \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            //setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n        },\r\n      });\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n            <Row >\r\n            <Col>\r\n            <Container className=\"bg-white mt-2 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group as={Col} className=\"form-group required pl-0 pr-0\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"loanStartDate\"\r\n                            />\r\n                {formik.touched.loanStartDate && formik.errors.loanStartDate ? (\r\n                  <div class=\"text-danger\">{formik.errors.loanStartDate}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Loan amount</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"loan_amount\"\r\n                  placeholder=\"Enter loan amount\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.loan_amount}\r\n                />\r\n                {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Interest rate</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"interest_rate\"\r\n                  placeholder=\"Enter interest rate\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.interest_rate}\r\n\r\n                />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Tenure</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"tenure\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.tenure}\r\n\r\n                />\r\n                {formik.touched.tenure && formik.errors.tenure ? (\r\n                  <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0\" controlId=\"formGridAddress1\">\r\n                <Form.Label>EMI payout</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"EMI_payout\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.EMI_payout}\r\n                >\r\n                    <option key=\"\" value=\"\">Select payout</option>\r\n\r\n                    {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                    <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                    <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n\r\n                </select>\r\n                {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Calculate\r\n              </Button>\r\n\r\n            </Form>\r\n            </Container>\r\n            </Col>\r\n            <Col md={8}>\r\n            <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={componentRef}\r\n                    >\r\n                      {/* {isclickPrint?<h2 className=\"text-center mb-3\">AA2 MicroFinance Foundation</h2>:\"\"} */}\r\n                        <Card.Header className=\"bg-primary text-center\"><b>AA2 Micro Finance EMI Details</b><svg onClick={handlePrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body >\r\n                            <Table  size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead>\r\n                              <tr>\r\n                                  <th>EMI date</th>\r\n                                  <th>EMI Amount</th>\r\n                                  <th>Principal</th>\r\n                                  <th>Interest</th>\r\n                                  <th>Outstanding</th>\r\n                              </tr>\r\n                          </thead>\r\n                                <tbody>\r\n                                {calculatedData.map((value,id)=>(<tr>\r\n                                    <td>{value.date}</td>\r\n                                    <td>{value.EMI}</td>\r\n                                    <td>{value.principal}</td>\r\n                                    <td>{value.int_amount}</td>\r\n                                    <td>{value.outstanding }</td>\r\n                                </tr>))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n            </Col>\r\n\r\n    </Row>\r\n    </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmiCalculator;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nclass PrintDueEmis extends React.PureComponent { \r\n    add =(row,a)=>{\r\n        console.log(row,a.values);\r\n        return parseFloat(a.values.col6) + row;\r\n    }\r\n    render() {\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-center mb-5 mt-3\">AAs2 MutualHelp Micro Finance</h3>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                <thead className=\"bg-primary\">\r\n                    <tr>\r\n                        <th>Account No.</th>\r\n                        <th>Group</th>\r\n                        <th>Member ID</th>\r\n                        <th>Name</th>\r\n                        <th>No. of Emi</th>\r\n                        <th>EMI Amount</th>\r\n                        <th>Outstanding</th>\r\n                        <th>Signature</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.dueEmis.map((emi, id) => (<tr>\r\n                        <td>{emi.values.col1}</td>\r\n                        <td>{emi.values.col2}</td>\r\n                        <td>{emi.values.col3}</td>\r\n                        <td>{emi.values.col4}</td>\r\n                        <td>{emi.values.col5}</td>\r\n                        <td>{emi.values.col6}</td>\r\n                        <td>{emi.values.col7}</td>\r\n                        <td className=\"border\"></td>\r\n                    </tr>))}\r\n                </tbody>\r\n                <tfoot>\r\n                <tr>\r\n                <th>Total Collection</th><th colSpan=\"7\">{this.props.dueEmis.reduce(this.add,0)}</th>\r\n                    \r\n                </tr>\r\n                </tfoot>\r\n            </Table> \r\n            \r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default PrintDueEmis;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel, Pagination } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport PrintDueEmis from './printDueEmis';\r\nfunction DueEmis(props) {\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [dueEmis, setDueEmis] = useState([]);\r\n    const [paidID, setPaidID] = useState(0)\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const emiDetailsRef = useRef();\r\n    const handlePrintEmiDetail = useReactToPrint({\r\n        content: () => emiDetailsRef.current,\r\n        documentTitle:\"AA2-Due-EMIs\",\r\n      });\r\n\r\n    useEffect(() => {\r\n        getDueEmisRecord();\r\n    }, [])\r\n\r\n    const data = useMemo(\r\n        () =>\r\n            dueEmis.map((record, index) => {\r\n                return {\r\n                    col1: record.loan_account_no,\r\n                    col2: record.member_group_id,\r\n                    col3: record.member_id,\r\n                    col4: record.member_name,\r\n                    col5: record.remain_EMI,\r\n                    col6: record.EMI_amount.toFixed(2),\r\n                    col7: record.outstanding,\r\n                    col8: record,\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [dueEmis]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                Cell: e => { return(<Link to={{\r\n                    pathname: '/loanApprovalDetails',\r\n                    state: dueEmis[e.row.id]?.loan_table_id\r\n                }}>{e.value}</Link>)}\r\n            },\r\n            {\r\n                Header: 'Group',\r\n                accessor: 'col2', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                 Cell: e => <Link to=\"/memberGroup\">{e.value}</Link>\r\n            },\r\n            {\r\n                Header: 'Member ID',\r\n                accessor: 'col3',\r\n                allowFilter: true,\r\n                Cell: emi => {\r\n                    return (<Link to={{\r\n                    pathname: '/viewMemberDetail',\r\n                    state: emi.value\r\n                }}>{emi.value}</Link>)}\r\n            },\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'col4',\r\n                allowFilter: true,\r\n                Cell: emi => <Link to={{\r\n                    pathname: '/viewMemberDetail',\r\n                    state:dueEmis[emi.row.id]?.member_id\r\n                }}>{emi.value}</Link>\r\n            },\r\n            {\r\n                Header: 'No. of EMI',\r\n                accessor: 'col5',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'EMI Amount',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Outstanding',\r\n                accessor: 'col7',\r\n                allowFilter: false\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col8',\r\n                allowFilter: false,\r\n                Cell: emi => <Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.value.emi_id)}>Pay</Button>\r\n            },\r\n        ],\r\n        [dueEmis]\r\n    )\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination className=\"text-left\">\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n\r\n    const getDueEmisRecord = (today = moment().format(\"yyyy-MM-DD\")) => {\r\n        setisShowLoader(true);\r\n        groupLoan.EmiModel.getDueEmis(today).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let emiData = [];\r\n                emiData = res.body.message.map(emi => {\r\n                    // return emi\r\n                    emi[\"loan_table_id\"] = emi.loan_account_no.substring(11)\r\n                    return emi;\r\n                });\r\n                setDueEmis(emiData);\r\n            } else {\r\n                setDueEmis([]);\r\n            }\r\n        })\r\n    }\r\n    const paidEMI = async () => {\r\n        setShowDeleteModel(false);\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.EmiModel.paidEmi(paidID);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let UpdatedList = dueEmis.filter((emidata, idx) => emidata.emi_id != paidID);\r\n                setDueEmis(UpdatedList);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    const paidHandle = (id) => {\r\n        setPaidID(id);\r\n        setShowDeleteModel(true);\r\n    }\r\n    const changeEmiDate = (selectedDate) => {\r\n        setEnrollmentDate(selectedDate)\r\n        getDueEmisRecord(moment(selectedDate).format(\"yyyy-MM-DD\"));\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            <Modal show={showDeleteModel} onHide={() => setShowDeleteModel(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Paid EMI </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => setShowDeleteModel(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => paidEMI()}>\r\n                        Paid\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n                <h2 className=\"text-info text-center\">Due EMIs</h2>\r\n                <Row>\r\n                    <Col>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormLabel className=\"mr-3\">EMI Date:</FormLabel>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => changeEmiDate(date)}\r\n                                name=\"enrollment_date\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n\r\n                        </InputGroup>\r\n\r\n                        <div>\r\n                            {paginate(pageCount)}\r\n                            <svg style={{cursor:'pointer'}} onClick={handlePrintEmiDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer mb-2\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n                        </div>\r\n                        <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                //console.log(cell);\r\n                                                return (\r\n                                                    <td {...cell.getCellProps()}>\r\n                                                        {cell.render('Cell')}\r\n                                                    </td>\r\n                                                    )\r\n\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div style={{display:\"none\"}}> <PrintDueEmis ref={emiDetailsRef} dueEmis={rows}/></div>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DueEmis;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from './components/home/Home'\r\nimport Registration from './components/users/Registration'\r\nimport Login from './components/users/Login'\r\nimport FillItr from './components/finance-Itr/FillItr'\r\nimport InnerLayout from './components/layout/InnerLayout'\r\nimport CategoryList from './components/food-order/CategoryList'\r\nimport MyCart from './components/food-order/MyCart'\r\nimport PlaceOrder from './components/food-order/PlaceOrder'\r\nimport OrderSuccess from './components/food-order/OrderSuccess'\r\nimport AdminHome from './components/Admin/Home';\r\nimport CategoryManagement from './components/Admin/CategoryManagement';\r\nimport AddCategory from './components/Admin/AddCategory';\r\nimport OrderHistory from './components/Admin/orders/OrderHistory';\r\nimport UserOrderHistory from './components/users/UserOrderHistory';\r\nimport UserAction from './components/users/user-actions/UserAction';\r\nimport ProductManagement from './components/Admin/products/ProductManagement';\r\nimport AddProduct from './components/Admin/products/AddProduct';\r\nimport EditProduct from './components/Admin/products/EditProduct';\r\nimport OrderFailed from './components/food-order/OrderFailed';\r\nimport FinanceRequests from './components/Admin/finance/FinanceRequests';\r\nimport Form16Requests from './components/Admin/finance/Form16Requests';\r\nimport InqueryForm from './components/home/InqueryForm';\r\nimport MemberGroup from  './components/masterRecord/memberGroup/MemberGroup';\r\nimport AddMemberGroup from  './components/masterRecord/memberGroup/AddMemberGroup';\r\nimport AddMember from  './components/masterRecord/member/AddMember';\r\nimport Member from  './components/masterRecord/member/Member';\r\nimport MemberViewDetails from  './components/masterRecord/member/MemberViewDetails';\r\nimport Scheme from  './components/groupLoan/Scheme';\r\nimport AddScheme from  './components/groupLoan/AddScheme';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport LoanApplication from  './components/groupLoan/LoanApplication';\r\nimport LoanApproval from  './components/groupLoan/LoanApproval';\r\nimport DisburseLoan from  './components/groupLoan/DisburseLoan';\r\nimport LoanApprovalDetails from  './components/groupLoan/LoanApprovalDetails';\r\nimport AllApplications from  './components/groupLoan/AllApplications';\r\nimport EmiCalculator from  './components/groupLoan/EmiCalculator';\r\nimport DueEmis from './components/emis/DueEmis';\r\n\r\nfunction Routes() {\r\n    const checkLogin=()=>{\r\n        console.log(\"check login\")\r\n    }\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n            <InnerLayout exact path=\"/\" component={Dashboard}/>\r\n            <InnerLayout exact path=\"/memberGroup\" component={MemberGroup} />\r\n            <InnerLayout exact path=\"/addMemberGroup\" component={AddMemberGroup} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/scheme\" component={Scheme} />\r\n            <InnerLayout exact path=\"/viewMemberDetail\" component={MemberViewDetails} />\r\n            <InnerLayout exact path=\"/addScheme\" component={AddScheme} />\r\n            <InnerLayout exact path=\"/loanApplication\" component={LoanApplication} />\r\n            <InnerLayout exact path=\"/loanApproval\" component={LoanApproval} />\r\n            <InnerLayout exact path=\"/disburseLoan\" component={DisburseLoan} />\r\n            <InnerLayout exact path=\"/loanApprovalDetails\" component={LoanApprovalDetails} />\r\n            <InnerLayout exact path=\"/allApplications\" component={AllApplications} />\r\n            <InnerLayout exact path=\"/emiCalculator\" component={EmiCalculator} />\r\n            <InnerLayout exact path=\"/dueEmis\" component={DueEmis} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <InnerLayout path=\"/registration\" component={Registration} />\r\n                <InnerLayout path=\"/fillItr\" component={FillItr} />\r\n                <InnerLayout path=\"/CategoryList\" component={CategoryList} />\r\n                <InnerLayout path=\"/myCart\" component={MyCart} />\r\n                <InnerLayout path=\"/placeOrder\" component={PlaceOrder} />\r\n                <InnerLayout path=\"/orderSuccess\" component={OrderSuccess} />\r\n                <InnerLayout path=\"/adminHome\" component={AdminHome} />\r\n                <InnerLayout path=\"/categoryManagement\" component={CategoryManagement} />\r\n                <InnerLayout path=\"/addCategory\" component={AddCategory} />\r\n                <InnerLayout path=\"/orderHistory\" component={OrderHistory} />\r\n                <InnerLayout path=\"/userOrderHistory\" component={UserOrderHistory} />\r\n                <InnerLayout path=\"/userAction\" component={UserAction} />\r\n                <InnerLayout path=\"/productManagement\" component={ProductManagement} />\r\n                <InnerLayout path=\"/addProduct\" component={AddProduct} />\r\n                <InnerLayout path=\"/editProduct\" component={EditProduct} />\r\n                <InnerLayout path=\"/orderFailed\" component={OrderFailed} />\r\n                <InnerLayout path=\"/financeRequests\" component={FinanceRequests} />\r\n                <InnerLayout path=\"/form16Requests\" component={Form16Requests} />\r\n                <InnerLayout path=\"/inqueryForm\" component={InqueryForm} />\r\n                <InnerLayout path=\"/member\" component={Member} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store} from './store';\r\n\r\nimport Routes from './Routes';\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div className=\"App\">\r\n      {/* <Header/> */}\r\n      <Routes/>\r\n    </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}