{"version":3,"sources":["constants/actionTypes.js","reducers/order.js","reducers/product.js","reducer.js","reducers/auth.js","reducers/common.js","middleware.js","store.js","components/layout/ListErrors.js","models/user.js","components/layout/Loader.js","components/users/Login.js","components/layout/LogedInView.js","components/layout/LogedOutView.js","components/finance-Itr/ItrPopup.js","components/layout/InnerHeader.js","components/layout/Footer.js","components/layout/Leftbar.js","components/layout/TopNav.js","components/layout/InnerLayout.js","models/masterRecord.js","components/masterRecord/memberGroup/MemberGroup.js","components/masterRecord/memberGroup/AddMemberGroup.js","models/memberDetails.js","components/masterRecord/member/AddMember.js","components/masterRecord/member/Member.js","components/masterRecord/member/MemberViewDetails.js","models/groupLoan.js","components/groupLoan/Scheme.js","components/groupLoan/AddScheme.js","models/dashboard.js","components/dashboard/Dashboard.js","components/groupLoan/LoanApplication.js","components/groupLoan/LoanApproval.js","components/groupLoan/DisburseLoan.js","components/groupLoan/EmiCard.js","components/groupLoan/EmiCardPrint.js","components/groupLoan/LoanApprovalDetails.js","components/groupLoan/AllApplications.js","components/groupLoan/EmiCalculator.js","components/emis/printDueEmis.js","components/emis/DueEmis.js","components/groupLoan/Village.js","components/groupLoan/AddVillage.js","models/expenseRecord.js","components/expenses/Expense.js","components/expenses/AddExpense.js","models/processingFee.js","components/processing-fee/ProcessingFee.js","components/processing-fee/AddProcessingFee.js","components/dashboard/Ladger.js","models/RDApplications.js","components/rdModule/RdApplications.js","components/rdModule/RdDetails.js","components/rdModule/openNewRdAccount.js","components/rdModule/RdDeposites.js","components/dashboard/CompleteLadger.js","Routes.js","App.js","reportWebVitals.js","index.js","agent.js","models/BaseUrl.js"],"names":["REDIRECT","LOGIN","LOGOUT","REGISTER","LOGIN_PAGE_UNLOADED","REGISTER_PAGE_UNLOADED","ASYNC_START","ASYNC_END","UPDATE_FIELD_AUTH","ADD_ITEM_INITIAL","INCREASE_QUANTITY","DECREASE_QUANTITY","RESET_ORDER","STORE_EDIT_PRODUCT","GET_EDIT_PRODUCT","UPDATE_PRODUCT_FIELD","defaultState","addedItem","product","appReducer","combineReducers","auth","state","action","type","inProgress","errors","payload","message","role","record","id","statusCode","jwtToken","isLoginSuccess","subtype","key","value","common","redirectTo","order","productId","item","_id","quantity","perItemPrice","price","map","data","prod","rootReducer","undefined","promiseMiddleware","store","next","v","then","dispatch","currentView","getState","viewChangeCounter","skipTracking","res","currentState","promise","error","response","body","localStorageMiddleware","window","localStorage","setItem","agent","setToken","createStore","reducer","composeWithDevTools","applyMiddleware","ListErrors","this","props","Alert","variant","Component","login","username","password","superagent","post","API_ROOT","Loader","show","Spinner","animation","className","relative","Login","submitForm","ev","preventDefault","setState","isShowLoader","user","console","log","onSubmit","changeEmail","onChangeEmail","target","changePassword","onChangePassword","history","push","onUnload","Form","Row","Group","as","Col","controlId","Label","Control","placeholder","onChange","required","Button","disabled","connect","LogedInView","currentUser","aactiveClassName","to","LogedOutView","useDispatch","useHistory","name","email","split","isAdmin","isPrimeMember","onClick","ItrPopup","Modal","isopen","onHide","hide","centered","Header","closeButton","Title","Body","pathname","query","InnerHeader","handleITRPopup","Footer","Leftbar","useSelector","Nav","Item","Link","href","class","eventKey","TopNav","Navbar","collapseOnSelect","expand","bg","toggleSidebar","Toggle","Collapse","InnerLayout","component","rest","useState","showSidebar","setshowSidebar","useEffect","innerWidth","checkLogin","jwt","getItem","hasOwnProperty","render","Container","fluid","md","sm","getMemberGroups","get","saveMemberGroups","getMembersBygroup","group_code","deleteGroup","del","MemberGroup","setisShowLoader","memberGroupRecords","setMemberGroupsRecords","memberList","setMemberList","showDeleteModel","setShowDeleteModel","deleteID","setDeleteID","showMemberModel","setshowMemberModel","getMemberGroup","masterRecord","deleteMemberGroup","a","UpdatedList","filter","member","idx","length","Table","striped","bordered","hover","responsive","val","member_id","member_name","gender","moment","date_of_birth","format","age","marital_status","mobile_number","aadhar_number","voter_id_number","pan_card_number","driving_license_number","ration_card_number","bank_ifsc_code","bank_account","bank_account_holder","size","active","group","group_name","remark","Badge","member_count","deleteHandle","AddMemberGroup","values","setValues","isShow","showToast","setShowToast","formik","useFormik","initialValues","user_id","validate","resetForm","handleChange","prevValues","Toast","autohide","delay","onClose","handleSubmit","touched","rows","getMemberDetailsData","getMemberPageData","saveMemberDetails","deleteMember","editMember","put","AddMember","Date","enrollmentDate","setEnrollmentDate","dob","setDob","groups","setGroups","location","getMemberDetails","memberDetails","email_id","member_group_id","enrollment_date","selected","date","Members","memberRecords","setMemberRecords","useMemo","index","col1","col2","col3","col4","col5","columns","accessor","allowFilter","memberRecord","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","count","e","defaultColumn","React","Filter","paginate","totalPage","pageNumberArray","i","Pagination","First","gotoPage","Prev","previousPage","canPreviousPage","num","pageIndex","Next","nextPage","canNextPage","Last","useTable","initialState","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","pageCount","pageSize","setPageSize","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","loanAccounts","setLoanAccounts","getMemberData","Promise","all","loanStatus","loan","is_approved","is_disbursed","Card","border","header","text","loan_account_no","application_date","scheme_id","village_name","day","week","address","loan_amount","interest_rate","EMI_payout","EMI_type","Tenure","getScheme","saveScheme","deleteScheme","getLoanAppInitialData","applyForloan","getApprovalList","getDisburseList","getLoanDetailbyId","approveRejectLoan","getAllLoanApplications","disburseRejectLoan","calculateEMI","getDueEmis","today","paidEmi","getPaidEmis","loanAccountNo","saveVillage","getVillage","Scheme","schemes","setSchemes","getSchemes","groupLoan","scheme","scheme_code","scheme_name","max_amount","AddScheme","min","getReceivedAmount","getPaidAmount","getEmiRecord","Dashboard","isShowReceivedLoader","setisShowReceivedLoader","receivedAmount","setReceivedAmount","isShowPaidLoader","setisShowPaidLoader","paidAmount","setPaidAmount","notPaid","paid","emiCounts","setEmiCounts","todayEmis","dashboard","notPaidCount","paidCount","gotoLedger","ledgerType","formatAmount","amount","toString","replace","xs","total","Text","style","xmlns","width","height","fill","viewBox","d","chartType","loader","options","chartArea","pieSliceText","rootProps","LoanApplication","schemeRecords","setSchemeRecords","selectedScheme","setSelectedScheme","villageRecords","setVillageRecords","getSchemesAndMembers","tenure","village_id","schems","selectedvill","vill","LoanApproval","loanlist","setLoanlist","getLoanList","loan_id","DisburseLoan","EmiCard","handlePrintEMI","showDisburseButton","emiData","paidEmiRecord","EMI","toFixed","principal","int_amount","outstanding","EmiCardPrint","PureComponent","LoanApprovalDetails","memberDetailsRef","useRef","handlePrintMemberDetail","useReactToPrint","content","current","documentTitle","applicationRef","handlePrintApplication","emiRef","setPaidEmiRecord","isShowEMILoader","setisShowEMILoader","setEmiData","loanDetails","setLoanDetails","showApprovalButton","setShowApprovalButton","setShowDisburseButton","getLoanDetails","calculateEmi","EmiData","paidData","result","emiDate","EMI_date","actionOnLoan","actionType","actionDisburseLoan","goBack","ref","display","AllApplications","col6","col7","actionStatus","col8","Cell","emi","formatedData","EmiCalculator","calculatedData","setCalculatedData","componentRef","handlePrint","loanStartDate","PrintDueEmis","add","parseFloat","dueEmis","colSpan","reduce","DueEmis","setDueEmis","paidID","setPaidID","emiDetailsRef","handlePrintEmiDetail","getDueEmisRecord","remain_EMI","EMI_amount","col9","loan_table_id","paidHandle","emi_id","substring","paidEMI","emidata","InputGroup","FormLabel","selectedDate","dateFormat","cursor","Village","getVillages","AddVillage","getExpense","saveExpense","deleteExpense","editExpense","Expense","expense","setExpense","getExpenses","expenseRecord","expense_type","date_of_expense","created_at","AddExpense","getExpenseDetails","getProcessingFee","saveProcessingFee","deleteProcessingFee","editProcessingFee","ProcessingFee","processingFees","setProcessingFees","getProcessingFees","processingFee","particular","date_of_processing","AddProcessingFee","Ladger","isShowLoaderLoader","setisShowLoaderLoader","ladger","setLadger","refContainer","emiLadger","emis","processingFeeLadger","sort","compare","expensesLadger","expenses","loanLadger","b","previous","getAllRdApplications","agent_id","openRdAccount","getRdDetails","getDeposits","deposites_date","postDeposit","RdApplications","rdAccounts","setRdAccounts","account_number","account_holder_name","phone","rd_amount","maturity_amount","period","RDApplications","RdDetails","father_husband_name","aadhar_card","pan_card","driving_licence","ration_card","voter_id","initial_deposited_amount","OpenNewRdAccount","loading","setLoading","setdob","checked","status","RdDeposites","deposited_amount","deposited_date","rd_table_id","is_deposited","rDApplications","dataArray","CompleteLadger","progress","setProgress","balance","received","ladgerArray","fetchData","calculateTotal","dr","cr","float","top","position","ProgressBar","now","label","Routes","exact","path","MemberViewDetails","openNewRdAccount","Member","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","superagentPromise","_superagent","global","responseBody","encodeURIComponent","errorBody","err","token","tokenPlugin","req","set","requests","url","use","Auth","register","userDetails","Order","getProductsByCat","catname","getCatgoryInitialData","placeOrder","getCategoryAdmin","getOrdersHistoryAdmin","getOrderHistoryByUserEmail","addCategory","deleteCategory","editCategory","getProducts","deleteProduct","addProducts","editProducts","Payment","getRazorpayOrderId","updatePaymentStatus","Finance","fillItr","getAdminItr","uploadForm16","getAdminForm16","downloadForm16","fileName","Inquery","submitInquery","getToken","_token","hostname"],"mappings":"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","file":"static/js/main.cf616ba1.chunk.js","sourcesContent":["\r\n  \r\nexport const APP_LOAD = 'APP_LOAD';\r\nexport const REDIRECT = 'REDIRECT';\r\nexport const ARTICLE_SUBMITTED = 'ARTICLE_SUBMITTED';\r\nexport const SETTINGS_SAVED = 'SETTINGS_SAVED';\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const SETTINGS_PAGE_UNLOADED = 'SETTINGS_PAGE_UNLOADED';\r\nexport const HOME_PAGE_LOADED = 'HOME_PAGE_LOADED';\r\nexport const HOME_PAGE_UNLOADED = 'HOME_PAGE_UNLOADED';\r\nexport const ARTICLE_PAGE_LOADED = 'ARTICLE_PAGE_LOADED';\r\nexport const ARTICLE_PAGE_UNLOADED = 'ARTICLE_PAGE_UNLOADED';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const ARTICLE_FAVORITED = 'ARTICLE_FAVORITED';\r\nexport const ARTICLE_UNFAVORITED = 'ARTICLE_UNFAVORITED';\r\nexport const SET_PAGE = 'SET_PAGE';\r\nexport const APPLY_TAG_FILTER = 'APPLY_TAG_FILTER';\r\nexport const CHANGE_TAB = 'CHANGE_TAB';\r\nexport const PROFILE_PAGE_LOADED = 'PROFILE_PAGE_LOADED';\r\nexport const PROFILE_PAGE_UNLOADED = 'PROFILE_PAGE_UNLOADED';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTER = 'REGISTER';\r\nexport const LOGIN_PAGE_UNLOADED = 'LOGIN_PAGE_UNLOADED';\r\nexport const REGISTER_PAGE_UNLOADED = 'REGISTER_PAGE_UNLOADED';\r\nexport const ASYNC_START = 'ASYNC_START';\r\nexport const ASYNC_END = 'ASYNC_END';\r\nexport const EDITOR_PAGE_LOADED = 'EDITOR_PAGE_LOADED';\r\nexport const EDITOR_PAGE_UNLOADED = 'EDITOR_PAGE_UNLOADED';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const REMOVE_TAG = 'REMOVE_TAG';\r\nexport const UPDATE_FIELD_AUTH = 'UPDATE_FIELD_AUTH';\r\nexport const UPDATE_FIELD_EDITOR = 'UPDATE_FIELD_EDITOR';\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const PROFILE_FAVORITES_PAGE_UNLOADED = 'PROFILE_FAVORITES_PAGE_UNLOADED';\r\nexport const PROFILE_FAVORITES_PAGE_LOADED = 'PROFILE_FAVORITES_PAGE_LOADED';\r\nexport const ADD_ITEM_INITIAL = 'ADD_ITEM_INITIAL';\r\nexport const INCREASE_QUANTITY = 'INCREASE_QUANTITY';\r\nexport const DECREASE_QUANTITY = 'DECREASE_QUANTITY';\r\nexport const RESET_ORDER = 'RESET_ORDER';\r\nexport const STORE_EDIT_PRODUCT = 'STORE_EDIT_PRODUCT';\r\nexport const GET_EDIT_PRODUCT = 'GET_EDIT_PRODUCT';\r\nexport const UPDATE_PRODUCT_FIELD = 'UPDATE_PRODUCT_FIELD';","import {\r\n    ADD_ITEM_INITIAL,\r\n    INCREASE_QUANTITY,\r\n    DECREASE_QUANTITY,\r\n    RESET_ORDER\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    addedItem: [],\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case ADD_ITEM_INITIAL:\r\n            const addedItem =[...state.addedItem,{\r\n                productId:action.item._id,\r\n                quantity:1,\r\n                perItemPrice:action.item.price,\r\n                item:action.item\r\n            }]\r\n            return {...state, addedItem};\r\n        case INCREASE_QUANTITY:\r\n             state.addedItem.map(record=>{\r\n                if(record.productId == action.productId){\r\n                    record.quantity +=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case DECREASE_QUANTITY:\r\n            state.addedItem.map(record=>{\r\n                if(record.productId == action.productId && record.quantity !=0){\r\n                        record.quantity -=1\r\n                }\r\n                return record;\r\n            });\r\n            return {...state,state}\r\n        case RESET_ORDER:\r\n            state.addedItem = []\r\n            return {...state}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import {\r\n    STORE_EDIT_PRODUCT,\r\n    GET_EDIT_PRODUCT,\r\n    UPDATE_PRODUCT_FIELD\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    product: {},\r\n  };\r\n  \r\n  export default (state = defaultState, action) => {\r\n      switch (action.type) {\r\n        case STORE_EDIT_PRODUCT:\r\n            return {...state,\r\n                product:action.data \r\n            };\r\n        case GET_EDIT_PRODUCT:\r\n            return {...state};\r\n        case UPDATE_PRODUCT_FIELD:\r\n            let prod = state.product;\r\n            prod[action.data.key]=action.data.value;\r\n           return {...state,product:prod}\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import auth from './reducers/auth';\r\nimport common from './reducers/common';\r\nimport order from './reducers/order';\r\nimport product from './reducers/product';\r\nimport { combineReducers } from 'redux';\r\n//import { routerReducer } from 'react-router-redux';\r\n\r\nconst appReducer = combineReducers({\r\n  auth,\r\n  common,\r\n  order,\r\n  product\r\n  /* your app’s top-level reducers */\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'LOGOUT') {\r\n    state = undefined\r\n  }\r\n\r\n  return appReducer(state, action)\r\n}\r\nexport default rootReducer\r\n// export default combineReducers({\r\n//   auth,\r\n//   common,\r\n//   order,\r\n//     //router: routerReducer\r\n//   });","import {\r\n    LOGIN,\r\n    REGISTER,\r\n    LOGIN_PAGE_UNLOADED,\r\n    REGISTER_PAGE_UNLOADED,\r\n    ASYNC_START,\r\n    UPDATE_FIELD_AUTH,\r\n    LOGOUT\r\n  } from '../constants/actionTypes';\r\n  \r\n  export default (state = {}, action) => {\r\n  //console.log(action);\r\n    switch (action.type) {\r\n      case LOGIN:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload.message,\r\n          role:action.payload.record[0]?.role,\r\n          id:action.payload.record[0]?.id,\r\n          statusCode:action.payload.jwtToken != \"\"?\"200\":\"\",\r\n          isLoginSuccess:action.payload.jwtToken != \"\"? true:false\r\n        }\r\n      case REGISTER:\r\n        return {\r\n          ...state,\r\n          inProgress: false,\r\n          errors: action.payload,\r\n          statusCode:action.payload.statusCode\r\n        };\r\n      case LOGIN_PAGE_UNLOADED:\r\n      return{\r\n        ...state,\r\n        //errors: action.payload,\r\n        //userDetails:\r\n      }\r\n      case REGISTER_PAGE_UNLOADED:\r\n        return {};\r\n      case ASYNC_START:\r\n        if (action.subtype === LOGIN || action.subtype === REGISTER) {\r\n          return { ...state, inProgress: true };\r\n        }\r\n        break;\r\n      case UPDATE_FIELD_AUTH:\r\n        return { ...state, [action.key]: action.value };\r\n      default:\r\n        return state;\r\n    }\r\n    return state;\r\n  };","import {\r\n    LOGOUT,\r\n    REDIRECT\r\n  } from '../constants/actionTypes';\r\n  const defaultState = {\r\n    appName: 'Conduit',\r\n    token: null,\r\n    viewChangeCounter: 0\r\n  };\r\n  \r\n  export default (state = {}, action) => {\r\n    //console.log(action);\r\n      switch (action.type) {\r\n        case REDIRECT:\r\n            return { ...state, redirectTo: null };\r\n        // case LOGOUT:\r\n        //     return { redirectTo: '/login', token: null, currentUser: null };\r\n        default:\r\n          return state;\r\n      }\r\n      return state;\r\n    };","import agent from './agent';\r\nimport {\r\n  ASYNC_START,\r\n  ASYNC_END,\r\n  LOGIN,\r\n  LOGOUT,\r\n  REGISTER\r\n} from './constants/actionTypes';\r\n\r\nconst promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    store.dispatch({ type: ASYNC_START, subtype: action.type });\r\n\r\n    const currentView = store.getState().viewChangeCounter;\r\n    const skipTracking = action.skipTracking;\r\n\r\n    action.payload.then(\r\n      res => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.payload = res;\r\n        store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        const currentState = store.getState()\r\n        if (!skipTracking && currentState.viewChangeCounter !== currentView) {\r\n          return\r\n        }\r\n        action.error = true;\r\n        action.payload = error.response.body;\r\n        if (!action.skipTracking) {\r\n          store.dispatch({ type: ASYNC_END, promise: action.payload });\r\n        }\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  next(action);\r\n};\r\n\r\nconst localStorageMiddleware = store => next => action => {\r\n  if (action.type === LOGIN && action.payload != undefined) {\r\n    if (action.payload.jwtToken!=\"\") {\r\n      window.localStorage.setItem('jwt', action.payload.jwtToken);\r\n      agent.setToken(action.payload.jwtToken);\r\n    }\r\n  } else if (action.type === LOGOUT) {\r\n    window.localStorage.setItem('jwt','');\r\n    agent.setToken(null);\r\n  }\r\n\r\n   next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}\r\n\r\n\r\nexport { promiseMiddleware, localStorageMiddleware }","import { applyMiddleware, createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { promiseMiddleware, localStorageMiddleware } from './middleware';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nconst getMiddleware = () => {\r\n      return applyMiddleware( promiseMiddleware, localStorageMiddleware);\r\n  };\r\nexport const store = createStore(reducer,composeWithDevTools(getMiddleware()));","import React, { Component } from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\n\r\nexport default class ListErrors extends Component {\r\n    render() {\r\n        const errors = this.props.errors;\r\n        const statusCode = this.props.statusCode;\r\n        if (errors) {\r\n            return (\r\n                <Alert  variant={statusCode==200?\"success\":\"danger\"}>\r\n                    {errors}\r\n              </Alert>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n\r\nconst Auth = {\r\n    login: (username, password) =>\r\n    superagent.post(`${API_ROOT}/user/login`,  { username, password } ),\r\n  };\r\n  \r\n  export default {Auth};\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nfunction Loader(props) {\r\n    if(props.show){\r\n        return (\r\n            <Spinner animation=\"border\" role=\"status\" className={props?.relative?\"loader-relative\":\"loader\"}>\r\n            </Spinner>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component}  from 'react'\r\nimport { Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport { Route, NavLink, Link,useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport agent from '../../agent'\r\nimport ListErrors from '../layout/ListErrors';\r\nimport user from \"../../models/user\";\r\nimport Loader from '../layout/Loader';\r\nimport {\r\n    UPDATE_FIELD_AUTH,\r\n    LOGIN,\r\n    LOGIN_PAGE_UNLOADED\r\n} from '../../constants/actionTypes';\r\n\r\nclass Login extends Component {\r\n   // let history = useHistory();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={isShowLoader:false};\r\n        this.changeEmail = ev => {this.props.onChangeEmail(ev.target.value)};\r\n        this.changePassword = ev => {this.props.onChangePassword(ev.target.value)};\r\n    }\r\n    submitForm=ev=> {\r\n        ev.preventDefault();\r\n        this.setState({isShowLoader:true});\r\n        user.Auth.login(this.props.username, this.props.password).then(res=>{\r\n            this.setState({isShowLoader:false});\r\n            console.log(res);\r\n            this.props.onSubmit(res.body);\r\n        })\r\n    };\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.isLoginSuccess){\r\n            this.props.history.push('/')\r\n        }\r\n        \r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.props.onUnload();\r\n      }\r\n    render() {\r\n        const username = this.props.username;\r\n        const password = this.props.password;\r\n        return (\r\n            <>\r\n            <div className=\"login-div\">\r\n            <Loader show={this.state.isShowLoader} />\r\n        {/* <Alert key={this.state.errormsg} variant=\"danger\">{this.state.errormsg}</Alert> */}\r\n            <ListErrors errors={this.props.errors} statusCode={this.props.statusCode}/>\r\n                <Form className=\"login-form\" onSubmit={this.submitForm}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicEmail\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter username\" value={username} onChange={this.changeEmail} required/>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={password}  onChange={this.changePassword} required/>\r\n                        </Form.Group>\r\n\r\n                    </Form.Row>\r\n                    <Form.Row >\r\n                        <Col>\r\n                        <Button variant=\"primary\" disabled={this.props.inProgress} type=\"submit\">{this.props.inProgress ? 'Loading…' : \"Login\"}</Button>\r\n\r\n                        </Col>\r\n                    </Form.Row>\r\n                    {/* <Form.Row>\r\n                        <Link as={Col} to=\"/registration\" > SignUp</Link>\r\n                    </Form.Row> */}\r\n\r\n                </Form>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth });\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChangeEmail: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\r\n    onChangePassword: value =>\r\n        dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\r\n    onSubmit: (data) =>\r\n        dispatch({ type: LOGIN, payload: data }),\r\n    onUnload: () =>\r\n        dispatch({ type: LOGIN_PAGE_UNLOADED })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\n\r\nfunction LogedInView(props) {\r\n    if(!props.currentUser.errors || props.currentUser.errors.statusCode ==500){\r\n        return (\r\n\r\n        <li className=\"nav-item\">\r\n        <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n        </li>\r\n        )\r\n    }\r\n    return null;\r\n\r\n}\r\n\r\nexport default LogedInView\r\n","import React from 'react'\r\nimport { Route, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport {\r\n    LOGOUT\r\n  } from '../../constants/actionTypes';\r\nfunction LogedOutView(props) {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n\r\n    const logout = ()=>{\r\n         dispatch({ type: LOGOUT })\r\n           console.log(\"hollo\");\r\n           history.push(\"/\");\r\n       }\r\n         if (props.currentUser.errors && props.currentUser.errors.statusCode == 200) {\r\n        let name = props.currentUser.email.split(\"@\");\r\n\r\n        return (<>\r\n            \r\n            {props.currentUser.errors.body.record.isAdmin?<li className=\"nav-item\">\r\n            <li className=\"nav-item\">\r\n            <NavLink aactiveClassName=\"active\" to=\"/adminHome\" className=\"nav-link\">Admin</NavLink>\r\n            </li>\r\n                \r\n            </li>:\"\"}            \r\n            <li className=\"nav-item\">\r\n                <NavLink aactiveClassName=\"active\" to=\"/userAction\" className=\"nav-link\">\r\n                    {name[0]}\r\n\r\n                    {props.currentUser.errors.body.record.isPrimeMember?<label className=\"clr-cyan\">(Prime member)</label>:\"\"}  \r\n\r\n                    \r\n                    </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\" onClick={logout} >Logout</a>\r\n                {/* <NavLink className=\"nav-link\">{props.email}</NavLink> */}\r\n            </li>\r\n        </>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default LogedOutView\r\n","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//import \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nfunction ItrPopup(props) {\r\n    return (\r\n    <Modal show={props.isopen} onHide={props.hide} centered className=\"text-center\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Tax Return</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'fill'}}}  className=\"btn btn-danger btn-sm\">Start Your Tax Return</Link>\r\n                <Link to={{ pathname: `/fillItr`, query:{type: 'uploadForm16'}}} className=\"btn btn-danger btn-sm\">Upload Form-16 Now</Link>\r\n            </Modal.Body>\r\n        </Modal>\r\n        )\r\n}\r\n\r\nexport default ItrPopup\r\n","import React, { Component } from 'react'\r\nimport { Route,NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport LoggedInView from './LogedInView';\r\nimport LoggedOutView from './LogedOutView';\r\nimport ItrPopup from '../finance-Itr/ItrPopup'\r\n\r\nclass InnerHeader extends Component {\r\n    isopen = false;\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        isopen:false\r\n      }\r\n    }\r\n    handleITRPopup = () =>{\r\n        this.setState({\r\n          isopen:this.state.isopen?false:true\r\n        })\r\n      }\r\n    render(){\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark top-nav-collapse\">\r\n                <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\"> <h2>AA2 Mutualhelp</h2></NavLink>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent-7\"\r\n                        aria-controls=\"navbarSupportedContent-7\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-7\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink aactiveClassName=\"active\" className=\"nav-link\" to=\"/\">Home</NavLink> */}\r\n\r\n                                {/* <a className=\"nav-link\" href=\"#\">Home\r\n                    <span className=\"sr-only\">(current)</span>\r\n                                </a> */}\r\n                            {/* </li> */}\r\n                            {/* <li className=\"nav-item\" onClick={this.handleITRPopup}>\r\n                                <a className=\"nav-link\" onClick={this.handleITRPopup}>File ITR</a>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\"> */}\r\n                                {/* <a className=\"nav-link\" href=\"#\">Order Food</a> */}\r\n                                {/* <NavLink aactiveClassName=\"active\" to=\"/CategoryList\" className=\"nav-link\">Order Food</NavLink>\r\n                            </li> */}\r\n                            {/* <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n\r\n                            </li> */}\r\n                            <LoggedOutView currentUser={this.props}/>\r\n                            <LoggedInView currentUser={this.props}/>\r\n\r\n                        </ul>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <ItrPopup isopen={this.state.isopen} hide={this.handleITRPopup}/>\r\n        </header>\r\n    )}\r\n\r\n}\r\nconst mapStateToProps = state => ({ ...state.auth});\r\nconst mapDispatchToProps = dispatch => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerHeader)\r\n","import React from 'react'\r\nimport TotalAmount from '../food-order/TotalAmount'\r\nfunction Footer() {\r\n    return (\r\n      <>\r\n\r\n        <footer className=\"page-footer font-small stylish-color-dark pt-4\">\r\n        {/* <div className=\"container text-center text-md-left\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Footer Content</h5>\r\n              <p>Here you can use rows and columns to organize your footer content. Lorem ipsum dolor sit amet,\r\n                consectetur\r\n                adipisicing elit.</p>\r\n            </div>\r\n            <hr className=\"clearfix w-100 d-md-none\"/>\r\n            <div className=\"col-md-2 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Link 1</a>\r\n                </li>\r\n              </ul>\r\n            </div>    \r\n            <hr className=\"clearfix w-100 d-md-none\"/>\r\n            <div className=\"col-md-2 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Link 1</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <hr className=\"clearfix w-100 d-md-none\"/>\r\n            <div className=\"col-md-2 mx-auto\">\r\n              <h5 className=\"font-weight-bold text-uppercase mt-3 mb-4\">Links</h5>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#!\">Link 1</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n    \r\n        {/* <ul className=\"list-unstyled list-inline text-center py-2\">\r\n          <li className=\"list-inlin e-item\">\r\n            <h5 className=\"mb-1\">Register for free</h5>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a href=\"#!\" className=\"btn btn-danger btn-rounded\">Sign up!</a>\r\n          </li>\r\n        </ul> */}\r\n    \r\n        <hr/>\r\n    \r\n        <ul className=\"list-unstyled list-inline text-center\">\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-fb mx-1\">\r\n              <i className=\"fab fa-facebook-f\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-tw mx-1\">\r\n              <i className=\"fab fa-twitter\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-gplus mx-1\">\r\n              <i className=\"fab fa-google-plus-g\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-li mx-1\">\r\n              <i className=\"fab fa-linkedin-in\"> </i>\r\n            </a>\r\n          </li>\r\n          <li className=\"list-inline-item\">\r\n            <a className=\"btn-floating btn-dribbble mx-1\">\r\n              <i className=\"fab fa-dribbble\"> </i>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n        </div>\r\n        <TotalAmount/>\r\n      </footer>\r\n      </>\r\n        )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { Col, Nav} from 'react-bootstrap';\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nexport default function Leftbar() {\r\n    const auth = useSelector(state => state.auth);\r\n    return (\r\n        // <Col md={2} id=\"sidebar-col\" className=\"pr-0\">\r\n            <nav id=\"sidebar\">\r\n                {/* <div className=\"sidebar-header\">\r\n                    <h5>AA2 MutualHelp</h5>\r\n                </div> */}\r\n                <Nav className=\"list-unstyled components flex-column\" as=\"ul\" >\r\n                <Nav.Item as=\"li\" className=\"active\">\r\n                <LinkContainer to=\"/\">\r\n                <Nav.Link>\r\n                     Dashboard\r\n            </Nav.Link>\r\n            </LinkContainer>\r\n                </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                   \r\n                        <Nav.Link href=\"#homeSubmenu\" className=\"dropdown-toggle\" data-toggle=\"collapse\" aria-expanded=\"false\">Master Record</Nav.Link>\r\n                        \r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"homeSubmenu\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/memberGroup\">\r\n                                <Nav.Link href=\"/home\">Member Group</Nav.Link>\r\n                                </LinkContainer>\r\n                                {/* <NavLink to=\"/memberGroup\">Member Group</NavLink> */}\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/member\">\r\n                                <Nav.Link eventKey=\"link-1\">Members</Nav.Link>\r\n                            </LinkContainer>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#groupLoan\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Group Loan</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"groupLoan\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/emiCalculator\">\r\n                                <Nav.Link href=\"#\">Calculator</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/scheme\">\r\n                                <Nav.Link eventKey=\"link-1\">Scheme</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/village\">\r\n                                <Nav.Link eventKey=\"link-1\">Village</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/loanApplication\">\r\n                                <Nav.Link eventKey=\"link-2\">Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/loanApproval\">\r\n                                <Nav.Link eventKey=\"link-2\">Approve Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>:\"\"}\r\n                            {(auth.role==\"checker\"||auth.role==\"admin\")?<Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/disburseLoan\">\r\n                                <Nav.Link eventKey=\"link-2\">Disbure Application</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>:\"\"}\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/allApplications\">\r\n                                <Nav.Link eventKey=\"link-2\">Loan Applications</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#rdApplications\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Recurring Deposit</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"rdApplications\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/rdApplications\">\r\n                                <Nav.Link href=\"#\">RD applications</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#processingFee\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Processing Fee</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"processingFee\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                            <LinkContainer to=\"/processingFee\">\r\n                                <Nav.Link href=\"#\">List Processing Fee</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#expense\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Expense</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"expense\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <LinkContainer to=\"/expense\">\r\n                                <Nav.Link href=\"#\">List Expense</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item as=\"li\" >\r\n                        <Nav.Link href=\"#payments\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Payment to collect</Nav.Link>\r\n                        {/* <ul class=\"collapse list-unstyled\" id=\"homeSubmenu\"> */}\r\n                        <Nav class=\"collapse list-unstyled\" id=\"payments\" as=\"ul\">\r\n                            <Nav.Item as=\"li\">\r\n                                <LinkContainer to=\"/dueEmis\">\r\n                                    <Nav.Link href=\"#\">Payment to collect(Loan)</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n                            <Nav.Item as=\"li\">\r\n                                <LinkContainer to=\"/rdDeposites\">\r\n                                    <Nav.Link href=\"#\">Deposites collect(RD)</Nav.Link>\r\n                                </LinkContainer>\r\n                            </Nav.Item>\r\n\r\n                        </Nav>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </nav>\r\n        // </Col>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from 'react-router';\r\nimport {LOGOUT} from '../../constants/actionTypes';\r\n\r\nexport default function TopNav(props) {\r\nconst auth = useSelector(state => state.auth);\r\nconst dispatch = useDispatch();\r\nlet history = useHistory();\r\nconst logout = ()=>{\r\n     dispatch({ type: LOGOUT })\r\n       history.push(\"/login\");\r\n   }\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"info\" variant=\"dark\">\r\n               \r\n                <h4 id=\"logo-web\" className=\"mr-4\">AA2 MutualHelp</h4>\r\n            <button type=\"button\" onClick={props.toggleSidebar} class=\"btn btn-dark\">\r\n                <i class=\"fas fa-align-left\"></i>\r\n            </button>\r\n            <h4 id=\"logo-mobile\" className=\"\">AA2 MutualHelp</h4>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link href=\"#\">{auth.username}</Nav.Link>\r\n                    <Nav.Link eventKey={2} onClick={logout}>\r\n                        Logout\r\n                    </Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport InnerHeader from './InnerHeader';\r\nimport Footer from './Footer';\r\nimport Leftbar from './Leftbar';\r\nimport TopNav from './TopNav';\r\nimport { useHistory } from 'react-router';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst InnerLayout = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const [showSidebar, setshowSidebar] = useState(true)\r\n    useEffect(() => {\r\n        setshowSidebar(window.innerWidth <= 768 ? false : true);\r\n        checkLogin();\r\n    }, [Component]);\r\n    const toggleSidebar = () => {\r\n\r\n        console.log(window);\r\n        setshowSidebar(showSidebar ? false : true)\r\n        // this.setState({\r\n        //   isopen:this.state.isopen?false:true\r\n        // })\r\n    }\r\n    const checkLogin = () =>{\r\n        let jwt = \"\";\r\n         jwt = localStorage.getItem(\"jwt\");\r\n         console.log(jwt);\r\n         if(jwt==\"\" || !auth.hasOwnProperty(\"username\")){\r\n             history.push(\"/login\");\r\n         }\r\n    }\r\n    return (\r\n        <Route {...rest} render={props => (\r\n            <>\r\n            \r\n            <Container fluid className=\"pl-0 pr-0\">\r\n            <Row>\r\n                <Col>\r\n                <TopNav toggleSidebar={toggleSidebar} />\r\n                </Col>\r\n            \r\n            </Row>\r\n                \r\n                <Row>\r\n                    \r\n                        {showSidebar ?<Col md={2} sm={2} id=\"sidebar-col\" className=\"bg-info\"><Leftbar/></Col> : \"\"}\r\n                        \r\n                   \r\n                    <Col sm={showSidebar ? 10 : 12} >\r\n                        <div id=\"content\">\r\n\r\n                            <Component {...props} />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* <Footer /> */}\r\n                </Container>\r\n            </>\r\n        )} />)\r\n}\r\n\r\nexport default InnerLayout\r\n","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberGroupModel = {\r\n  getMemberGroups(){\r\n    return superagent.get(`${API_ROOT}/memberGroups/entry`)\r\n  },\r\n  saveMemberGroups(data){\r\n    return superagent.post(`${API_ROOT}/memberGroups/entry`,data)\r\n  },\r\n  getMembersBygroup(group_code){\r\n    return superagent.get(`${API_ROOT}/memberGroups/memberByGroupCode/${group_code}`)\r\n  },\r\n  deleteGroup(group_code){\r\n    return superagent.del(`${API_ROOT}/memberGroups/entry/${group_code}`)\r\n  }\r\n\r\n  }\r\n    export default {MemberGroupModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal,Badge } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nfunction MemberGroup(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [memberGroupRecords,setMemberGroupsRecords]=useState([]);\r\n    const [memberList,setMemberList]=useState([]);\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\n\r\n    const [showMemberModel, setshowMemberModel] = useState(false)\r\n    const memberRecord = [];\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        masterRecord.MemberGroupModel.getMemberGroups().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberGroupsRecords(res.body.message);\r\n            }else{\r\n                setMemberGroupsRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    const handleMemmberList = (group_code)=>{\r\n        console.log(group_code);\r\n        setisShowLoader(true);\r\n        masterRecord.MemberGroupModel.getMembersBygroup(group_code).then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberList(res.body.message);\r\n                setshowMemberModel(true);\r\n            }else{\r\n                setMemberList([]);\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMemberGroup=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.deleteGroup(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = memberGroupRecords.filter((member,idx)=>member.group_code!=deleteID);\r\n                setMemberGroupsRecords(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n              \r\n    }\r\n\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Group</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMemberGroup()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n\r\n      <Modal show={showMemberModel} onHide={()=>setshowMemberModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Members</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{memberList.length!=0?<Table className=\"bg-white rounded small\" striped bordered hover responsive>\r\n        <thead className=\"bg-primary\">\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Gender</th>\r\n                <th>DOB</th>\r\n                <th>age</th>\r\n                <th>Marital status</th>\r\n                <th>Mobile</th>\r\n                <th>Aadhar</th>\r\n                <th>Voter id</th>\r\n                <th>PAN</th>\r\n                <th>Driving licence</th>\r\n                <th>Ration card</th>\r\n                <th>Bank IFSC code</th>\r\n                <th>Bank account</th>\r\n                <th>Bank account holder</th>\r\n            </tr>\r\n            </thead> \r\n                <tbody>\r\n                {memberList.map(val=>\r\n            <tr>\r\n                <td>{val.member_id}</td>\r\n                <td>{val.member_name}</td>\r\n                <td>{val.gender}</td>\r\n                <td>{moment(val.date_of_birth).format(\"DD-MM-YYYY\") }</td>\r\n                <td>{val.age}</td>\r\n                <td>{val.marital_status}</td>\r\n                <td>{val.mobile_number}</td>\r\n                <td>{val.aadhar_number}</td>\r\n                <td>{val.voter_id_number}</td>\r\n                <td>{val.pan_card_number}</td>\r\n                <td>{val.driving_license_number}</td>\r\n                <td>{val.ration_card_number}</td>\r\n                <td>{val.bank_ifsc_code}</td>\r\n                <td>{val.bank_account}</td>\r\n                <td>{val.bank_account_holder}</td>\r\n            </tr>\r\n            )}\r\n            </tbody></Table>:<h5>No members in this group!</h5>}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setshowMemberModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>setshowMemberModel(false)}>\r\n            Ok\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Member Groups</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMemberGroup\">\r\n                <Button variant=\"info\" size=\"sm\" active>\r\n                    Add Member Group\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Group Code</th>\r\n                    <th>Name</th>\r\n                    <th>Remark</th>\r\n                    <th>Member</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {memberGroupRecords.map((group,id)=>(<tr>\r\n                    <td>{group.group_code}</td>\r\n                    <td>{group.group_name}</td>\r\n                    <td>{group.remark}</td>\r\n                    <td><Button size=\"sm\" variant=\"info\" onClick={()=>handleMemmberList(group.group_code)}>\r\n                            Members<Badge className=\"bg-secondary\">{group.member_count}</Badge></Button></td>\r\n                    <td><Button size=\"sm\" disabled={group.member_count==0?false:true} variant=\"danger\" onClick={()=>deleteHandle(group.group_code)}>\r\n                        Delete</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default MemberGroup;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport Loader from '../../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddMemberGroup(props) {\r\n  const auth = useSelector(state => state.auth);\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false,type:\"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.group_code) {\r\n      errors.group_code = 'Group Code is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      group_code: '',\r\n      group_name: '',\r\n      remark: '',\r\n      user_id:auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await masterRecord.MemberGroupModel.saveMemberGroups(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          formik.resetForm();\r\n        } else {\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Member Group</h2>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Group Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"group_code\"\r\n                  placeholder=\"Enter group code\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.group_code}\r\n\r\n                />\r\n                {formik.touched.group_code && formik.errors.group_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.group_code}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Group Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"group_name\"\r\n                  placeholder=\"Enter group name\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.group_name}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Remark</Form.Label>\r\n                <Form.Control as=\"textarea\" rows={3} name=\"remark\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.remark} />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddMemberGroup;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst MemberDetailModel = {\r\n  getMemberDetailsData(member_id=\"all\"){\r\n    return superagent.get(`${API_ROOT}/member/entry/${member_id}`)\r\n  },\r\n  getMemberPageData(member_id=\"\"){\r\n    return [superagent.get(`${API_ROOT}/member/entry/${member_id}`),superagent.get(`${API_ROOT}/member/loanByMember/${member_id}`)]\r\n\r\n  },\r\n  saveMemberDetails(data){\r\n    return superagent.post(`${API_ROOT}/member/entry`,data)\r\n\r\n  },\r\n  deleteMember(id){\r\n    return superagent.del(`${API_ROOT}/member/entry/${id}`)\r\n  },  \r\n  editMember(data,id){\r\n    return superagent.put(`${API_ROOT}/member/entry/${id}`,data)\r\n  }  \r\n    \r\n  }\r\n    export default {MemberDetailModel};","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useFormik } from 'formik';\r\nimport memberDetails from \"../../../models/memberDetails\"\r\nimport masterRecord from '../../../models/masterRecord';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Loader from '../../layout/Loader';\r\n\r\n//import \"react-datepicker/dist/react-datepicker.css\";\r\nfunction AddMember(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    let history = useHistory();\r\n\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [dob, setDob] = useState();\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [groups, setGroups] = useState([])\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n        console.log(props);\r\n        if(props.location.state)\r\n            getMemberDetails(props.location.state);\r\n        getMemberGroups();\r\n    }, [])\r\n    const getMemberGroups = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await masterRecord.MemberGroupModel.getMemberGroups();\r\n            setisShowLoader(false);\r\n            setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n    }\r\n    const getMemberDetails = async(member_id)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await memberDetails.MemberDetailModel.getMemberDetailsData(member_id);\r\n            console.log(response);\r\n            formik.values.aadhar_number = response.body.message[0].aadhar_number  \r\n            formik.values.member_name = response.body.message[0].member_name \r\n            formik.values.gender = response.body.message[0].gender \r\n            formik.values.age = response.body.message[0].age \r\n            formik.values.marital_status = response.body.message[0].marital_status \r\n            formik.values.mobile_number = response.body.message[0].mobile_number \r\n            formik.values.email_id = response.body.message[0].email_id \r\n            formik.values.member_group_id = response.body.message[0].member_group_id \r\n            formik.values.pan_card_number = response.body.message[0].pan_card_number \r\n            formik.values.driving_license_number = response.body.message[0].driving_license_number \r\n            formik.values.voter_id_number = response.body.message[0].voter_id_number \r\n            formik.values.ration_card_number = response.body.message[0].ration_card_number \r\n            formik.values.bank_account = response.body.message[0].bank_account \r\n            formik.values.bank_ifsc_code = response.body.message[0].bank_ifsc_code \r\n            formik.values.bank_account_holder = response.body.message[0].bank_account_holder \r\n            formik.values.enrollment_date = response.body.message[0].enrollment_date \r\n            setEnrollmentDate(new Date(response.body.message[0].enrollment_date));\r\n            formik.values.date_of_birth = response.body.message[0].date_of_birth \r\n            setDob(new Date(response.body.message[0].date_of_birth));\r\n\r\n            setisShowLoader(false);\r\n            //setGroups(response.body.message)\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n        }\r\n\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.member_name) {\r\n            errors.member_name = 'Please provide member name';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            enrollment_date: enrollmentDate,\r\n            date_of_birth: dob,\r\n            member_name: '',\r\n            gender: \"\",\r\n            age: \"\",\r\n            marital_status: \"\",\r\n            mobile_number: \"\",\r\n            email_id: \"\",\r\n            member_group_id: \"\",\r\n            aadhar_number: \"\",\r\n            pan_card_number: \"\",\r\n            driving_license_number: \"\",\r\n            voter_id_number: \"\",\r\n            ration_card_number: \"\",\r\n            bank_account:\"\",\r\n            bank_ifsc_code:\"\",\r\n            bank_account_holder:\"\",\r\n            user_id:auth.id\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setisShowLoader(true);\r\n            try {\r\n                values.enrollment_date = enrollmentDate;\r\n                values.date_of_birth = dob;\r\n                let response = [];\r\n                if(props.location.state){\r\n                     response = await memberDetails.MemberDetailModel.editMember(values,props.location.state);\r\n\r\n                }else{\r\n                     response = await memberDetails.MemberDetailModel.saveMemberDetails(values);\r\n                }\r\n                setisShowLoader(false);\r\n                if (response.statusCode == 200) {\r\n                    formik.resetForm();\r\n                    if(props.location.state)\r\n                        history.push(\"/member\")\r\n                    setShowToast({ isShow: true, type: \"bg-success\", message: response.body.message })\r\n                } else {\r\n                    setShowToast({ isShow: true, type: \"bg-danger\", message: response.body.message })\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n                setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    return (\r\n        <>\r\n            <Toast key={1} autohide delay={3000}  show={showToast.isShow} onClose={() => setShowToast({ isShow: false, type: \"\", message: \"\" })} className={\"loader \" + (showToast.type)} >\r\n                <Toast.Header>\r\n                    <strong className=\"me-auto\">{showToast.type == \"bg-danger\" ? \"Error\" : \"Success\"} Message</strong>\r\n                </Toast.Header>\r\n                <Toast.Body className=\"Dark\">\r\n                    {showToast.message}\r\n                </Toast.Body>\r\n            </Toast>\r\n\r\n            <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Member</h2>\r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Enrollment Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"enrollment_date\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridName\">\r\n                            <Form.Label >Member Name</Form.Label>\r\n                            <Form.Control type=\"text\"\r\n                                placeholder=\"member name\"\r\n                                name=\"member_name\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_name}\r\n\r\n                            />\r\n                            {formik.touched.member_name && formik.errors.member_name ? (\r\n                                <div class=\"text-danger\">{formik.errors.member_name}</div>\r\n                            ) : null}\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Date of Birth</Form.Label>\r\n                            <DatePicker\r\n                                class=\"form-control\"\r\n                                selected={dob}\r\n                                onChange={(date) => setDob(date)}\r\n                                name=\"date_of_birth\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>Gender</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"gender\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.gender}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Gender</option>\r\n\r\n                                <option key=\"male\" value=\"male\">Male</option>\r\n                                <option key=\"female\" value=\"female\">Female</option>\r\n\r\n                            </select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Age</Form.Label>\r\n                            <Form.Control\r\n                                name=\"age\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.age}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Marital Status</Form.Label>\r\n                            <Form.Control\r\n                                name=\"marital_status\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.marital_status}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Phone number</Form.Label>\r\n                            <Form.Control\r\n                                name=\"mobile_number\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.mobile_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                name=\"email_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.email_id}\r\n                                type=\"text\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} md={6} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n                            <Form.Label>Member Group</Form.Label>\r\n                            <select className=\"form-control\" name=\"member_group_id\" onChange={formik.handleChange}\r\n                                value={formik.values.member_group_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member Group</option>\r\n                                {groups.map((group,id)=>(\r\n                                    <option key={group.group_code} value={group.group_code}>{group.group_code}</option>\r\n                                ))}\r\n                            </select>\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            <h3 className=\"text-info\">KYC Information</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Aadhar no.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"aadhar_number\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.aadhar_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>PAN</Form.Label>\r\n                            <Form.Control\r\n                                name=\"pan_card_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pan_card_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Driving Licence No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"driving_license_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.driving_license_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>Voter Id No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"voter_id_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.voter_id_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                            <Form.Label>Ration Card No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"ration_card_number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.ration_card_number}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n \r\n                    <Row className=\"mb-3\">\r\n                        <Col>\r\n                            <h3 className=\"text-info\">Bank Details</h3>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGridAge\">\r\n                            <Form.Label>Bank Account No.</Form.Label>\r\n                            <Form.Control\r\n                                name=\"bank_account\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.bank_account}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>IFSC code</Form.Label>\r\n                            <Form.Control\r\n                                name=\"bank_ifsc_code\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.bank_ifsc_code}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} md={6} controlId=\"formGridAge\">\r\n                            <Form.Label>Account holder name</Form.Label>\r\n                            <Form.Control\r\n                                name=\"bank_account_holder\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.bank_account_holder}\r\n                            />\r\n                        </Form.Group>\r\n\r\n\r\n                    </Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddMember;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal,Pagination } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\nimport { useHistory } from 'react-router-dom';\r\nfunction Members(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    const [memberRecords,setMemberRecords]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n    \r\n    const data = useMemo(\r\n        () => \r\n        memberRecords.map((record,index)=>\r\n                { \r\n             return {\r\n                col1:record.member_id,\r\n                col2:record.member_name,\r\n                col3:record.member_group_id,\r\n                col4:record.mobile_number,\r\n                col5:record\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [memberRecords]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Member ID',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Name',\r\n            accessor: 'col2',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Member Group Code',\r\n            accessor: 'col3',\r\n            allowFilter:true\r\n            },\r\n          {\r\n            Header: 'Mobile Number',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col5',\r\n            allowFilter:false\r\n          }\r\n\r\n        ],\r\n        []\r\n      )    \r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        memberRecord.MemberDetailModel.getMemberDetailsData().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setMemberRecords(res.body.message);\r\n            }else{\r\n                setMemberRecords([]);\r\n            }\r\n        })\r\n    }\r\n    const deleteHandle=(id)=>{\r\n        setDeleteID(id);        \r\n        setShowDeleteModel(true);\r\n    }\r\n    const deleteMember=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await memberRecord.MemberDetailModel.deleteMember(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = memberRecords.filter((member,idx)=>member.member_id!=deleteID);\r\n                setMemberRecords(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n              \r\n    }\r\n  \r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMember()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Members</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addMember\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Member\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <div className=\"text-right\">\r\n              {paginate(pageCount)}\r\n            </div>   \r\n\r\n            <Table {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody{...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                if(cell.column.id !=\"col5\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    }else{\r\n                                        return (\r\n                                            <td>\r\n                                                {/* <Link to = \"/viewMemberDetail/:5\" params={{ member_id: cell.value.member_id }}> */}\r\n                                                <Button size={\"sm\"} variant=\"primary\"  onClick={()=>{history.push(\"/viewMemberDetail\",cell.value.member_id)}}>View</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"success\" onClick={()=>{history.push(\"/addMember\",cell.value.member_id)}} >Edit</Button>\r\n                                                {' '}\r\n                                                <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(cell.value.member_id)} >Delete</Button>\r\n                                            </td>\r\n                                        )\r\n                                    }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n\r\n            </tbody>\r\n        </Table>\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n        </Col>\r\n        </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Members;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Badge, Container, Row, Col, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport memberRecord from '../../../models/memberDetails';\r\nimport Loader from '../../layout/Loader';\r\nimport moment from 'moment';\r\n\r\nfunction Members(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [loanAccounts, setLoanAccounts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getMemberData();\r\n    }, [])\r\n\r\n    const getMemberData = async() => {\r\n        try{\r\n            setisShowLoader(true);\r\n            const response =await Promise.all(memberRecord.MemberDetailModel.getMemberPageData(props.location.state))\r\n            setisShowLoader(false);\r\n            setMemberRecords(response[0].body.message[0]);\r\n            setLoanAccounts(response[1].body.message);          \r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n    }\r\n\r\n        // setisShowLoader(true);\r\n        // memberRecord.MemberDetailModel.getMemberDetailsData(props.location.state).then(res => {\r\n        //     setisShowLoader(false);\r\n        //     if (res.statusCode == 200) {\r\n        //         setMemberRecords(res[0].body.message[0]);\r\n        //     } else {\r\n        //         setMemberRecords([]);\r\n        //     }\r\n        // })\r\n    }\r\n    const loanStatus=(loan)=>{\r\n        let actionStatus = \"\";\r\n        if (loan.is_approved == 1 && loan.is_disbursed == 1) {\r\n            actionStatus = \"Disbursed\";\r\n        } else if (loan.is_approved == 1 && loan.is_disbursed == 0) {\r\n            actionStatus = \"Approved\";\r\n        } else if (loan.is_disbursed == -1) {\r\n            actionStatus = \"Disburse Rejected\";\r\n        } else if (loan.is_approved == -1) {\r\n            actionStatus = \"Approval Rejected\";\r\n        } else {\r\n            actionStatus = \"Pending\";\r\n        }\r\n        return actionStatus;\r\n    }\r\n    return (\r\n        <>\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n            <Row>\r\n                    <Col>\r\n                    <Card border=\"success\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            className=\"m-2\"\r\n                        >\r\n                            <Card.Header className=\"bg-info text-center\"><b>Loan Accounts</b></Card.Header>\r\n                            {isShowLoader==true?<Card.Body><h5 className=\"text-center\">Loading...</h5></Card.Body>:\r\n                            <Card.Body>{ loanAccounts.length==0?<h5 className=\"text-center\">Not running any loan!</h5>:\r\n                                <Table className=\"shadow-lg bg-white rounded small\" striped bordered hover responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Loan Account</th> \r\n                                        <th>Application date</th> \r\n                                        <th>Scheme id</th>\r\n                                        <th>Village name</th>  \r\n                                        <th>EMI day</th>\r\n                                        <th>EMI week</th>  \r\n                                        <th>Member address</th>\r\n                                        <th>Loan amount</th>\r\n                                        <th>Interest rate</th>\r\n                                        <th>EMI payout</th>\r\n                                        <th>EMI type</th>\r\n                                        <th>Tenure</th>\r\n                                        <th>Status</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {loanAccounts.map(res=><tr>\r\n                                        <td><Link to={{\r\n                    pathname: '/loanApprovalDetails',\r\n                    state: res.id\r\n                }}><u>{res.loan_account_no}</u></Link></td>\r\n                                        <td>{res.application_date}</td>\r\n                                        <td>{res.scheme_id}</td>\r\n                                        <td>{res.village_name}</td>\r\n                                        <td>{res.day}</td>\r\n                                        <td>{res.week}</td>\r\n                                        <td>{res.address}</td>\r\n                                        <td>{res.loan_amount}</td>\r\n                                        <td>{res.interest_rate}</td>\r\n                                        <td>{res.EMI_payout}</td>\r\n                                        <td>{res.EMI_type}</td>\r\n                                        <td>{res.Tenure}</td>\r\n                                        <td><Badge className={loanStatus(res) == \"Approved\" || loanStatus(res) == \"Disbursed\" ? \"bg-success\" : \"bg-danger\"}>{loanStatus(res)}</Badge>\r\n                                            </td>\r\n                                    </tr>)}\r\n                                </tbody>\r\n                                </Table>\r\n                                }\r\n                            </Card.Body>\r\n                            }\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <Card border=\"success\" header\r\n                            key={0}\r\n                            text={'dark'}\r\n                            className=\"m-2\"\r\n                        >\r\n                            <Card.Header className=\"bg-success text-center\"><b>Member Details</b></Card.Header>\r\n                            <Card.Body>\r\n\r\n                                <Table className=\"shadow-lg bg-white rounded small\" striped bordered hover responsive>\r\n                                    <tbody>\r\n                                        <tr><th>Enrollment Date</th><td>{moment(memberRecords.enrollment_date).format(\"DD-MM-YYYY hh:ss A\")}</td> </tr>\r\n                                        <tr><th>Member Name</th>  <td>{memberRecords.member_name}</td></tr>\r\n                                        <tr><th>Member Id</th>  <td>{memberRecords.member_id}</td></tr>\r\n                                        <tr> <th>Gender</th>  <td>{memberRecords.gender}</td></tr>\r\n                                        <tr><th>DOB</th>   <td>{moment(memberRecords.date_of_birth).format(\"DD-MM-YYYY\")} </td></tr>\r\n                                        <tr><th>Age</th> <td>{memberRecords.age}</td></tr>\r\n                                        <tr><th>Marital Status</th>  <td>{memberRecords.marital_status}</td></tr>\r\n                                        <tr><th>Mobile Number</th> <td>{memberRecords.mobile_number}</td></tr>\r\n                                        <tr><th>Email Id</th> <td>{memberRecords.email_id}</td></tr>\r\n                                        <tr> <th>Member Group Id</th>  <td>{memberRecords.member_group_id}</td></tr>\r\n                                        <tr> <th>Aadhar Number</th> <td>{memberRecords.aadhar_number}</td></tr>\r\n                                        <tr> <th>Driving License Number</th>  <td>{memberRecords.driving_license_number}</td></tr>\r\n                                        <tr> <th>Voter Id Number </th>  <td>{memberRecords.voter_id_number}</td></tr>\r\n                                        <tr>  <th>Ration Card Number</th> <td>{memberRecords.ration_card_number}</td></tr>\r\n                                        <tr> <th>PAN Number</th> <td>{memberRecords.pan_card_number}</td></tr>\r\n                                        <tr> <th>Bank Account no.</th> <td>{memberRecords.bank_account}</td></tr>\r\n                                        <tr> <th>IFSC Code</th> <td>{memberRecords.bank_ifsc_code}</td></tr>\r\n                                        <tr> <th>Bank Account Holder</th> <td>{memberRecords.bank_account_holder}</td></tr>\r\n\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Members;","import moment from \"moment\"\r\nimport { requests, superagent, API_ROOT } from \"./BaseUrl\"\r\n//const url = '/memberGroups/';\r\n\r\nconst SchemeModel = {\r\n  getScheme() {\r\n    return superagent.get(`${API_ROOT}/scheme/entry`)\r\n  },\r\n  saveScheme(data) {\r\n    return superagent.post(`${API_ROOT}/scheme/entry`, data)\r\n  },\r\n  deleteScheme(id){\r\n    return superagent.del(`${API_ROOT}/scheme/entry/${id}`)\r\n  },  \r\n  getLoanAppInitialData(){\r\n      return [superagent.get(`${API_ROOT}/scheme/entry`),superagent.get(`${API_ROOT}/member/entry/all`),superagent.get(`${API_ROOT}/village/entry`)]\r\n  }\r\n\r\n}\r\nconst GroupLoanModel = {\r\n  applyForloan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/applyGroupLoan`, data)\r\n  },\r\n  getApprovalList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingApproval`);\r\n  },\r\n  getDisburseList(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/pendingDisburse`);\r\n  },\r\n  getLoanDetailbyId(id){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/${id}`);\r\n  },\r\n  approveRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/approveLoan`, data)\r\n  },\r\n  getAllLoanApplications(){\r\n    return superagent.get(`${API_ROOT}/groupLoan/entry/all`);\r\n  },\r\n  disburseRejectLoan(data){\r\n    return superagent.post(`${API_ROOT}/groupLoan/disburseLoan`, data)\r\n  },\r\n\r\n}\r\nconst EmiModel = {\r\n  calculateEMI(data){\r\n    return superagent.post(`${API_ROOT}/emis/calculateEMI`, data);\r\n  },\r\n  getDueEmis(today = moment().format(\"yyyy-MM-DD\")){\r\n    return superagent.get(`${API_ROOT}/emis/dueEMIs/${today}`);\r\n  },\r\n  paidEmi(id){\r\n    return superagent.put(`${API_ROOT}/emis/entry`,{\"id\":id});\r\n  },\r\n  getPaidEmis(loanAccountNo){\r\n    return superagent.get(`${API_ROOT}/emis/entry/${loanAccountNo}`);\r\n  }\r\n}\r\nconst villageModel = {\r\n  saveVillage(data){\r\n    return superagent.post(`${API_ROOT}/village/entry`, data); \r\n  },\r\n  getVillage(){\r\n    return superagent.get(`${API_ROOT}/village/entry`); \r\n  }\r\n}\r\nexport default { SchemeModel,GroupLoanModel,EmiModel,villageModel };","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\n\r\nfunction Scheme(props) {\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [schemes,setSchemes]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0)\r\n    useEffect(() => {\r\n        getSchemes();\r\n    },[])\r\n\r\n    const getSchemes = () =>{\r\n        setisShowLoader(true);\r\n        groupLoan.SchemeModel.getScheme().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setSchemes(res.body.message);\r\n            }else{\r\n                setSchemes([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.SchemeModel.deleteScheme(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = schemes.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setSchemes(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Scheme</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Schemes</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addScheme\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Scheme\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Scheme code</th>\r\n                    <th>Scheme name</th>\r\n                    <th>Max amount</th>\r\n                    <th>Interest rate (%)</th>\r\n                    <th>EMI type</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {schemes.map((scheme,id)=>(<tr>\r\n                    <td>{scheme.scheme_code}</td>\r\n                    <td>{scheme.scheme_name}</td>\r\n                    <td>{scheme.max_amount}</td>\r\n                    <td>{scheme.interest_rate }%</td>\r\n                    <td>{scheme.EMI_type }</td>\r\n                    <td>\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(scheme.id)} className=\"ml-2\">Delete</Button>\r\n\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\n\r\nexport default Scheme;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddScheme(props) {\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.scheme_code) {\r\n      errors.scheme_code = 'Scheme code is Required!';\r\n    }\r\n    if (!values.scheme_name) {\r\n      errors.scheme_name = 'Scheme name is Required!';\r\n    }\r\n    if (!values.max_amount) {\r\n      errors.max_amount = 'Max amount is Required!';\r\n    }\r\n    if (!values.interest_rate) {\r\n      errors.interest_rate = 'Interest rate is Required!';\r\n    }\r\n    if (!values.EMI_type) {\r\n      errors.EMI_type = 'EMI type is Required!';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      scheme_code: '',\r\n      scheme_name: '',\r\n      max_amount: '',\r\n      interest_rate: '',\r\n      EMI_type: '',\r\n      user_id:auth.id\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n        try {\r\n          let response = await groupLoan.SchemeModel.saveScheme(values);\r\n          setisShowLoader(false);\r\n          if (response.statusCode == 200) {\r\n            formik.resetForm();\r\n            setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          } else {\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n          }\r\n\r\n        } catch (error) {\r\n          setisShowLoader(false);\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n        }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Scheme</h2>\r\n      <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n        <Form onSubmit={formik.handleSubmit}>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Scheme Code</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_code\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_code}\r\n              />\r\n                {formik.touched.scheme_code && formik.errors.scheme_code ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_code}</div>\r\n                ) : null}              \r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\">\r\n              <Form.Label>Scheme Name</Form.Label>\r\n              <Form.Control\r\n                name=\"scheme_name\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.scheme_name}\r\n              />\r\n                {formik.touched.scheme_name && formik.errors.scheme_name ? (\r\n                  <div class=\"text-danger\">{formik.errors.scheme_name}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" >\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Max amount</Form.Label>\r\n              <Form.Control\r\n                name=\"max_amount\"\r\n                type=\"number\"\r\n                min=\"1\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.max_amount}\r\n              />\r\n                {formik.touched.max_amount && formik.errors.max_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.max_amount}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n              <Form.Label>Interest Rate (in %)</Form.Label>\r\n              <Form.Control\r\n                name=\"interest_rate\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.interest_rate}\r\n              />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Row className=\"mb-3\" md={6}>\r\n            <Form.Group as={Col} className=\"mb-3\" controlId=\"formGridAddress1\">\r\n              <Form.Label>EMI type</Form.Label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"EMI_type\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.EMI_type}\r\n              >\r\n                <option key=\"\" value=\"\">Select EMI type</option>\r\n                <option key=\"flat\" value=\"flat\">Flat rate</option>\r\n                {/* <option key=\"reduceing\" value=\"reduceing\">Reduceing rate</option> */}\r\n              </select>\r\n              {formik.touched.EMI_type && formik.errors.EMI_type ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_type}</div>\r\n                ) : null}              \r\n\r\n            </Form.Group>\r\n\r\n          </Row>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddScheme;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst DashboardModel = {\r\n  getReceivedAmount(){\r\n    return superagent.get(`${API_ROOT}/dashboard/totalReceivedAmount`)\r\n  },\r\n  getPaidAmount(){\r\n    return superagent.get(`${API_ROOT}/dashboard/totalPaidAmount`)\r\n  },\r\n  getEmiRecord(today){\r\n    return superagent.get(`${API_ROOT}/emis/allEmis/${today}`);\r\n  }\r\n  }\r\n    export default {DashboardModel};","import React, { useState, useEffect } from 'react'\r\nimport dashboard from '../../models/dashboard'\r\nimport { Card, Col, Row, Spinner, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport Chart from \"react-google-charts\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\nexport default function Dashboard() {\r\n    const auth = useSelector(state => state.auth);\r\n    const history = useHistory();\r\n    const [isShowReceivedLoader, setisShowReceivedLoader] = useState(false)\r\n    const [receivedAmount, setReceivedAmount] = useState([]);\r\n    const [isShowPaidLoader, setisShowPaidLoader] = useState(false)\r\n    const [paidAmount, setPaidAmount] = useState([]);\r\n    const [emiCounts, setEmiCounts] = useState({notPaid:0,paid:0});\r\n    useEffect(() => {\r\n        getReceivedAmount();\r\n        getPaidAmount();\r\n        todayEmis();\r\n    }, [])\r\n\r\n    const getReceivedAmount = async () => {\r\n        try {\r\n            setisShowReceivedLoader(true);\r\n            let response = await dashboard.DashboardModel.getReceivedAmount();\r\n            setisShowReceivedLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setReceivedAmount(response.body.message);\r\n            } else {\r\n                setReceivedAmount([]);\r\n            }\r\n        } catch (error) {\r\n            setisShowReceivedLoader(false);\r\n        }\r\n\r\n    }\r\n    const getPaidAmount = async () => {\r\n        try {\r\n            setisShowPaidLoader(true);\r\n            let response = await dashboard.DashboardModel.getPaidAmount();\r\n            setisShowPaidLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setPaidAmount(response.body.message);\r\n            } else {\r\n                setPaidAmount([]);\r\n            }\r\n        } catch (error) {\r\n            setisShowPaidLoader(false);\r\n        }\r\n    }\r\n    const todayEmis = async()=>{\r\n        let response = await dashboard.DashboardModel.getEmiRecord(moment().format(\"yyyy-MM-DD\"));\r\n        if(response?.body){\r\n            setEmiCounts({notPaid:response.body.notPaidCount,paid:response.body.paidCount})\r\n        }\r\n    }\r\n    const gotoLedger = (ledgerType) => {\r\n        history.push(\"/ladger\", ledgerType);\r\n    }\r\n\r\n    const formatAmount = (amount) => {\r\n        return amount ? amount.toString().replace(/.(?=(..)*...$)/g, '$&,') : \"\";\r\n    }\r\n    return (\r\n        <>\r\n          {(auth.role==\"checker\"||auth.role==\"admin\")?<Row xs={1} md={3} className=\"g-2\">\r\n                <Col>\r\n                    <Card\r\n                        bg={\"primary\"}\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                    >\r\n                        {isShowReceivedLoader ? <Card.Body className=\"text-center\"><Spinner animation=\"border\" variant=\"dark\" /></Card.Body> :\r\n                            <Card.Body>\r\n                                <Card.Title><h2 class=\"text-center\">{formatAmount(receivedAmount?.total)}</h2></Card.Title>\r\n                                <Card.Text class=\"text-center\">\r\n\r\n                                    Received Amount(Rs)\r\n                                </Card.Text>\r\n                            </Card.Body>}\r\n                        <Card.Footer className=\"text-white text-center\"><span style={{ \"cursor\": \"pointer\" }} className=\"\" onClick={() => gotoLedger('totalReceived')}>More Info\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-right-circle\" viewBox=\"0 0 16 16\">\r\n                                <path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\" />\r\n                            </svg></span>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <Card\r\n                        bg={\"danger\"}\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                    >\r\n                        {isShowPaidLoader ? <Card.Body className=\"text-center\"><Spinner animation=\"border\" variant=\"dark\" /></Card.Body> :\r\n                            <Card.Body>\r\n                                <Card.Title><h2 class=\"text-center\">{formatAmount(paidAmount?.total)}</h2></Card.Title>\r\n                                <Card.Text class=\"text-center\">\r\n\r\n                                    Paid Amount(Rs)\r\n                                </Card.Text>\r\n                            </Card.Body>}\r\n                        <Card.Footer className=\"text-white text-center\"><span style={{ \"cursor\": \"pointer\" }} className=\"\" onClick={() => gotoLedger('totalPaid')}>More Info\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-right-circle\" viewBox=\"0 0 16 16\">\r\n                                <path fill-rule=\"evenodd\" d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\" />\r\n                            </svg></span>\r\n                        </Card.Footer>\r\n\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card\r\n                        bg={\"success\"}\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                    >\r\n                        {isShowReceivedLoader && isShowPaidLoader ? <Card.Body className=\"text-center\"><Spinner animation=\"border\" variant=\"dark\" /></Card.Body> :\r\n                            <Card.Body>\r\n                                <Card.Title><h2 class=\"text-center\">{formatAmount(receivedAmount?.total - paidAmount?.total)}</h2></Card.Title>\r\n                                <Card.Text class=\"text-center\">\r\n\r\n                                    Cash in hand(Rs)\r\n                                </Card.Text>\r\n                            </Card.Body>}\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>:\"\"}\r\n            {(auth.role==\"checker\"||auth.role==\"admin\")?<Row xs={1} md={3} className=\"g-2\">\r\n                <Col>\r\n                </Col>\r\n                <Col>\r\n                    <Card\r\n\r\n                        key={0}\r\n                        text={'dark'}\r\n\r\n                        className=\"m-2\">\r\n                        <Card.Header className=\"text-center bg-warning\">\r\n                            Main Ladger\r\n                        </Card.Header>\r\n                        <Card.Body className=\"text-center\">\r\n                            <Button variant=\"primary\" onClick={() => { history.push(\"/completeLadger\") }}>Go to Main Ladger</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>:\"\"}\r\n            <Row xs={1} md={3} className=\"g-2\">\r\n                <Col></Col>\r\n                <Col>\r\n                <Card\r\n\r\n                    key={0}\r\n                    text={'dark'}\r\n\r\n                    className=\"m-2\">\r\n                    <Card.Header className=\"text-center bg-dark text-white\">\r\n                        Today's Due EMIs\r\n                    </Card.Header>\r\n                    <Card.Body className=\"text-center\">\r\n                    {emiCounts.paid==0 && emiCounts.notPaid==0?\"No Due Emi today\":\r\n                    <Chart\r\n                        \r\n                        \r\n                        chartType=\"PieChart\"\r\n                        loader={<div>Loading Chart</div>}\r\n                        data={[\r\n                            ['Task', 'Hours per Day'],\r\n                            [`Paid (${emiCounts.paid})`, emiCounts.paid],\r\n                            [`Not Paid (${emiCounts.notPaid})`, emiCounts.notPaid]\r\n                        ]}\r\n                        options={{\r\n                            chartArea: { width: '100%', height: '100%' },\r\n                            pieSliceText:\"label\"\r\n                            // lineWidth: 25\r\n                          }}\r\n                        rootProps={{ 'data-testid': '0' }}\r\n                    />}\r\n\r\n                    </Card.Body>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction LoanApplication(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [memberRecords, setMemberRecords] = useState([]);\r\n    const [schemeRecords, setSchemeRecords] = useState([]);\r\n    const [selectedScheme, setSelectedScheme] = useState({});\r\n    const [villageRecords, setVillageRecords] = useState([]);\r\n    const tanure = {\"weekly\":\"Weeks\",\"monthly\":\"Months\",\"daily\":\"Days\",\"fortnight\":\"Fortnight\",\"village\":\"Village\"};\r\n    let history = useHistory();\r\n    //const selectedSm = {\"interest_rate\":0,\"EMI_type\":\"\",\"max_amount\":0};\r\n    useEffect(()=>{\r\n        getSchemesAndMembers();\r\n    },[])\r\n    const getSchemesAndMembers=async()=>{\r\n        try{\r\n            setisShowLoader(true);\r\n            const response =await Promise.all(groupLoan.SchemeModel.getLoanAppInitialData())\r\n            setisShowLoader(false);\r\n            setSchemeRecords(response[0].body.message);\r\n            setMemberRecords(response[1].body.message);\r\n            setVillageRecords(response[2].body.message);\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n    }\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.scheme_id) {\r\n            errors.scheme_id = 'Scheme code is Required!';\r\n        }\r\n        if (!values.member_id) {\r\n            errors.member_id = 'Member name is Required!';\r\n        }\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required!';\r\n        }\r\n        if (selectedScheme?.interest_rate>0 && values.interest_rate>selectedScheme?.interest_rate) {\r\n            errors.interest_rate = `As per the Selected Scheme. Interest rate should not greater than ${selectedScheme.interest_rate}.`;\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required!';\r\n        }\r\n        if (selectedScheme?.max_amount>0 && values.loan_amount>selectedScheme.max_amount) {\r\n            errors.loan_amount = `As per the Selected Scheme. Loan amount should not greater than ${selectedScheme.max_amount}.`;\r\n        }\r\n        // if (!values.EMI_amount) {\r\n        //     errors.EMI_amount = 'EMI amount is Required!';\r\n        // }\r\n        if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required!';\r\n        }\r\n        if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required!';\r\n        }\r\n        if (values.EMI_payout==\"village\" && !values.village_id) {\r\n            errors.village_id = 'Village name is Required!';\r\n        }\r\n        if (values.week==\"village\" && !values.week) {\r\n            errors.week = 'Week is Required!';\r\n        }\r\n        if (values.day==\"village\" && !values.day) {\r\n            errors.day = 'Day is Required!';\r\n        }\r\n        return errors;\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            scheme_id: '',\r\n            application_date: '',\r\n            member_id: '',\r\n            address:'',\r\n            interest_rate: \"\",\r\n            loan_amount:'',\r\n            // EMI_amount: '',\r\n            EMI_payout:\"\",\r\n            EMI_type:\"\",\r\n            tenure:\"\",\r\n            user_id:auth.id,\r\n            village_id:\"\",\r\n            week:\"\",\r\n            day:\"\"\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            console.log(values);\r\n           setisShowLoader(true);\r\n            try {\r\n                //delete values.EMI_type;\r\n                values.application_date = enrollmentDate;\r\n                delete values.week;\r\n                delete values.day;\r\n              let response = await groupLoan.GroupLoanModel.applyForloan(values);\r\n              setisShowLoader(false);\r\n              if (response.statusCode == 200) {\r\n                formik.resetForm();\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n              } else {\r\n                setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n              }\r\n\r\n            } catch (error) {\r\n              setisShowLoader(false);\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            }\r\n        }\r\n    });\r\n    const handleScheme=(e)=>{\r\n        console.log(e.target.value);\r\n        let selectedScheme = schemeRecords.filter(scheme=>scheme.scheme_code==e.target.value);\r\n        setSelectedScheme(selectedScheme[0]);\r\n         formik.values.EMI_type = selectedScheme[0].EMI_type;\r\n         formik.values.interest_rate = selectedScheme[0].interest_rate;\r\n        formik.handleChange(e);\r\n    }\r\n    const handleVillage=(e)=>{\r\n        let selectedvill = villageRecords.filter(vill=>vill.id==e.target.value);\r\n        \r\n         formik.values.week = selectedvill[0].week;\r\n         formik.values.day = selectedvill[0].day;\r\n        formik.handleChange(e);\r\n\r\n    }\r\n    return (\r\n        \r\n        <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n         <Loader show={isShowLoader} />\r\n            <h2 className=\"text-info text-center\">Add Loan Application</h2>\r\n            \r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"application_date\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Member name</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"member_id\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.member_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Member</option>\r\n                                {memberRecords.map((member,id)=>(\r\n                                    <option key={member.member_id} value={member.member_id}>{`name= ${member.member_name} - member_id= ${member.member_id} `}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.member_id && formik.errors.member_id ? (\r\n                  <div class=\"text-danger\">{formik.errors.member_id}</div>\r\n                ) : null}              \r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                    <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Member Address</Form.Label>\r\n                            <Form.Control\r\n                                name=\"address\"\r\n                                as=\"textarea\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.address}\r\n\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Scheme</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"scheme_id\"\r\n                                onChange={handleScheme}\r\n                                value={formik.values.scheme_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Scheme</option>\r\n                                {schemeRecords.map((schems,id)=>(\r\n                                    <option key={schems.scheme_code} value={schems.scheme_code}>{schems.scheme_code}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.scheme_id && formik.errors.scheme_id ? (\r\n                                <div class=\"text-danger\">{formik.errors.scheme_id}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Interest Rate (in %)</Form.Label>\r\n                            <Form.Control\r\n                                name=\"interest_rate\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.interest_rate}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per scheme.\r\n                            </Form.Text>                            \r\n                            {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Loan Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"loan_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.loan_amount}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            Default will be Max amount of selected scheme.\r\n                            </Form.Text>                            \r\n\r\n                            {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Payout</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"EMI_payout\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_payout}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Payout</option>\r\n                                {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                                <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                                <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n                                <option key=\"village\" value=\"village\">By village</option>\r\n                            </select>\r\n                            {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                                <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Tenure(in {formik.values.EMI_payout!=\"\"?tanure[formik.values.EMI_payout]:\"Months\"})</Form.Label>\r\n                            <Form.Control\r\n                                name=\"tenure\"\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.tenure}\r\n                            />\r\n                            {formik.touched.tenure && formik.errors.tenure ? (\r\n                                <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                    </Row>\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>EMI Type</Form.Label>\r\n                            <Form.Control\r\n                                name=\"EMI_type\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.EMI_type}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                            It will change as per selected scheme.\r\n                            </Form.Text>                            \r\n                        </Form.Group>\r\n                        {formik.values.EMI_payout == \"village\"?\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Village</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"village_id\"\r\n                                onChange={handleVillage}\r\n                                value={formik.values.village_id}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Village</option>\r\n                                {villageRecords.map((vill,id)=>(\r\n                                    <option key={vill.id} value={vill.id}>{vill.village_name}</option>\r\n                                ))}\r\n\r\n                            </select>\r\n                            {formik.touched.village_id && formik.errors.village_id ? (\r\n                                <div class=\"text-danger\">{formik.errors.village_id}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                        :\"\"}\r\n                    </Row>\r\n                    {formik.values.EMI_payout == \"village\"?\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Week</Form.Label>\r\n                            <Form.Control\r\n                                name=\"week\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.week}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} md={6} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Day</Form.Label>\r\n                            <Form.Control\r\n                                name=\"day\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.day}\r\n                                disabled=\"disabled\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Row>:\"\"}\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={()=>{history.push(\"/\")}} type=\"button\" className=\"ml-2\">\r\n                        Cancel\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApplication;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction LoanApproval(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getApprovalList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectApproval=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications for Approval</h2>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Village</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.village_name }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectApproval(loan.id)}>Approve</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApproval;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nfunction DisburseLoan(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [loanlist,setLoanlist]=useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    },[])\r\n\r\n    const getLoanList = async() =>{\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getDisburseList();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setLoanlist(response.body.message);\r\n            } \r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n          }\r\n      }\r\n      const redirectDisburse=(loan_id)=>{\r\n        history.push(\"/loanApprovalDetails\",loan_id);\r\n      }\r\n\r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Applications For Disburse</h2>\r\n            <Row >\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Application Date</th>\r\n                    <th>Member name</th>\r\n                    <th>Scheme ID</th>\r\n                    <th>Loan Amount</th>\r\n                    <th>Village</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {loanlist.map((loan,id)=>(<tr>\r\n                    <td>{moment(loan.application_date).format(\"DD-MM-YYYY hh:ss A\") }</td>\r\n                    <td>{loan.member_name}</td>\r\n                    <td>{loan.scheme_id}</td>\r\n                    <td>{loan.loan_amount }</td>\r\n                    <td>{loan.village_name }</td>\r\n                    <td><Button variant=\"success\" size={\"sm\"} onClick={()=>redirectDisburse(loan.id)}>Disburse</Button></td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>            \r\n        </>\r\n    );}\r\n\r\nexport default DisburseLoan;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nfunction EmiCard(props) {\r\n\r\n    return (\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b>\r\n            <svg onClick={props.handlePrintEMI} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n            <thead>\r\n              <tr className=\"bg-success\">\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  {props.showDisburseButton?<th>EMI Paid</th>:\"\"}\r\n                  \r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {props.emiData.map((value,id)=>(<tr className={props.paidEmiRecord[value.date]?\"bg-warning\":\"\"}>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI.toFixed(2)}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    {props.showDisburseButton?\r\n                    <td>{props.paidEmiRecord[value.date]?\r\n                    \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check-circle\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                        <path d=\"M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z\"/>\r\n                        </svg>:\"\"}</td>:\"\"}\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n);\r\n}\r\n\r\nexport default EmiCard;","import React from 'react';\r\nimport { Table, Card} from 'react-bootstrap';\r\n\r\nclass EmiCardPrint extends React.PureComponent {\r\n    render() {\r\n    return (\r\n        <div>\r\n        <h3 className=\"text-center mb-5 mt-3\">AA2 MutualHelp Micro Finance</h3>\r\n        <Card border=\"primary\" header\r\n        key={0}\r\n        text={'dark'}\r\n        className=\"m-2\"\r\n    >\r\n        <Card.Header className=\"bg-primary text-center\"><b>EMI Details</b>\r\n\r\n        </Card.Header>\r\n        <Card.Body>\r\n        {/* <Loader show={isShowEMILoader} relative={true}/> */}\r\n        <Table size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n              <tr>\r\n                  <th>EMI date</th>\r\n                  <th>EMI Amount</th>\r\n                  <th>Principal</th>\r\n                  <th>Interest</th>\r\n                  <th>Outstanding</th>\r\n                  <th>Signature</th>\r\n              </tr>\r\n          </thead>\r\n                <tbody>\r\n                {this.props.emiData.map((value,id)=>(<tr>\r\n                    <td>{value.date}</td>\r\n                    <td>{value.EMI}</td>\r\n                    <td>{value.principal}</td>\r\n                    <td>{value.int_amount}</td>\r\n                    <td>{value.outstanding }</td>\r\n                    <td></td>\r\n                </tr>))}\r\n                </tbody>\r\n        </Table>\r\n        </Card.Body>\r\n    </Card>\r\n    </div>\r\n);\r\n\r\n    }\r\n}\r\n\r\nexport default EmiCardPrint;","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup,Modal,Toast } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport EmiCard from './EmiCard';\r\nimport EmiCardPrint from './EmiCardPrint';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction LoanApprovalDetails(props) {\r\n    let history = useHistory();\r\n    const memberDetailsRef = useRef();\r\n    const handlePrintMemberDetail = useReactToPrint({\r\n        content: () => memberDetailsRef.current,\r\n        documentTitle:\"AA2-Member\",\r\n      });\r\n\r\n      const applicationRef = useRef();\r\n      const handlePrintApplication = useReactToPrint({\r\n          content: () => applicationRef.current,\r\n          documentTitle:\"AA2-application\",\r\n        });\r\n\r\n        const emiRef = useRef();\r\n        const handlePrintEMI = useReactToPrint({\r\n            content: () => emiRef.current,\r\n            documentTitle:\"AA2-EMI-details\",\r\n          });\r\n      \r\n    const auth = useSelector(state => state.auth);\r\n    const [paidEmiRecord, setPaidEmiRecord] = useState([])\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [isShowEMILoader, setisShowEMILoader] = useState(false)\r\n    const [emiData, setEmiData] = useState([])\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    const [showApprovalButton,setShowApprovalButton]= useState(false);\r\n    const [showDisburseButton,setShowDisburseButton]= useState(false);\r\n    \r\n    //const [disburseActionButton,setDisburseActionButton]\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getLoanDetails();\r\n    }, [])\r\n\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            setisShowEMILoader(true);\r\n\r\n            let response = await groupLoan.GroupLoanModel.getLoanDetailbyId(props.location.state);\r\n            let calculateEmi ={\r\n                \"loanStartDate\":response.body.message[0].application_date,\r\n                \"interest_rate\":response.body.message[0].interest_rate,\r\n                \"tenure\":response.body.message[0].Tenure,\r\n                \"EMI_payout\":response.body.message[0].EMI_payout,\r\n                \"loan_amount\":response.body.message[0].loan_amount,\r\n                \"EMI_type\":response.body.message[0].EMI_type,\r\n                \"week\":response.body.message[0].week,\r\n                \"day\":response.body.message[0].day,\r\n            }\r\n            setisShowEMILoader(true);\r\n            let EmiData = await groupLoan.EmiModel.calculateEMI(calculateEmi);\r\n            let paidData = [];\r\n            let result = [];\r\n            if(response.body.message[0].loan_account_no){\r\n                paidData = await groupLoan.EmiModel.getPaidEmis(response.body.message[0].loan_account_no);\r\n                for(let i=0;i<paidData.body.message.length;i++){\r\n                    let emiDate = moment(paidData.body.message[i].EMI_date).format(\"DD-MM-yyyy\");\r\n                    result[emiDate]=true;\r\n                }   \r\n                setPaidEmiRecord(result);\r\n            }\r\n            setEmiData(EmiData.body.message);\r\n            setisShowEMILoader(false);\r\n            console.log(response);\r\n\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(response.body.message[0].is_approved!=0?false:true);\r\n                setShowDisburseButton(response.body.message[0].is_approved ==1 && response.body.message[0].is_disbursed==0?true:false);\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionOnLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.approveRejectLoan(data);\r\n            console.log(response);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowApprovalButton(false);\r\n                //setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n    }\r\n    const actionDisburseLoan = async(actionType)=>{\r\n        try {\r\n            setisShowLoader(true);\r\n            const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n            let response = await groupLoan.GroupLoanModel.disburseRejectLoan(data);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                setShowDisburseButton(false);\r\n                setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            }\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    const goback = ()=>{\r\n        history.goBack();\r\n    }\r\n    return (\r\n        <>\r\n        <Button className=\"mt-2 ml-2\" onClick={goback} size={\"sm\"}>Back</Button>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n            <Loader show={isShowLoader} />\r\n            {showApprovalButton && (auth.role==\"checker\"||auth.role==\"admin\")?<Row >\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionOnLoan(1)}>\r\n                        Approve\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionOnLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            {showDisburseButton&& (auth.role==\"checker\"||auth.role==\"admin\")?<Row >\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionDisburseLoan(1)}>\r\n                        Disburse\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionDisburseLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"}\r\n\r\n            <Row xs={1} md={2} className=\"g-1\">\r\n                <Col>\r\n                    <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                        ref={memberDetailsRef}\r\n                    >\r\n                        <Card.Header className=\"bg-success text-center\"><b>Member Details</b><svg onClick={handlePrintMemberDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body>\r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Member Name</th><td>{loanDetails.member_name}</td> </tr>\r\n                                    <tr><th>Member Group ID</th>  <td>{loanDetails.member_group_id}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>DOB</th>   <td>{moment(loanDetails.date_of_birth).format(\"DD-MM-YYYY\") }</td></tr>\r\n                                    <tr><th>Phone</th> <td>{loanDetails.mobile_number}</td></tr>\r\n                                    <tr><th>Gender</th>  <td>{loanDetails.gender}</td></tr>\r\n                                    <tr><th>Aadhar No.</th> <td>{loanDetails.aadhar_number}</td></tr>\r\n                                    <tr><th>PAN</th> <td>{loanDetails.pan_card_number}</td></tr>\r\n                                    <tr><th>Driving License</th> <td>{loanDetails.driving_license_number}</td></tr>\r\n                                    <tr><th>Ration Card No.</th> <td>{loanDetails.ration_card_number}</td></tr>\r\n                                    <tr><th>Voter ID No.</th> <td>{loanDetails.voter_id_number}</td></tr>\r\n                                    <tr><th>Bank Account No.</th> <td>{loanDetails.bank_account}</td></tr>\r\n                                    <tr><th>Bank IFSC code</th> <td>{loanDetails.bank_ifsc_code}</td></tr>\r\n                                    <tr><th>Bank Account Holder</th> <td>{loanDetails.bank_account_holder}</td></tr>\r\n\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card border=\"info\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={applicationRef}\r\n                    >\r\n                        <Card.Header className=\"bg-info text-center\"><b>Application Details</b><svg onClick={handlePrintApplication} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body>\r\n                            \r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Account No</th>  <td>{loanDetails.loan_account_no}</td></tr>\r\n                                    <tr><th>Application Date</th><td>{moment(loanDetails.application_date).format(\"DD-MM-YYYY HH:SS\") }</td> </tr>\r\n                                    <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr>\r\n                                    <tr><th>Village Name</th><td>{loanDetails.village_name}</td></tr>\r\n                                    <tr><th>EMI Week</th><td>{loanDetails.week}</td></tr>\r\n                                    <tr><th>EMI Day</th><td>{loanDetails.day}</td></tr>\r\n                                    <tr> <th>Member Address</th>  <td>{loanDetails.address}</td></tr>\r\n                                    <tr><th>Loan Amount</th>   <td>{loanDetails.loan_amount}</td></tr>\r\n                                    <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                    <tr><th>EMI payout</th>  <td>{loanDetails.EMI_payout}</td></tr>\r\n                                    <tr><th>EMI type</th>  <td>{loanDetails.EMI_type}</td></tr>\r\n                                    {/* <tr><th>EMI amount</th> <td>{loanDetails.EMI_amount}</td></tr> */}\r\n                                    <tr><th>Tenure</th> <td>{loanDetails.Tenure}</td></tr>\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col >\r\n                    <Loader show={isShowEMILoader} relative={true}/>\r\n                    <EmiCard showDisburseButton={loanDetails.is_approved ==1 && loanDetails.is_disbursed==1}  emiData={emiData} paidEmiRecord={paidEmiRecord} handlePrintEMI={handlePrintEMI}/>\r\n                    <div style={{display:\"none\"}}><EmiCardPrint ref={emiRef} emiData={emiData}/></div> \r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanApprovalDetails;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Badge, Container, Row, Col, Button, Pagination } from 'react-bootstrap';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table'\r\n\r\nfunction AllApplications(props) {\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [loanlist, setLoanlist] = useState([]);\r\n    useEffect(() => {\r\n        getLoanList();\r\n    }, [])\r\n    const data = useMemo(\r\n        () =>\r\n\r\n            loanlist.map((record, index) => {\r\n                return {\r\n                    col1: record.loan_account_no ? record.loan_account_no : \"N/A\",\r\n                    col2: moment(record.application_date).format('DD-MM-yyy hh:ss A'),\r\n                    col3: record.member_name,\r\n                    col4: record.scheme_id,\r\n                    col5: record.loan_amount,\r\n                    col6: record.village_name,\r\n                    col7: record.actionStatus,\r\n                    col8: record\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [loanlist]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Application date',\r\n                accessor: 'col2', // accessor is the \"key\" in the data\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Member name',\r\n                accessor: 'col3',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Scheme ID',\r\n                accessor: 'col4',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Loan amount',\r\n                accessor: 'col5',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Village',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Status',\r\n                accessor: 'col7',\r\n                allowFilter: false,\r\n                Cell:emi=><Badge className={emi.value == \"Approved\" || emi.value == \"Disbursed\" ? \"bg-success\" : \"bg-danger\"}>{emi.value}</Badge>\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col8',\r\n                allowFilter: false,\r\n                Cell: emi => {\r\n                    return (<Button size={\"sm\"} variant=\"info\" onClick={() => { history.push(\"/loanApprovalDetails\", emi.value.id) }} type=\"button\" className=\"ml-2\">\r\n                        View\r\n                    </Button>\r\n                    )\r\n                }\r\n\r\n            }\r\n\r\n        ],\r\n        []\r\n    )\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination>\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n\r\n    const getLoanList = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.GroupLoanModel.getAllLoanApplications();\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let formatedData = response.body.message.map((loan, id) => {\r\n                    if (loan.is_approved == 1 && loan.is_disbursed == 1) {\r\n                        loan[\"actionStatus\"] = \"Disbursed\";\r\n                    } else if (loan.is_approved == 1 && loan.is_disbursed == 0) {\r\n                        loan[\"actionStatus\"] = \"Approved\";\r\n                    } else if (loan.is_disbursed == -1) {\r\n                        loan[\"actionStatus\"] = \"Disburse Rejected\";\r\n                    } else if (loan.is_approved == -1) {\r\n                        loan[\"actionStatus\"] = \"Approval Rejected\";\r\n                    } else {\r\n                        loan[\"actionStatus\"] = \"Pending\";\r\n                    }\r\n\r\n                    return loan;\r\n                });\r\n                setLoanlist(formatedData);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n                <h2 className=\"text-info text-center\">All Loan Applications</h2>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                        <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                console.log(cell);\r\n                                                    return (\r\n                                                        <td {...cell.getCellProps()}>\r\n                                                            {cell.render('Cell')}\r\n                                                        </td>\r\n                                                    )\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AllApplications;","import React,{useState,useRef,useEffect } from 'react';\r\nimport { Table,Button, Container, Row, Col, Card, Form } from 'react-bootstrap';\r\nimport Loader from '../layout/Loader';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nfunction EmiCalculator(props) {\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [calculatedData,setCalculatedData] = useState([]);\r\n    //const [isclickPrint,setisclickPrint] = useState(false);\r\n    const componentRef = useRef();\r\n    // useEffect(()=>{\r\n    //   handlePrint()\r\n    // },[isclickPrint==true])\r\n    const handlePrint = useReactToPrint({\r\n      content: () => componentRef.current,\r\n      documentTitle:\"AA2-EMI-details\",\r\n     // onAfterPrint:()=>{setisclickPrint(false)}\r\n\r\n    });\r\n    // const setPrintCompany = ()=>{\r\n    //   setisclickPrint(true,()=>{console.log(\"print\")})\r\n    // }    \r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.interest_rate) {\r\n          errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        if (!values.loan_amount) {\r\n            errors.loan_amount = 'Loan amount is Required';\r\n          }\r\n          if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required';\r\n          }\r\n          if (!values.EMI_payout) {\r\n            errors.EMI_payout = 'EMI payout is Required';\r\n          }\r\n          if (values.EMI_payout==\"village\" && !values.week) {\r\n            errors.week = 'Week is Required';\r\n          }\r\n          if (values.EMI_payout==\"village\" && !values.day) {\r\n            errors.day = 'Day is Required';\r\n          }\r\n          return errors;\r\n      };\r\n      const formik = useFormik({\r\n        initialValues: {\r\n        loanStartDate: '',\r\n        interest_rate: '',\r\n        tenure: '',\r\n        EMI_payout:'',\r\n        loan_amount:'',\r\n        EMI_type:\"flat\",\r\n        week:'',\r\n        day:''\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n          setisShowLoader(true);\r\n          try {\r\n             values.loanStartDate = enrollmentDate;\r\n             console.log(values);\r\n            let response = await groupLoan.EmiModel.calculateEMI(values);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              //formik.resetForm();\r\n              setCalculatedData(response.body.message);\r\n            } else {\r\n              //setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n    \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            //setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n        },\r\n      });\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n            <Row >\r\n            <Col>\r\n            <Container className=\"bg-white mt-2 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n            <Form.Group as={Col} className=\"form-group required pl-0 pr-0\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Application Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"loanStartDate\"\r\n                            />\r\n                {formik.touched.loanStartDate && formik.errors.loanStartDate ? (\r\n                  <div class=\"text-danger\">{formik.errors.loanStartDate}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Loan amount</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"loan_amount\"\r\n                  placeholder=\"Enter loan amount\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.loan_amount}\r\n                />\r\n                {formik.touched.loan_amount && formik.errors.loan_amount ? (\r\n                  <div class=\"text-danger\">{formik.errors.loan_amount}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Interest rate</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"interest_rate\"\r\n                  placeholder=\"Enter interest rate\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.interest_rate}\r\n\r\n                />\r\n                {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                  <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Tenure</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"tenure\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.tenure}\r\n\r\n                />\r\n                {formik.touched.tenure && formik.errors.tenure ? (\r\n                  <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>EMI payout</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"EMI_payout\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.EMI_payout}\r\n                >\r\n                    <option key=\"\" value=\"\">Select payout</option>\r\n\r\n                    <option key=\"weekly\" value=\"weekly\">Weekly</option>\r\n                    <option key=\"monthly\" value=\"fortnight\">Fortnight</option>\r\n                    <option key=\"village\" value=\"village\">By village</option>\r\n\r\n                </select>\r\n                {formik.touched.EMI_payout && formik.errors.EMI_payout ? (\r\n                  <div class=\"text-danger\">{formik.errors.EMI_payout}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n            {formik.values.EMI_payout == \"village\"?\r\n            <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>Week</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"week\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.week}>\r\n                    <option key=\"\" value=\"\">Select Week</option>\r\n                    <option key=\"1\" value=\"1\">Week 1</option>\r\n                    <option key=\"2\" value=\"2\">Week 2</option>\r\n                </select>\r\n                {formik.touched.week && formik.errors.week ? (\r\n                  <div class=\"text-danger\">{formik.errors.week}</div>\r\n                ) : null}\r\n            </Form.Group>:\"\"}\r\n            {formik.values.EMI_payout == \"village\"?\r\n            <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>Day</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"day\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.day}>\r\n                    <option key=\"\" value=\"\">Select day</option>\r\n                    <option key=\"monday\" value=\"monday\">Monday</option>\r\n                    <option key=\"tuesday\" value=\"tuesday\">Tuesday</option>\r\n                    <option key=\"wednesday\" value=\"wednesday\">Wednesday</option>\r\n                    <option key=\"thrusday\" value=\"thrusday\">Thrusday</option>\r\n                    <option key=\"friday\" value=\"friday\">Friday</option>\r\n                </select>\r\n                {formik.touched.day && formik.errors.day ? (\r\n                  <div class=\"text-danger\">{formik.errors.day}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n:\"\"}\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Calculate\r\n              </Button>\r\n\r\n            </Form>\r\n            </Container>\r\n            </Col>\r\n            <Col md={8}>\r\n            <Card border=\"primary\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={componentRef}\r\n                    >\r\n                      {/* {isclickPrint?<h2 className=\"text-center mb-3\">AA2 MicroFinance Foundation</h2>:\"\"} */}\r\n                        <Card.Header className=\"bg-primary text-center\"><b>AA2 Micro Finance EMI Details</b><svg onClick={handlePrint} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body >\r\n                            <Table  size={\"sm\"} className=\"bg-white rounded\" striped bordered hover responsive>\r\n                            <thead>\r\n                              <tr>\r\n                                  <th>EMI date</th>\r\n                                  <th>EMI Amount</th>\r\n                                  <th>Principal</th>\r\n                                  <th>Interest</th>\r\n                                  <th>Outstanding</th>\r\n                              </tr>\r\n                          </thead>\r\n                                <tbody>\r\n                                {calculatedData.map((value,id)=>(<tr>\r\n                                    <td>{value.date}</td>\r\n                                    <td>{value.EMI.toFixed(2)}</td>\r\n                                    <td>{value.principal}</td>\r\n                                    <td>{value.int_amount}</td>\r\n                                    <td>{value.outstanding }</td>\r\n                                </tr>))}\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n            </Col>\r\n\r\n    </Row>\r\n    </Container>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default EmiCalculator;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nclass PrintDueEmis extends React.PureComponent { \r\n    add =(row,a)=>{\r\n        console.log(row,a.values);\r\n        return parseFloat(a.values.col7) + row;\r\n    }\r\n    render() {\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-center mb-5 mt-3\">AAs2 MutualHelp Micro Finance</h3>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                <thead className=\"bg-primary\">\r\n                    <tr>\r\n                        <th>Account No.</th>\r\n                        <th>Group</th>\r\n                        <th>Village Name</th>\r\n                        <th>Member ID</th>\r\n                        <th>Name</th>\r\n                        <th>No. of Emi</th>\r\n                        <th>EMI Amount</th>\r\n                        <th>Outstanding</th>\r\n                        <th>Company Signature</th>\r\n                        <th>Customer Signature</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.dueEmis.map((emi, id) => (<tr>\r\n                        <td>{emi.values.col1}</td>\r\n                        <td>{emi.values.col2}</td>\r\n                        <td>{emi.values.col3}</td>\r\n                        <td>{emi.values.col4}</td>\r\n                        <td>{emi.values.col5}</td>\r\n                        <td>{emi.values.col6}</td>\r\n                        <td>{emi.values.col7}</td>\r\n                        <td>{emi.values.col8}</td>\r\n                        <td className=\"border\"></td>\r\n                        <td className=\"border\"></td>\r\n                    </tr>))}\r\n                </tbody>\r\n                <tfoot>\r\n                <tr>\r\n                <th>Total Collection</th><th colSpan=\"9\">{this.props.dueEmis.reduce(this.add,0)}</th>\r\n                    \r\n                </tr>\r\n                </tfoot>\r\n            </Table> \r\n            \r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default PrintDueEmis;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel, Pagination } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from '../../models/groupLoan';\r\nimport Loader from '../layout/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport PrintDueEmis from './printDueEmis';\r\nfunction DueEmis(props) {\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [dueEmis, setDueEmis] = useState([]);\r\n    const [paidID, setPaidID] = useState(0)\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const emiDetailsRef = useRef();\r\n    const handlePrintEmiDetail = useReactToPrint({\r\n        content: () => emiDetailsRef.current,\r\n        documentTitle:\"AA2-Due-EMIs\",\r\n      });\r\n\r\n    useEffect(() => {\r\n        getDueEmisRecord();\r\n    }, [])\r\n\r\n    const data = useMemo(\r\n        () =>\r\n            dueEmis.map((record, index) => {\r\n                return {\r\n                    col1: record.loan_account_no,\r\n                    col2: record.member_group_id,\r\n                    col3: record.village_name,\r\n                    col4: record.member_id,\r\n                    col5: record.member_name,\r\n                    col6: record.remain_EMI,\r\n                    col7: record.EMI_amount.toFixed(2),\r\n                    col8: record.outstanding,\r\n                    col9: record,\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [dueEmis]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                Cell: e => { return(<Link to={{\r\n                    pathname: '/loanApprovalDetails',\r\n                    state: dueEmis[e.row.id]?.loan_table_id\r\n                }}>{e.value}</Link>)}\r\n            },\r\n            {\r\n                Header: 'Group',\r\n                accessor: 'col2', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                 Cell: e => <Link to=\"/memberGroup\">{e.value}</Link>\r\n            },\r\n            {\r\n                Header: 'Village Name',\r\n                accessor: 'col3', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                 Cell: e => <Link to=\"/village\">{e.value}</Link>\r\n            },\r\n            {\r\n                Header: 'Member ID',\r\n                accessor: 'col4',\r\n                allowFilter: true,\r\n                Cell: emi => {\r\n                    return (<Link to={{\r\n                    pathname: '/viewMemberDetail',\r\n                    state: emi.value\r\n                }}>{emi.value}</Link>)}\r\n            },\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'col5',\r\n                allowFilter: true,\r\n                Cell: emi => <Link to={{\r\n                    pathname: '/viewMemberDetail',\r\n                    state:dueEmis[emi.row.id]?.member_id\r\n                }}>{emi.value}</Link>\r\n            },\r\n            {\r\n                Header: 'No. of EMI',\r\n                accessor: 'col6',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'EMI Amount',\r\n                accessor: 'col7',\r\n                allowFilter: true\r\n            },\r\n            {\r\n                Header: 'Outstanding',\r\n                accessor: 'col8',\r\n                allowFilter: false\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col9',\r\n                allowFilter: false,\r\n                Cell: emi => <Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.value.emi_id)}>Pay</Button>\r\n            },\r\n        ],\r\n        [dueEmis]\r\n    )\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination className=\"text-left\">\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n\r\n    const getDueEmisRecord = (today = moment().format(\"yyyy-MM-DD\")) => {\r\n        setisShowLoader(true);\r\n        groupLoan.EmiModel.getDueEmis(today).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let emiData = [];\r\n                emiData = res.body.message.map(emi => {\r\n                    // return emi\r\n                    emi[\"loan_table_id\"] = emi.loan_account_no.substring(11)\r\n                    return emi;\r\n                });\r\n                setDueEmis(emiData);\r\n            } else {\r\n                setDueEmis([]);\r\n            }\r\n        })\r\n    }\r\n    const paidEMI = async () => {\r\n        setShowDeleteModel(false);\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await groupLoan.EmiModel.paidEmi(paidID);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                let UpdatedList = dueEmis.filter((emidata, idx) => emidata.emi_id != paidID);\r\n                setDueEmis(UpdatedList);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    const paidHandle = (id) => {\r\n        setPaidID(id);\r\n        setShowDeleteModel(true);\r\n    }\r\n    const changeEmiDate = (selectedDate) => {\r\n        setEnrollmentDate(selectedDate)\r\n        getDueEmisRecord(moment(selectedDate).format(\"yyyy-MM-DD\"));\r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            <Modal show={showDeleteModel} onHide={() => setShowDeleteModel(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Paid EMI </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => setShowDeleteModel(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => paidEMI()}>\r\n                        Paid\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n                <h2 className=\"text-info text-center\">Due EMIs</h2>\r\n                <Row>\r\n                    <Col>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormLabel className=\"mr-3\">EMI Date:</FormLabel>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => changeEmiDate(date)}\r\n                                name=\"enrollment_date\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n\r\n                        </InputGroup>\r\n\r\n                        <div>\r\n                            {paginate(pageCount)}\r\n                            <svg style={{cursor:'pointer'}} onClick={handlePrintEmiDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer mb-2\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n                        </div>\r\n                        <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                //console.log(cell);\r\n                                                return (\r\n                                                    <td {...cell.getCellProps()}>\r\n                                                        {cell.render('Cell')}\r\n                                                    </td>\r\n                                                    )\r\n\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        <div style={{display:\"none\"}}> <PrintDueEmis ref={emiDetailsRef} dueEmis={rows}/></div>\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DueEmis;","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nfunction Village(props) {\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\nconst [villageRecords,setVillageRecords]=useState([]);\r\n    useEffect(() => {\r\n            getVillages();\r\n    },[])\r\n\r\n    const getVillages = () =>{\r\n        setisShowLoader(true);\r\n        groupLoan.villageModel.getVillage().then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setVillageRecords(res.body.message);\r\n            }else{\r\n                setVillageRecords([]);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Village</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addVillage\">\r\n                <Button variant=\"info\" active>\r\n                    Add Village\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\" shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                <tr>\r\n                    <th>Village ID</th>\r\n                    <th>Village Name</th>\r\n                    <th>Week</th>\r\n                    <th>Day</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {villageRecords.map((vill,id)=>(<tr>\r\n                    <td>{vill.id}</td>\r\n                    <td>{vill.village_name}</td>\r\n                    <td>{vill.week}</td>\r\n                    <td>{vill.day }</td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n</Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Village;","import React, { useState } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport groupLoan from \"../../models/groupLoan\";\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AddVillage(props) {\r\n  const [values, setValues] = useState({});\r\n  const [isShowLoader, setisShowLoader] = useState(false)\r\n  const [showToast, setShowToast] = useState({ isShow: false,type:\"\", message: \"\" })\r\n  const validate = values => {\r\n    const errors = {};\r\n    if (!values.village_name) {\r\n      errors.village_name = 'Village name is Required';\r\n    }\r\n    if (!values.week) {\r\n        errors.week = 'Week is Required';\r\n    }\r\n    if (!values.day) {\r\n    errors.day = 'Day is Required';\r\n    }\r\n    return errors;\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      village_name: '',\r\n      week: '',\r\n      day: '',\r\n    },\r\n    validate,\r\n    onSubmit: async (values) => {\r\n      setisShowLoader(true);\r\n      try {\r\n        let response = await groupLoan.villageModel.saveVillage(values);\r\n        setisShowLoader(false);\r\n        if (response.statusCode == 200) {\r\n          setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n          formik.resetForm();\r\n        } else {\r\n          setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n        }\r\n\r\n      } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n      }\r\n    },\r\n    handleChange: () => {\r\n      setValues(prevValues => ({\r\n        ...prevValues,\r\n        // we use the name to tell Formik which key of `values` to update\r\n        [values.target.name]: values.target.value\r\n      }))\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n        <Toast.Header>\r\n          <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n        </Toast.Header>\r\n        <Toast.Body className=\"Dark\">\r\n        {showToast.message}\r\n        </Toast.Body>\r\n      </Toast>\r\n\r\n      <Loader show={isShowLoader} />\r\n      <h2 className=\"text-info text-center\">Add Village</h2>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n            <Form onSubmit={formik.handleSubmit}>\r\n              <Form.Group className=\"mb-3 form-group required\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Village Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"village_name\"\r\n                  placeholder=\"Enter village name\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.village_name}\r\n\r\n                />\r\n                {formik.touched.village_name && formik.errors.village_name ? (\r\n                  <div class=\"text-danger\">{formik.errors.village_name}</div>\r\n                ) : null}\r\n\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>Week</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"week\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.week}>\r\n                    <option key=\"\" value=\"\">Select Week</option>\r\n                    <option key=\"1\" value=\"1\">Week 1</option>\r\n                    <option key=\"2\" value=\"2\">Week 2</option>\r\n                </select>\r\n                {formik.touched.week && formik.errors.week ? (\r\n                  <div class=\"text-danger\">{formik.errors.week}</div>\r\n                ) : null}\r\n            </Form.Group>\r\n            <Form.Group as={Col} className=\"mb-3 pl-0 pr-0 required\" controlId=\"formGridAddress1\">\r\n                <Form.Label>Day</Form.Label>\r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"day\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.day}>\r\n                    <option key=\"\" value=\"\">Select day</option>\r\n                    <option key=\"monday\" value=\"monday\">Monday</option>\r\n                    <option key=\"tuesday\" value=\"tuesday\">Tuesday</option>\r\n                    <option key=\"wednesday\" value=\"wednesday\">Wednesday</option>\r\n                    <option key=\"thrusday\" value=\"thrusday\">Thrusday</option>\r\n                    <option key=\"friday\" value=\"friday\">Friday</option>\r\n                </select>\r\n                {formik.touched.day && formik.errors.day ? (\r\n                  <div class=\"text-danger\">{formik.errors.day}</div>\r\n                ) : null}\r\n\r\n            </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n\r\n            </Form>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default AddVillage;","import {superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst ExpenseModel = {\r\n    getExpense(filter){\r\n        return superagent.get(`${API_ROOT}/expense/entry/${filter}`)\r\n    },\r\n    saveExpense(data){\r\n        return superagent.post(`${API_ROOT}/expense/entry`,data)\r\n    },\r\n    deleteExpense(id){\r\n        return superagent.del(`${API_ROOT}/expense/entry/${id}`)\r\n    },\r\n    editExpense(data,id){\r\n        return superagent.put(`${API_ROOT}/expense/entry/${id}`,data)\r\n\r\n    }\r\n    \r\n  }\r\n    export default {ExpenseModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Expense(props) {\r\n    let history = useHistory();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [expense,setExpense]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getExpenses();\r\n    },[])\r\n\r\n    const getExpenses = () =>{\r\n        setisShowLoader(true);\r\n        expenseRecord.ExpenseModel.getExpense('all').then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setExpense(res.body.message);\r\n            }else{\r\n                setExpense([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteScheme=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await expenseRecord.ExpenseModel.deleteExpense(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = expense.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setExpense(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Expense</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteScheme()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Expenses</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addExpense\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Expense\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Expense Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Date Expense</th>\r\n                    <th>Created At</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {expense.map((data,id)=>(<tr>\r\n                    <td>{data.id}</td>\r\n                    <td>{data.expense_type}</td>\r\n                    <td>{data.amount}</td>\r\n                    <td>{data.date_of_expense?moment(data.date_of_expense).format(\"DD-MM-yyyy\"):\"\"}</td>\r\n                    <td>{moment(data.created_at).format(\"DD-MM-yyyy hh:ss A\") }</td>\r\n                    <td>\r\n                        \r\n                    <Button variant=\"success\" size={\"sm\"} onClick={()=>{history.push(\"/addExpense\",data.id)}} >Edit</Button>\r\n                    {' '}\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(data.id)} >Delete</Button>\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n    </Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default Expense;","import React, { useState,useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport expenseRecord from '../../models/expenseRecord';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddExpense(props) {\r\n    let history = useHistory();\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n      console.log(props);\r\n      if(props.location.state)\r\n          getExpenseDetails(props.location.state);\r\n  }, [])    \r\n    const getExpenseDetails = async(id)=>{\r\n      try {\r\n        setisShowLoader(true);\r\n        let response = await expenseRecord.ExpenseModel.getExpense(props.location.state);\r\n        formik.values.expense_type = response.body.message[0].expense_type  \r\n        formik.values.amount = response.body.message[0].amount \r\n        setEnrollmentDate(new Date(response.body.message[0].date_of_expense));\r\n\r\n        setisShowLoader(false);\r\n    } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n    }\r\n    }\r\n    const validate = values => {\r\n      const errors = {};\r\n      if (!values.expense_type) {\r\n        errors.expense_type = 'Expense type is Required!';\r\n      }\r\n      if (!values.amount) {\r\n        errors.amount = 'Amount is Required!';\r\n      }\r\n      return errors;\r\n    };\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        expense_type: '',\r\n        amount: '',\r\n        date_of_expense: '',\r\n        user_id:auth.id\r\n      },\r\n      validate,\r\n      onSubmit: async (values) => {\r\n        setisShowLoader(true);\r\n          try {\r\n            values.date_of_expense = enrollmentDate;\r\n            let response = [];\r\n            if(props.location.state){\r\n              response = await expenseRecord.ExpenseModel.editExpense(values,props.location.state);\r\n\r\n         }else{\r\n\r\n             response = await expenseRecord.ExpenseModel.saveExpense(values);\r\n         }\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              formik.resetForm();\r\n              if(props.location.state)\r\n              history.push(\"/expense\")              \r\n              setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            } else {\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n      },\r\n      handleChange: () => {\r\n        setValues(prevValues => ({\r\n          ...prevValues,\r\n          // we use the name to tell Formik which key of `values` to update\r\n          [values.target.name]: values.target.value\r\n        }))\r\n      },\r\n    });\r\n    return (\r\n      <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n          {showToast.message}\r\n          </Toast.Body>\r\n        </Toast>\r\n        <Loader show={isShowLoader} />\r\n        <h2 className=\"text-info text-center\">Add Expense</h2>\r\n        <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Expense Type:</Form.Label>\r\n                <Form.Control\r\n                  name=\"expense_type\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.expense_type}\r\n                />\r\n                  {formik.touched.expense_type && formik.errors.expense_type ? (\r\n                    <div class=\"text-danger\">{formik.errors.expense_type}</div>\r\n                  ) : null}              \r\n              </Form.Group>\r\n              {/* </Row> */}\r\n              {/* <Row className=\"mb-3\" md={6}> */}\r\n\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Amount</Form.Label>\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.amount}\r\n                />\r\n                  {formik.touched.amount && formik.errors.amount ? (\r\n                    <div class=\"text-danger\">{formik.errors.amount}</div>\r\n                  ) : null}              \r\n  \r\n              </Form.Group>\r\n  \r\n            {/* </Row> */}\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n            <Form.Group  className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Enrollment Date</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"enrollment_date\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n            {/* </Row> */}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n  \r\n          </Form>\r\n        </Container>\r\n        </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default AddExpense;","import {superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst ProcessingFeeModel = {\r\n    getProcessingFee(filter){\r\n        return superagent.get(`${API_ROOT}/processingFee/entry/${filter}`)\r\n    },\r\n    saveProcessingFee(data){\r\n        return superagent.post(`${API_ROOT}/processingFee/entry`,data)\r\n    },\r\n    deleteProcessingFee(id){\r\n        return superagent.del(`${API_ROOT}/processingFee/entry/${id}`)\r\n    },\r\n    editProcessingFee(data,id){\r\n        return superagent.put(`${API_ROOT}/processingFee/entry/${id}`,data)\r\n\r\n    }\r\n    \r\n  }\r\n    export default {ProcessingFeeModel};","import React, { useEffect, useState } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport processingFee from '../../models/processingFee';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nfunction ProcessingFee(props) {\r\n    let history = useHistory();\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [processingFees,setProcessingFees]=useState([]);\r\n    const [deleteID, setDeleteID] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getProcessingFees();\r\n    },[])\r\n\r\n    const getProcessingFees = () =>{\r\n        setisShowLoader(true);\r\n        processingFee.ProcessingFeeModel.getProcessingFee('all').then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setProcessingFees(res.body.message);\r\n            }else{\r\n                setProcessingFees([]);\r\n            }\r\n        })\r\n    }\r\n    const  deleteHandle=(id)=>{\r\n        setDeleteID(id); \r\n        setShowDeleteModel(true);\r\n    }\r\n\r\n    const deleteProcessingFee=async()=>{\r\n        setShowDeleteModel(false);\r\n        try{\r\n            setisShowLoader(true);\r\n            let response = await processingFee.ProcessingFeeModel.deleteProcessingFee(deleteID);\r\n            setisShowLoader(false);\r\n            if(response.statusCode == 200){\r\n                let UpdatedList = processingFees.filter((scheme,idx)=>scheme.id!=deleteID);\r\n                setProcessingFees(UpdatedList);\r\n             }\r\n        }catch (error) {\r\n                console.log(error.response.body.message);\r\n                setisShowLoader(false);\r\n            }\r\n    }    \r\n    return (\r\n        <>\r\n      <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Processing Fee</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteProcessingFee()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>        \r\n        \r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">Processing Fee</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/addProcessingFee\">\r\n                <Button variant=\"info\" size=\"lg\" active>\r\n                    Add Processing Fee\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <Table className=\"shadow-lg p-3 mb-5 bg-white rounded\" striped bordered hover responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Id</th>\r\n                    <th>Particular</th>\r\n                    <th>Amount</th>\r\n                    <th>Date Processing Fee</th>\r\n                    <th>Created At</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {processingFees.map((data,id)=>(<tr>\r\n                    <td>{data.id}</td>\r\n                    <td>{data.particular}</td>\r\n                    <td>{data.amount}</td>\r\n                    <td>{data.date_of_processing?moment(data.date_of_processing).format(\"DD-MM-yyyy\"):\"\"}</td>\r\n                    <td>{moment(data.created_at).format(\"DD-MM-yyyy hh:ss A\") }</td>\r\n                    <td>\r\n                        \r\n                    <Button variant=\"success\" size={\"sm\"} onClick={()=>{history.push(\"/addProcessingFee\",data.id)}} >Edit</Button>\r\n                    {' '}\r\n                    <Button variant=\"danger\" size={\"sm\"} onClick={()=>deleteHandle(data.id)} >Delete</Button>\r\n                    </td>\r\n                </tr>))}\r\n            </tbody>\r\n        </Table>\r\n    </Col>\r\n            </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default ProcessingFee;","import React, { useState,useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport processingFee from  '../../models/processingFee';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddProcessingFee(props) {\r\n    let history = useHistory();\r\n    const auth = useSelector(state => state.auth);\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n\r\n    const [values, setValues] = useState({});\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    useEffect(() => {\r\n      console.log(props);\r\n      if(props.location.state)\r\n          getExpenseDetails(props.location.state);\r\n  }, [])    \r\n    const getExpenseDetails = async(id)=>{\r\n      try {\r\n        setisShowLoader(true);\r\n        let response = await processingFee.ProcessingFeeModel.getProcessingFee(props.location.state);\r\n        formik.values.particular = response.body.message[0].particular  \r\n        formik.values.amount = response.body.message[0].amount \r\n        setEnrollmentDate(new Date(response.body.message[0].date_of_processing));\r\n\r\n        setisShowLoader(false);\r\n    } catch (error) {\r\n        setisShowLoader(false);\r\n        setShowToast({ isShow: true, type: \"bg-danger\", message: error.response.body.message })\r\n    }\r\n    }\r\n    const validate = values => {\r\n      const errors = {};\r\n      if (!values.particular) {\r\n        errors.particular = 'Particular type is Required!';\r\n      }\r\n      if (!values.amount) {\r\n        errors.amount = 'Amount is Required!';\r\n      }\r\n      return errors;\r\n    };\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        particular: '',\r\n        amount: '',\r\n        date_of_processing: '',\r\n        user_id:auth.id\r\n      },\r\n      validate,\r\n      onSubmit: async (values) => {\r\n        setisShowLoader(true);\r\n          try {\r\n            values.date_of_processing = enrollmentDate;\r\n            let response = [];\r\n            if(props.location.state){\r\n              response = await processingFee.ProcessingFeeModel.editProcessingFee(values,props.location.state);\r\n\r\n         }else{\r\n\r\n             response = await processingFee.ProcessingFeeModel.saveProcessingFee(values);\r\n         }\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n              formik.resetForm();\r\n              if(props.location.state)\r\n              history.push(\"/processingFee\")              \r\n              setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n            } else {\r\n              setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n            }\r\n  \r\n          } catch (error) {\r\n            setisShowLoader(false);\r\n            setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n          }\r\n      },\r\n      handleChange: () => {\r\n        setValues(prevValues => ({\r\n          ...prevValues,\r\n          // we use the name to tell Formik which key of `values` to update\r\n          [values.target.name]: values.target.value\r\n        }))\r\n      },\r\n    });\r\n    return (\r\n      <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n          <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n          </Toast.Header>\r\n          <Toast.Body className=\"Dark\">\r\n          {showToast.message}\r\n          </Toast.Body>\r\n        </Toast>\r\n        <Loader show={isShowLoader} />\r\n        <h2 className=\"text-info text-center\">{props.location.state?\"Edit\":\"Add\"} Processing Fee</h2>\r\n        <Row>\r\n        <Col md={6}>\r\n          <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n          <Form onSubmit={formik.handleSubmit}>\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Particular:</Form.Label>\r\n                <Form.Control\r\n                  name=\"particular\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.particular}\r\n                />\r\n                  {formik.touched.particular && formik.errors.particular ? (\r\n                    <div class=\"text-danger\">{formik.errors.particular}</div>\r\n                  ) : null}              \r\n              </Form.Group>\r\n              {/* </Row> */}\r\n              {/* <Row className=\"mb-3\" md={6}> */}\r\n\r\n              <Form.Group  controlId=\"formGriddob\" className=\"form-group required\">\r\n                <Form.Label>Amount</Form.Label>\r\n                <Form.Control\r\n                  name=\"amount\"\r\n                  type=\"number\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.amount}\r\n                />\r\n                  {formik.touched.amount && formik.errors.amount ? (\r\n                    <div class=\"text-danger\">{formik.errors.amount}</div>\r\n                  ) : null}              \r\n  \r\n              </Form.Group>\r\n  \r\n            {/* </Row> */}\r\n            {/* <Row className=\"mb-3\" md={6}> */}\r\n            <Form.Group  className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Date of Processing</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => setEnrollmentDate(date)}\r\n                                name=\"date_of_processing\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n            {/* </Row> */}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save\r\n            </Button>\r\n  \r\n          </Form>\r\n        </Container>\r\n        </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default AddProcessingFee;","import React,{useState,useEffect,useRef} from 'react';\r\nimport dashboard from '../../models/dashboard'\r\nimport { Table, Button, Row, Col, Card, Spinner} from 'react-bootstrap';\r\nimport moment from 'moment';\r\nfunction Ladger(props) {\r\n    const [isShowLoaderLoader, setisShowLoaderLoader] = useState(false)\r\n    const [ladger,setLadger] = useState([]);\r\n    const refContainer = useRef(\"\");\r\n    useEffect(()=>{\r\n        if(props.location.state == \"totalReceived\"){\r\n            refContainer.current = \"Received Details\";\r\n            getReceivedAmount();\r\n        }else if(props.location.state == \"totalPaid\"){\r\n            refContainer.current = \"Paid Details\";\r\n            getPaidAmount();\r\n        }\r\n    },[])\r\n    const getReceivedAmount=async()=>{\r\n        try {\r\n            setisShowLoaderLoader(true);\r\n            let response = await dashboard.DashboardModel.getReceivedAmount();\r\n            setisShowLoaderLoader(false);\r\n            if (response.statusCode == 200) {\r\n               let emiLadger = []\r\n               let processingFeeLadger = []\r\n               let data = []\r\n               emiLadger = response.body.message?.emis.map((val,idx)=>{\r\n                   return {\r\n                            \"date\":moment(val.EMI_date).format(\"DD-MM-yyyy\"),\r\n                            \"particular\":`EMI received Loan Account - ${val.loan_account_no}`,\r\n                            \"amount\":val.EMI_amount,\r\n                    }\r\n               });\r\n               processingFeeLadger = response.body.message?.processingFee.map((val,idx)=>{\r\n                   return {\r\n                            \"date\":moment(val.created_at).format(\"DD-MM-yyyy\"),\r\n                            \"particular\":val.particular,\r\n                            \"amount\":val.amount,\r\n                            }\r\n               });\r\n               data = [...emiLadger,...processingFeeLadger];\r\n               data.sort( compare );\r\n               setLadger(data);\r\n            } else {\r\n                setLadger([]);\r\n            }\r\n        } catch (error) {\r\n            setisShowLoaderLoader(false);\r\n          }\r\n    }\r\n    const getPaidAmount=async()=>{\r\n        try {\r\n            setisShowLoaderLoader(true);\r\n            let response = await dashboard.DashboardModel.getPaidAmount();\r\n            setisShowLoaderLoader(false);\r\n            if (response.statusCode == 200) {\r\n               let expensesLadger = []\r\n               let loanLadger = []\r\n               let data = []\r\n               expensesLadger = response.body.message?.expenses.map((val,idx)=>{\r\n                   return {\r\n                            \"date\":moment(val.date_of_expense).format(\"DD-MM-yyyy\"),\r\n                            \"particular\":val.expense_type,\r\n                            \"amount\":val.amount,\r\n                    }\r\n               });\r\n               loanLadger = response.body.message?.loan.map((val,idx)=>{\r\n                   return {\r\n                            \"date\":moment(val.application_date).format(\"DD-MM-yyyy\"),\r\n                            \"particular\":`Loan disbursed to ${val.member_name} - Loan account ${val.loan_account_no}`,\r\n                            \"amount\":val.loan_amount,\r\n                    }\r\n               });\r\n               data = [...expensesLadger,...loanLadger];\r\n               data.sort( compare );\r\n               setLadger(data);\r\n            } else {\r\n                setLadger([]);\r\n            }\r\n        } catch (error) {\r\n            setisShowLoaderLoader(false);\r\n        }\r\n    }\r\n    const compare=( a, b )=>{\r\n        if ( a.date < b.date ){\r\n          return -1;\r\n        }\r\n        if ( a.date > b.date ){\r\n          return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    const formatAmount = (amount) =>{\r\n        return amount?amount.toString().replace(/.(?=(..)*...$)/g, '$&,'):\"\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row >\r\n                <Col>\r\n                <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\">\r\n                    <Card.Header className=\"bg-success text-center\"><b>{refContainer.current} </b></Card.Header>\r\n                    {isShowLoaderLoader?<Card.Body className=\"text-center\"><Spinner animation=\"border\"   variant=\"dark\"/></Card.Body> :\r\n                        <Card.Body>\r\n                        <Table size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n                        <thead>\r\n                        <tr className=\"bg-success\">\r\n                            <th>SR No.</th>\r\n                            <th>Date</th>\r\n                            <th>Particular</th>\r\n                            <th>Amount</th>\r\n                        </tr>\r\n                        </thead>\r\n                            <tbody>\r\n                                {ladger.map((val,idx)=><tr>\r\n                                    <td>\r\n                                        {idx+1}\r\n                                    </td>\r\n                                    <td>\r\n                                        {val.date}\r\n                                    </td>\r\n                                    <td>\r\n                                        {val.particular}\r\n                                    </td>\r\n                                    <td >\r\n                                        {formatAmount(val.amount)}\r\n                                    </td>\r\n\r\n                                </tr>)}\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <th>Total</th>\r\n                                    <th colSpan=\"3\" className=\"text-right\">{ladger.reduce(function (previous, current) {\r\n                                            return previous + parseFloat(current.amount);\r\n                                        }, 0)}</th>\r\n                                </tr>\r\n                            </tfoot>\r\n                </Table>\r\n                        </Card.Body> }  \r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Ladger;","import {requests, superagent, API_ROOT} from \"./BaseUrl\"\r\n\r\n//const url = '/memberGroups/';\r\n\r\nconst RDApplicationsModel = {\r\n  getAllRdApplications(agent_id){\r\n    return superagent.get(`${API_ROOT}/rdApplication/entry/${agent_id}`);\r\n  },\r\n  openRdAccount(data){\r\n    return superagent.post(`${API_ROOT}/rdApplication/entry`,data)\r\n  },\r\n  getRdDetails(id){\r\n    return superagent.get(`${API_ROOT}/rdApplication/entryById/${id}`);\r\n  },\r\n  getDeposits(agent_id,deposites_date){\r\n    return superagent.get(`${API_ROOT}/accountDeposited/entryByDate/${agent_id}/${deposites_date}`);\r\n  },\r\n  postDeposit(data){\r\n    return superagent.put(`${API_ROOT}/accountDeposited/entry/`,data);\r\n\r\n  }\r\n//   getMembersBygroup(group_code){\r\n//     return superagent.get(`${API_ROOT}/memberGroups/memberByGroupCode/${group_code}`)\r\n//   },\r\n//   deleteGroup(group_code){\r\n//     return superagent.del(`${API_ROOT}/memberGroups/entry/${group_code}`)\r\n//   }\r\n\r\n  }\r\n    export default {RDApplicationsModel};","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table,Button, Container, Row, Col,Modal,Pagination } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport RDApplications from '../../models/RDApplications';\r\nimport Loader from '../layout/Loader';\r\nimport moment from 'moment';\r\nimport {useTable,useSortBy,usePagination,useFilters } from 'react-table'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\n\r\nfunction RdApplications(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    let history = useHistory();\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    // const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    // const [deleteID, setDeleteID] = useState(0)\r\n    const [rdAccounts,setRdAccounts]=useState([]);\r\n    useEffect(() => {\r\n            getMemberGroup();\r\n    },[])\r\n    \r\n    const data = useMemo(\r\n        () => \r\n        rdAccounts.map((record,index)=>\r\n                { \r\n             return {\r\n                col1:record.account_number,\r\n                col2:record.account_holder_name,\r\n                col4:record.address,\r\n                col5:record.phone,\r\n                col6:record.rd_amount,\r\n                col3:record.maturity_amount,\r\n                col7:record.tenure,\r\n                col8:record.period,\r\n                col9:record,\r\n                }\r\n            }\r\n        )\r\n        ,\r\n        [rdAccounts]\r\n      )   \r\n\r\n    const columns = useMemo(\r\n        () => [\r\n          {\r\n            Header: 'Account number',\r\n            accessor: 'col1', // accessor is the \"key\" in the data\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Account holder',\r\n            accessor: 'col2',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Address',\r\n            accessor: 'col4',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Phone',\r\n            accessor: 'col5',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'RD amount',\r\n            accessor: 'col6',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Maturity amount',\r\n            accessor: 'col3',\r\n            allowFilter:true\r\n          },\r\n\r\n          {\r\n            Header: 'Tenure',\r\n            accessor: 'col7',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Period',\r\n            accessor: 'col8',\r\n            allowFilter:true\r\n          },\r\n          {\r\n            Header: 'Action',\r\n            accessor: 'col9',\r\n            allowFilter: false,\r\n            Cell: emi => {\r\n                return (<Button size={\"sm\"} variant=\"info\" onClick={() => { history.push(\"/rdDetails\", emi.value.id) }} type=\"button\" className=\"ml-2\">\r\n                    View\r\n                </Button>\r\n                )\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        ],\r\n        []\r\n      )    \r\n\r\n    const getMemberGroup = () =>{\r\n        setisShowLoader(true);\r\n        let payload = auth.id;\r\n        if(auth.role == \"admin\" || auth.role == \"maker\"|| auth.role == \"checker\"){\r\n          payload = \"all\";\r\n        }\r\n        RDApplications.RDApplicationsModel.getAllRdApplications(payload).then(res=>{\r\n            setisShowLoader(false);\r\n            if(res.statusCode == 200){\r\n                setRdAccounts(res.body.message);\r\n            }else{\r\n                setRdAccounts([]);\r\n            }\r\n        })\r\n    }\r\n    // const deleteHandle=(id)=>{\r\n    //     setDeleteID(id);        \r\n    //     setShowDeleteModel(true);\r\n    // }\r\n    // const deleteMember=async()=>{\r\n    //     setShowDeleteModel(false);\r\n    //     try{\r\n    //         setisShowLoader(true);\r\n    //         let response = await memberRecord.MemberDetailModel.deleteMember(deleteID);\r\n    //         setisShowLoader(false);\r\n    //         if(response.statusCode == 200){\r\n    //             let UpdatedList = memberRecords.filter((member,idx)=>member.member_id!=deleteID);\r\n    //             setMemberRecords(UpdatedList);\r\n    //          }\r\n    //     }catch (error) {\r\n    //             console.log(error.response.body.message);\r\n    //             setisShowLoader(false);\r\n    //         }\r\n              \r\n    // }\r\n  \r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n    \r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }    \r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    ) \r\n    const paginate = (totalPage)=>{\r\n      let pageNumberArray = [];\r\n      for(let i=1;i<=totalPage;i++){\r\n        pageNumberArray.push(i);\r\n      }\r\n      return(      \r\n      <Pagination>\r\n        <Pagination.First  onClick={() => gotoPage(0)}/>\r\n        <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage}/>\r\n        {pageNumberArray.map(num=><Pagination.Item key={num} active={num === (pageIndex+1)} onClick={() => gotoPage(num-1)}>{num}</Pagination.Item>)}\r\n        <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage}/>\r\n        <Pagination.Last onClick={() => gotoPage(totalPage-1)}/>\r\n        </Pagination>\r\n      );\r\n    \r\n    }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,  \r\n      } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 }},useFilters,useSortBy,usePagination)\r\n    return (\r\n        <>\r\n      {/* <Modal show={showDeleteModel} onHide={()=>setShowDeleteModel(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>setShowDeleteModel(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>deleteMember()}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>         */}\r\n        <Loader show={isShowLoader}/>\r\n        <Container fluid>\r\n        <h2 className=\"text-info text-center\">RD applications</h2>\r\n            <Row className=\"mb-5 mt-3\">\r\n                <Col>\r\n                <Link to=\"/openNewRdAccount\">\r\n                <Button variant=\"info\"  active>\r\n                    Open new RD\r\n                </Button>\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col>\r\n            <div className=\"text-right\">\r\n              {paginate(pageCount)}\r\n            </div>   \r\n\r\n            <Table {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n            <thead className=\"bg-primary\">\r\n                    {headerGroups.map(headerGroup => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map(column => (\r\n                        <th\r\n                            {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                        >\r\n                            {column.render('Header')}\r\n                            <span>\r\n                            {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                            </span>\r\n                            <div>{column.allowFilter? column.render('Filter') : null}</div>\r\n                        </th>\r\n                        ))}\r\n                    </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody{...getTableBodyProps()}>\r\n\r\n                    {page.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                console.log(cell);\r\n                                // if(cell.column.id !=\"col5\"){                                \r\n                                    return (\r\n                                        <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                        )\r\n                                    // }else{\r\n                                    //     return (\r\n                                    //         <td>\r\n                                    //             {/* <Link to = \"/viewMemberDetail/:5\" params={{ member_id: cell.value.member_id }}> */}\r\n                                    //             <Button size={\"sm\"} variant=\"primary\"  onClick={()=>{history.push(\"/viewMemberDetail\",cell.value.member_id)}}>View</Button>\r\n                                    //             {' '}\r\n                                    //             <Button size={\"sm\"} variant=\"success\" onClick={()=>{history.push(\"/addMember\",cell.value.member_id)}} >Edit</Button>\r\n                                    //             {' '}\r\n                                    //             {/* <Button size={\"sm\"} variant=\"danger\" onClick={()=>deleteHandle(cell.value.member_id)} >Delete</Button> */}\r\n                                    //         </td>\r\n                                    //     )\r\n                                    // }\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n\r\n            </tbody>\r\n        </Table>\r\n        <div className=\"text-right\">\r\n          {paginate(pageCount)}\r\n        </div>   \r\n        </Col>\r\n        </Row>\r\n        </Container>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default RdApplications;","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Container, Row, Col, Card, ListGroup,Modal,Toast } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport RDApplications from '../../models/RDApplications';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\n// import EmiCard from './EmiCard';\r\n// import EmiCardPrint from './EmiCardPrint';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction RdDetails(props) {\r\n    let history = useHistory();\r\n    const memberDetailsRef = useRef();\r\n    const handlePrintMemberDetail = useReactToPrint({\r\n        content: () => memberDetailsRef.current,\r\n        documentTitle:\"AA2-Member\",\r\n      });\r\n\r\n      const applicationRef = useRef();\r\n      const handlePrintApplication = useReactToPrint({\r\n          content: () => applicationRef.current,\r\n          documentTitle:\"AA2-application\",\r\n        });\r\n\r\n        const emiRef = useRef();\r\n        const handlePrintEMI = useReactToPrint({\r\n            content: () => emiRef.current,\r\n            documentTitle:\"AA2-EMI-details\",\r\n          });\r\n      \r\n    const auth = useSelector(state => state.auth);\r\n    const [paidEmiRecord, setPaidEmiRecord] = useState([])\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [isShowEMILoader, setisShowEMILoader] = useState(false)\r\n    const [emiData, setEmiData] = useState([])\r\n    const [loanDetails, setLoanDetails] = useState({});\r\n    // const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n    // const [showApprovalButton,setShowApprovalButton]= useState(false);\r\n    // const [showDisburseButton,setShowDisburseButton]= useState(false);\r\n    \r\n    //const [disburseActionButton,setDisburseActionButton]\r\n    useEffect(() => {\r\n        console.log(props);\r\n        getLoanDetails();\r\n    }, [])\r\n\r\n    const getLoanDetails = async () => {\r\n        try {\r\n            setisShowLoader(true);\r\n            //setisShowEMILoader(true);\r\n\r\n            let response = await RDApplications.RDApplicationsModel.getRdDetails(props.location.state);\r\n            //setisShowEMILoader(true);\r\n            //let EmiData = await groupLoan.EmiModel.calculateEMI(calculateEmi);\r\n            let paidData = [];\r\n            let result = [];\r\n            // if(response.body.message[0].loan_account_no){\r\n            //     paidData = await groupLoan.EmiModel.getPaidEmis(response.body.message[0].loan_account_no);\r\n            //     for(let i=0;i<paidData.body.message.length;i++){\r\n            //         let emiDate = moment(paidData.body.message[i].EMI_date).format(\"DD-MM-yyyy\");\r\n            //         result[emiDate]=true;\r\n            //     }   \r\n            //     setPaidEmiRecord(result);\r\n            // }\r\n            // setEmiData(EmiData.body.message);\r\n            //setisShowEMILoader(false);\r\n            console.log(response);\r\n\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n               // setShowApprovalButton(response.body.message[0].is_approved!=0?false:true);\r\n                //setShowDisburseButton(response.body.message[0].is_approved ==1 && response.body.message[0].is_disbursed==0?true:false);\r\n                setLoanDetails(response.body.message[0]);\r\n            }\r\n\r\n        } catch (error) {\r\n            setisShowLoader(false);\r\n            console.log(error);\r\n        }\r\n    }\r\n    // const actionOnLoan = async(actionType)=>{\r\n    //     try {\r\n    //         setisShowLoader(true);\r\n    //         const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n    //         let response = await groupLoan.GroupLoanModel.approveRejectLoan(data);\r\n    //         console.log(response);\r\n    //         setisShowLoader(false);\r\n    //         if (response.statusCode == 200) {\r\n    //             setShowApprovalButton(false);\r\n    //             //setShowDisburseButton(false);\r\n    //             setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n    //         }\r\n    //     } catch (error) {\r\n    //         setisShowLoader(false);\r\n    //         setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n    // const actionDisburseLoan = async(actionType)=>{\r\n    //     try {\r\n    //         setisShowLoader(true);\r\n    //         const data = {\"id\":props.location.state,\"actionType\":actionType}\r\n    //         let response = await groupLoan.GroupLoanModel.disburseRejectLoan(data);\r\n    //         setisShowLoader(false);\r\n    //         if (response.statusCode == 200) {\r\n    //             setShowDisburseButton(false);\r\n    //             setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n    //         }\r\n    //     } catch (error) {\r\n    //         setisShowLoader(false);\r\n    //         setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n    //         console.log(error);\r\n    //     }\r\n\r\n    // }\r\n    const goback = ()=>{\r\n        history.goBack();\r\n    }\r\n    return (\r\n        <>\r\n        <Button className=\"mt-2 ml-2\" onClick={goback} size={\"sm\"}>Back</Button>\r\n        {/* <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast> */}\r\n            <Loader show={isShowLoader} />\r\n            {/* {showApprovalButton && (auth.role==\"checker\"||auth.role==\"admin\")?<Row >\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionOnLoan(1)}>\r\n                        Approve\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionOnLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"} */}\r\n\r\n            {/* {showDisburseButton&& (auth.role==\"checker\"||auth.role==\"admin\")?<Row >\r\n                <Col className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"button\" onClick={()=>actionDisburseLoan(1)}>\r\n                        Disburse\r\n                    </Button>{'  '}\r\n                    <Button variant=\"danger\" type=\"button\" onClick={()=>actionDisburseLoan(-1)}>\r\n                        Reject\r\n                    </Button>\r\n                </Col>\r\n            </Row>:\"\"} */}\r\n\r\n            <Row xs={1} md={2} className=\"g-1\">\r\n                <Col>\r\n                    <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        className=\"m-2\"\r\n                        ref={memberDetailsRef}\r\n                    >\r\n                        <Card.Header className=\"bg-success text-center\"><b>Personal details</b><svg onClick={handlePrintMemberDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n                            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n                            </svg>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                    <tr><th>Account holder name</th>  <td>{loanDetails.account_holder_name}</td></tr>\r\n                                    <tr> <th>Father/Husband name</th>  <td>{loanDetails.father_husband_name}</td></tr>\r\n                                    <tr><th>DOB</th>   <td>{loanDetails.dob?moment(loanDetails.dob).format(\"DD-MM-YYYY\"):\"\" }</td></tr>\r\n                                    <tr><th>Phone</th> <td>{loanDetails.phone}</td></tr>\r\n                                    <tr><th>Gender</th>  <td>{loanDetails.gender}</td></tr>\r\n                                    <tr><th>Aadhar No.</th> <td>{loanDetails.aadhar_card}</td></tr>\r\n                                    <tr><th>PAN</th> <td>{loanDetails.pan_card}</td></tr>\r\n                                    <tr><th>Driving License</th> <td>{loanDetails.driving_licence}</td></tr>\r\n                                    <tr><th>Ration Card No.</th> <td>{loanDetails.ration_card}</td></tr>\r\n                                    <tr><th>Voter ID No.</th> <td>{loanDetails.voter_id}</td></tr>\r\n\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card border=\"info\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        // style={{ width: '18rem' }}\r\n                        className=\"m-2\"\r\n                        ref={applicationRef}\r\n                    >\r\n                        <Card.Header className=\"bg-info text-center\"><b>RD Details</b><svg onClick={handlePrintApplication} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer float-right cursar\" viewBox=\"0 0 16 16\">\r\n  <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n  <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n</svg></Card.Header>\r\n                        <Card.Body>\r\n                            \r\n                            <Table size=\"sm\" className=\"bg-white rounded\" striped bordered hover responsive>\r\n                                <tbody>\r\n                                     <tr><th>Account Number</th><td>{loanDetails.account_number}</td> </tr>\r\n                                    <tr><th>Application Date</th><td>{moment(loanDetails.created_at).format(\"DD-MM-YYYY HH:SS\") }</td> </tr>\r\n                                    {/* <tr><th>Scheme Id</th>  <td>{loanDetails.scheme_id}</td></tr> */}\r\n                                   <tr><th>RD Amount</th>   <td>{loanDetails.rd_amount}</td></tr>\r\n                                    <tr><th>Interest rate</th> <td>{loanDetails.interest_rate}</td></tr>\r\n                                    <tr><th>Period</th>  <td>{loanDetails.period}</td></tr>\r\n                                    <tr><th>Tenure</th> <td>{loanDetails.tenure}</td></tr>\r\n                                    <tr><th>Initial Deposit Amount</th> <td>{loanDetails.initial_deposited_amount}</td></tr>\r\n                                    <tr><th>Maturity Amount</th>   <td>{loanDetails.maturity_amount}</td></tr>\r\n                                </tbody>\r\n                            </Table>\r\n\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                {/* <Col >\r\n                    <Loader show={isShowEMILoader} relative={true}/>\r\n                    <EmiCard showDisburseButton={loanDetails.is_approved ==1 && loanDetails.is_disbursed==1}  emiData={emiData} paidEmiRecord={paidEmiRecord} handlePrintEMI={handlePrintEMI}/>\r\n                    <div style={{display:\"none\"}}><EmiCardPrint ref={emiRef} emiData={emiData}/></div> \r\n                </Col> */}\r\n\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RdDetails;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Container, Row, Col, Toast } from 'react-bootstrap';\r\nimport { useFormik } from 'formik';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport RDApplications from '../../models/RDApplications';\r\nimport Loader from '../layout/Loader';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction OpenNewRdAccount(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [loading, setLoading] = useState(false);\r\n    const [dob, setdob] = useState(new Date());\r\n    const [showToast, setShowToast] = useState({ isShow: false, type: \"\", message: \"\" })\r\n\r\n    // const [mode, setMode] = useState('date');\r\n    // const [show, setShow] = useState(false);\r\n    // const [selectedTenure, setSelectedTenure] = useState();\r\n    // const [selectedInterest, setSelectedInterest] = useState();\r\n    const [checked, setChecked] = useState(false);\r\n    let history = useHistory();\r\n    let secondTextInput = \"\";\r\n    const validate = values => {\r\n        const errors = {};\r\n        if (!values.account_holder_name) {\r\n            errors.account_holder_name = 'Account holder name is Required';\r\n        }\r\n        if (!values.rd_amount) {\r\n            errors.rd_amount = 'RD amount  is Required';\r\n        }\r\n        if (!values.period) {\r\n            errors.period = 'Period is Required';\r\n        }\r\n        if (!values.interest_rate) {\r\n            errors.interest_rate = 'Interest rate is Required';\r\n        }\r\n        if (!values.tenure) {\r\n            errors.tenure = 'Tenure is Required';\r\n        }\r\n\r\n        return errors;\r\n    };\r\n    // const onChange = (event, selectedDate) => {\r\n    //   secondTextInput.focus();\r\n\r\n    //   const currentDate = selectedDate || date;\r\n    //   setShow(Platform.OS === 'ios');\r\n    //   setDate(currentDate);\r\n\r\n    // };\r\n\r\n    // const showMode = (currentMode) => {\r\n    //   setShow(true);\r\n    //   setMode(currentMode);\r\n    // };\r\n\r\n    // const showDatepicker = () => {\r\n    //   showMode('date');\r\n    // };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            account_holder_name: '',\r\n            father_husband_name: '',\r\n            dob: '',\r\n            address: '',\r\n            phone: '',\r\n            aadhar_card: '',\r\n            pan_card: '',\r\n            driving_licence: '',\r\n            voter_id: '',\r\n            ration_card: '',\r\n            interest_rate: '',\r\n            tenure: '',\r\n            rd_amount: '',\r\n            period: '',\r\n            agent_id: '',\r\n            gender: '',\r\n            initial_deposited_amount: ''\r\n        },\r\n        validate,\r\n        onSubmit: async (values) => {\r\n            setLoading(true);\r\n            values.dob = dob;\r\n            values.agent_id = auth.id;\r\n            values.initial_deposited_amount = checked ? values.rd_amount : \"\";\r\n            try {\r\n                let response = await RDApplications.RDApplicationsModel.openRdAccount(values);\r\n                console.log(response);\r\n                setLoading(false);\r\n                if (response.status == 200) {\r\n                    formik.resetForm();\r\n                    setShowToast({ isShow: true,type:\"bg-success\", message: response.body.message })\r\n                } else {\r\n                    setShowToast({ isShow: true,type:\"bg-danger\", message: response.body.message })\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n                setLoading(false);\r\n                setShowToast({ isShow: true,type:\"bg-danger\", message: error.response.body.message })\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n        <Toast key={1} autohide delay={3000} show={showToast.isShow} onClose={() => setShowToast({ isShow: false,type:\"\", message: \"\" })} className={\"loader \"+ (showToast.type) } >\r\n            <Toast.Header>\r\n            <strong className=\"me-auto\">{showToast.type==\"bg-danger\"?\"Error\":\"Success\"} Message</strong>\r\n            </Toast.Header>\r\n            <Toast.Body className=\"Dark\">\r\n            {showToast.message}\r\n            </Toast.Body>\r\n        </Toast>\r\n            <Loader show={loading} />\r\n            <h2 className=\"text-info text-center\">Open New RD Account</h2>\r\n            <Container fluid className=\"bg-white mt-5 shadow-lg p-3 mb-5 bg-white rounded\">\r\n                <Form onSubmit={formik.handleSubmit}>\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Account holder name</Form.Label>\r\n                            <Form.Control\r\n                                name=\"account_holder_name\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.account_holder_name}\r\n                            />\r\n                            {formik.touched.account_holder_name && formik.errors.account_holder_name ? (\r\n                                <div class=\"text-danger\">{formik.errors.account_holder_name}</div>\r\n                            ) : null}\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} className=\"form-group required\" controlId=\"formGridEnroll\">\r\n                            <Form.Label >Date of Birth</Form.Label>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={dob}\r\n                                onChange={(date) => setdob(date)}\r\n                                name=\"application_date\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Father/Husband name</Form.Label>\r\n                            <Form.Control\r\n                                name=\"father_husband_name\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.father_husband_name}\r\n                            />\r\n\r\n                            {formik.touched.father_husband_name && formik.errors.father_husband_name ? (\r\n                                <div class=\"text-danger\">{formik.errors.father_husband_name}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>Address</Form.Label>\r\n                            <Form.Control\r\n                                name=\"address\"\r\n                                as=\"textarea\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.address}\r\n\r\n                            />\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>phone</Form.Label>\r\n                            <Form.Control\r\n                                name=\"phone\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.phone}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGriddob\">\r\n                            <Form.Label>gender</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"gender\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.gender}>\r\n                                <option key=\"\" value=\"\">Select gender</option>\r\n                                <option key=\"male\" value=\"male\">Male</option>\r\n                                <option key=\"female\" value=\"female\">female</option>\r\n                            </select>\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Aadhar card number</Form.Label>\r\n                            <Form.Control\r\n                                name=\"aadhar_card\"\r\n                                type=\"number\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.aadhar_card}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>PAN</Form.Label>\r\n                            <Form.Control\r\n                                name=\"pan_card\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.pan_card}\r\n                            />\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Driving Licence</Form.Label>\r\n                            <Form.Control\r\n                                name=\"driving_licence\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.driving_licence}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Voter Id</Form.Label>\r\n                            <Form.Control\r\n                                name=\"voter_id\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.voter_id}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\" >\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group\">\r\n                            <Form.Label>Ration card</Form.Label>\r\n                            <Form.Control\r\n                                name=\"ration_card\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.ration_card}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Interest Rate (in %)</Form.Label>\r\n                            <Form.Control\r\n                                name=\"interest_rate\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.interest_rate}\r\n                            />\r\n                            {formik.touched.interest_rate && formik.errors.interest_rate ? (\r\n                                <div class=\"text-danger\">{formik.errors.interest_rate}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>RD Amount</Form.Label>\r\n                            <Form.Control\r\n                                name=\"rd_amount\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.rd_amount}\r\n                            />\r\n                            <Form.Text className=\"text-muted\">\r\n                                It will be per month or daily. Based on tenure.\r\n                            </Form.Text>\r\n\r\n                            {formik.touched.rd_amount && formik.errors.rd_amount ? (\r\n                                <div class=\"text-danger\">{formik.errors.rd_amount}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Tenure</Form.Label>\r\n                            <select\r\n                                className=\"form-control\"\r\n                                name=\"tenure\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.tenure}\r\n                            >\r\n                                <option key=\"\" value=\"\">Select Tenure</option>\r\n                                {/* <option key=\"daily\" value=\"daily\">Daily</option> */}\r\n                                <option key=\"daily\" value=\"daily\">Daily</option>\r\n                                <option key=\"monthly\" value=\"monthly\">Monthly</option>\r\n                            </select>\r\n                            {formik.touched.tenure && formik.errors.tenure ? (\r\n                                <div class=\"text-danger\">{formik.errors.tenure}</div>\r\n                            ) : null}\r\n\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                    <Row className=\"mb-3\">\r\n                        <Form.Group md={6} as={Col} controlId=\"formGriddob\" className=\"form-group required\">\r\n                            <Form.Label>Period (in Months)</Form.Label>\r\n                            <Form.Control\r\n                                name=\"period\"\r\n                                type=\"number\"\r\n                                min=\"0\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.period}\r\n                            />\r\n                            {formik.touched.period && formik.errors.period ? (\r\n                                <div class=\"text-danger\">{formik.errors.period}</div>\r\n                            ) : null}\r\n                        </Form.Group>\r\n                    </Row>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={() => { history.push(\"/\") }} type=\"button\" className=\"ml-2\">\r\n                        Cancel\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OpenNewRdAccount;","import React, { useEffect, useState, useMemo } from 'react';\r\nimport { Table, Button, Container, Row, Col, Modal, InputGroup, FormLabel, Pagination } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport rDApplications from '../../models/RDApplications';\r\nimport Loader from '../layout/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport { useTable, useSortBy, usePagination, useFilters } from 'react-table';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { useRef } from 'react';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\n\r\nfunction RdDeposites(props) {\r\n    const auth = useSelector(state => state.auth);\r\n    const [showDeleteModel, setShowDeleteModel] = useState(false)\r\n    const [isShowLoader, setisShowLoader] = useState(false)\r\n    const [dueEmis, setDueEmis] = useState([]);\r\n    const [paidID, setPaidID] = useState({\r\n        \"account_number\":\"\",\r\n        \"deposited_date\":\"\"\r\n    })\r\n    const [enrollmentDate, setEnrollmentDate] = useState(new Date());\r\n    const emiDetailsRef = useRef();\r\n    const handlePrintEmiDetail = useReactToPrint({\r\n        content: () => emiDetailsRef.current,\r\n        documentTitle:\"AA2-Due-EMIs\",\r\n      });\r\n\r\n    useEffect(() => {\r\n        getDueEmisRecord();\r\n    }, [])\r\n\r\n    const data = useMemo(\r\n        () =>\r\n            dueEmis.map((record, index) => {\r\n                return {\r\n                    col1: record.account_number,\r\n                    col2: record.agent_id,\r\n                    col3: record.deposited_amount,\r\n                    col4: record.deposited_date,\r\n                    col5: record,\r\n                }\r\n            }\r\n            )\r\n        ,\r\n        [dueEmis]\r\n    )\r\n\r\n    const columns = useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Account no.',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                Cell: e => { return(<Link to={{\r\n                    pathname: '/rdDetails',\r\n                    state: dueEmis[e.row.id]?.rd_table_id\r\n                }}>{e.value}</Link>)}\r\n            },\r\n            {\r\n                Header: 'Agent id',\r\n                accessor: 'col2', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                //  Cell: e => <Link to=\"/memberGroup\">{e.value}</Link>\r\n            },\r\n            {\r\n                Header: 'Amount',\r\n                accessor: 'col3', // accessor is the \"key\" in the data\r\n                allowFilter: true,\r\n                //  Cell: e => <Link to=\"/village\">{e.value}</Link>\r\n            },\r\n            {\r\n                Header: 'Deposit date',\r\n                accessor: 'col4',\r\n                allowFilter: true,\r\n                // Cell: emi => {\r\n                //     return (<Link to={{\r\n                //     pathname: '/viewMemberDetail',\r\n                //     state: emi.value\r\n                // }}>{emi.value}</Link>)}\r\n            },\r\n            {\r\n                Header: 'Action',\r\n                accessor: 'col5',\r\n                allowFilter: false,\r\n                Cell: emi => emi.value.is_deposited?\"Paid\":<Button size={\"sm\"} variant=\"success\" onClick={() => paidHandle(emi.value.account_number, emi.value.deposited_date)}>Deposit</Button>\r\n            },\r\n\r\n        ],\r\n        [dueEmis]\r\n    )\r\n    function DefaultColumnFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n\r\n        return (\r\n            <input\r\n                className=\"form-control\"\r\n                value={filterValue || ''}\r\n                onChange={e => {\r\n                    setFilter(e.target.value || undefined)\r\n                }}\r\n                placeholder={`Search ${count} records...`}\r\n            />\r\n        )\r\n    }\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n    const paginate = (totalPage) => {\r\n        let pageNumberArray = [];\r\n        for (let i = 1; i <= totalPage; i++) {\r\n            pageNumberArray.push(i);\r\n        }\r\n        return (\r\n            <Pagination className=\"text-left\">\r\n                <Pagination.First onClick={() => gotoPage(0)} />\r\n                <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\r\n                {pageNumberArray.map(num => <Pagination.Item key={num} active={num === (pageIndex + 1)} onClick={() => gotoPage(num - 1)}>{num}</Pagination.Item>)}\r\n                <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\r\n                <Pagination.Last onClick={() => gotoPage(totalPage - 1)} />\r\n            </Pagination>\r\n        );\r\n\r\n    }\r\n\r\n    const getDueEmisRecord = (today = moment().format(\"yyyy-MM-DD\")) => {\r\n        setisShowLoader(true);\r\n        let payload = auth.id;\r\n        if(auth.role == \"admin\" || auth.role == \"maker\"|| auth.role == \"checker\"){\r\n          payload = \"all\";\r\n        }\r\n\r\n        rDApplications.RDApplicationsModel.getDeposits(payload,today).then(res => {\r\n            setisShowLoader(false);\r\n            if (res.statusCode == 200) {\r\n                let emiData = [];\r\n                emiData = res.body.message.map(emi => {\r\n                    // return emi\r\n                    emi[\"rd_table_id\"] = emi.account_number.substring(10)\r\n                    return emi;\r\n                });\r\n                setDueEmis(emiData);\r\n            } else {\r\n                setDueEmis([]);\r\n            }\r\n        })\r\n    }\r\n    const paidEMI = async () => {\r\n        setShowDeleteModel(false);\r\n        try {\r\n            setisShowLoader(true);\r\n            let response = await rDApplications.RDApplicationsModel.postDeposit(paidID);\r\n            setisShowLoader(false);\r\n            if (response.statusCode == 200) {\r\n                getDueEmisRecord();\r\n            }\r\n        } catch (error) {\r\n            console.log(error.response.body.message);\r\n            setisShowLoader(false);\r\n        }\r\n    }\r\n    const paidHandle = (account_number,deposited_date) => {\r\n        let dataArray = deposited_date.split('-');\r\n        setPaidID({\r\n            \"account_number\":account_number,\r\n            \"deposited_date\":moment(`${dataArray[2]}-${dataArray[1]}-${dataArray[0]}`).format(\"YYYY-MM-DD\")\r\n        });\r\n        setShowDeleteModel(true);\r\n    }\r\n    // const changeEmiDate = (selectedDate) => {\r\n    //     setEnrollmentDate(selectedDate)\r\n    //     getDueEmisRecord(moment(selectedDate).format(\"yyyy-MM-DD\"));\r\n    // }\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        pageOptions,\r\n        page,\r\n        pageCount,\r\n        state: { pageIndex, pageSize },\r\n        gotoPage,\r\n        previousPage,\r\n        nextPage,\r\n        setPageSize,\r\n        canPreviousPage,\r\n        canNextPage,\r\n    } = useTable({ columns, data, defaultColumn, initialState: { pageIndex: 0 } }, useFilters, useSortBy, usePagination)\r\n    return (\r\n        <>\r\n            <Modal show={showDeleteModel} onHide={() => setShowDeleteModel(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Paid EMI </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>Are you sure?</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => setShowDeleteModel(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => paidEMI()}>\r\n                        Deposit\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Loader show={isShowLoader} />\r\n            <Container fluid>\r\n                <h2 className=\"text-info text-center\">Due Deposites</h2>\r\n                <Row>\r\n                    <Col>\r\n                        {/* <InputGroup className=\"mb-3\">\r\n                            <FormLabel className=\"mr-3\">EMI Date:</FormLabel>\r\n                            <DatePicker class=\"form-control\"\r\n                                selected={enrollmentDate}\r\n                                onChange={(date) => changeEmiDate(date)}\r\n                                name=\"enrollment_date\"\r\n                                dateFormat=\"dd/MM/yyyy\"\r\n                            />\r\n\r\n                        </InputGroup> */}\r\n\r\n                        <div>\r\n                            {paginate(pageCount)}\r\n                            <svg style={{cursor:'pointer'}} onClick={handlePrintEmiDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer mb-2\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n                        </div>\r\n                        <Table  {...getTableProps()} className=\"shadow-lg p-3 mb-5 bg-white rounded small\" striped bordered hover responsive>\r\n                            <thead className=\"bg-primary\">\r\n                                {headerGroups.map(headerGroup => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map(column => (\r\n                                            <th\r\n                                                {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            >\r\n                                                {column.render('Header')}\r\n                                                <span>\r\n                                                    {column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}\r\n                                                </span>\r\n                                                <div>{column.allowFilter ? column.render('Filter') : null}</div>\r\n                                            </th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                            </thead>\r\n                            <tbody{...getTableBodyProps()}>\r\n\r\n                                {page.map(row => {\r\n                                    prepareRow(row)\r\n                                    return (\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n                                                //console.log(cell);\r\n                                                return (\r\n                                                    <td {...cell.getCellProps()}>\r\n                                                        {cell.render('Cell')}\r\n                                                    </td>\r\n                                                    )\r\n\r\n                                            })}\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                        {/* <div style={{display:\"none\"}}> <PrintDueEmis ref={emiDetailsRef} dueEmis={rows}/></div> */}\r\n                        <div className=\"text-right\">\r\n                            {paginate(pageCount)}\r\n                        </div>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RdDeposites;","import React, { useState, useEffect,useRef } from 'react';\r\nimport dashboard from '../../models/dashboard'\r\nimport { Table, Button, Row, Col, Card, Spinner, ProgressBar } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { useReactToPrint } from 'react-to-print';\r\n\r\nfunction CompleteLadger(props) {\r\n    const [ladger, setLadger] = useState([]);\r\n    const [progress, setProgress] = useState(0);\r\n    const emiDetailsRef = useRef();\r\n\r\n    const handlePrintEmiDetail = useReactToPrint({\r\n        content: () => emiDetailsRef.current,\r\n        documentTitle:\"AA2-Due-EMIs\",\r\n      });\r\n\r\n    let balance = 0;\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            let received = [];\r\n            let paid = [];\r\n            let ladgerArray = [];\r\n            received = await getReceivedAmount();\r\n            paid = await getPaidAmount();\r\n            ladgerArray = [...received, ...paid];\r\n            ladgerArray.sort(compare);\r\n            setLadger(ladgerArray);\r\n          }\r\n          fetchData();\r\n    }, [])\r\n    const getReceivedAmount = async () => {\r\n        try {\r\n            setProgress(10);\r\n            let response = await dashboard.DashboardModel.getReceivedAmount();\r\n            setProgress(50);\r\n            if (response.statusCode == 200) {\r\n                let emiLadger = []\r\n                let processingFeeLadger = []\r\n                let data = []\r\n                emiLadger = response.body.message?.emis.map((val, idx) => {\r\n                    return {\r\n                        \"date\": moment(val.EMI_date).format(\"DD-MM-yyyy\"),\r\n                        \"particular\": `EMI received Loan Account - ${val.loan_account_no}`,\r\n                        \"cr\": val.EMI_amount,\r\n                        \"dr\": \"\",\r\n                    }\r\n                });\r\n                processingFeeLadger = response.body.message?.processingFee.map((val, idx) => {\r\n                    return {\r\n                        \"date\": moment(val.created_at).format(\"DD-MM-yyyy\"),\r\n                        \"particular\": val.particular,\r\n                        \"cr\": val.amount,\r\n                        \"dr\": \"\",\r\n                    }\r\n                });\r\n                 data = [...emiLadger, ...processingFeeLadger];\r\n                 return data;\r\n                // data.sort(compare);\r\n                // setLadger(data);\r\n            } else {\r\n                // setLadger([]);\r\n                return [];\r\n            }\r\n        } catch (error) {\r\n            setProgress(100);\r\n        }\r\n    }\r\n    const getPaidAmount = async () => {\r\n        try {\r\n            setProgress(70);\r\n            let response = await dashboard.DashboardModel.getPaidAmount();\r\n            setProgress(90);\r\n            if (response.statusCode == 200) {\r\n                let expensesLadger = []\r\n                let loanLadger = []\r\n                let data = []\r\n                expensesLadger = response.body.message?.expenses.map((val, idx) => {\r\n                    return {\r\n                        \"date\": moment(val.date_of_expense).format(\"DD-MM-yyyy\"),\r\n                        \"particular\": val.expense_type,\r\n                        \"cr\": \"\",\r\n                        \"dr\": val.amount,\r\n                    }\r\n                });\r\n                loanLadger = response.body.message?.loan.map((val, idx) => {\r\n                    return {\r\n                        \"date\": moment(val.application_date).format(\"DD-MM-yyyy\"),\r\n                        \"particular\": `Loan disbursed to ${val.member_name} - Loan account ${val.loan_account_no}`,\r\n                        \"dr\": val.loan_amount,\r\n                        \"cr\": \"\",\r\n                    }\r\n                });\r\n                 data = [ ...expensesLadger, ...loanLadger];\r\n                 setProgress(100);\r\n                 return data;\r\n                // data.sort(compare);\r\n                // setLadger(data);\r\n            } else {\r\n                //setLadger([]);\r\n                return [];\r\n            }\r\n        } catch (error) {\r\n            setProgress(100);\r\n        }\r\n    }\r\n    const compare = (a, b) => {\r\n        if (a.date < b.date) {\r\n            return -1;\r\n        }\r\n        if (a.date > b.date) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    const calculateTotal = (dr, cr) => {\r\n        let total = balance;\r\n        balance = dr != \"\" ? total - parseFloat(dr) : total + parseFloat(cr);\r\n        return balance;\r\n    }\r\n    const formatAmount = (amount) => {\r\n        return amount ? amount.toString().replace(/.(?=(..)*...$)/g, '$&,') : \"\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row >\r\n                <Col>\r\n                \r\n                    <Card border=\"success\" header\r\n                        key={0}\r\n                        text={'dark'}\r\n                        \r\n                        className=\"m-2\">\r\n                        <Card.Header className=\"bg-success text-center\"><b>Ledger </b>\r\n                        <svg style={{cursor:'pointer',float:\"right\"}} onClick={handlePrintEmiDetail} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-printer mb-2\" viewBox=\"0 0 16 16\">\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\"/>\r\n            <path d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"/>\r\n            </svg>\r\n                        </Card.Header>\r\n                        {progress<100 ? <Card.Body className=\"text-center\"><div style={{ top: '50%',position:\"relative\" }}><ProgressBar style={{\"position\":\"relative\",\"width\":\"30%\",\"left\":\"40%\"}} striped variant=\"info\" now={progress} label={`${progress}%`} /></div></Card.Body> :\r\n                            <Card.Body>\r\n                                <Table ref={emiDetailsRef} size={\"sm\"} className=\"bg-white rounded small\" bordered responsive>\r\n                                    <thead>\r\n                                        <tr className=\"bg-success\">\r\n                                            <th>SR No.</th>\r\n                                            <th>Date</th>\r\n                                            <th>Particular</th>\r\n                                            <th>DR</th>\r\n                                            <th>CR</th>\r\n                                            <th>Balance</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {ladger.map((val, idx) => <tr>\r\n                                            <td>\r\n                                                {idx + 1}\r\n                                            </td>\r\n                                            <td>\r\n                                                {val.date}\r\n                                            </td>\r\n                                            <td>\r\n                                                {val.particular}\r\n                                            </td>\r\n                                            <td>\r\n                                                {formatAmount(val.dr)}\r\n                                            </td>\r\n                                            <td>\r\n                                                {formatAmount(val.cr)}\r\n                                            </td>\r\n                                            <td>\r\n                                                {formatAmount(calculateTotal(val.dr, val.cr))}\r\n                                            </td>\r\n\r\n                                        </tr>)}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Card.Body>}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CompleteLadger;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Login from './components/users/Login'\r\nimport InnerLayout from './components/layout/InnerLayout'\r\nimport MemberGroup from  './components/masterRecord/memberGroup/MemberGroup';\r\nimport AddMemberGroup from  './components/masterRecord/memberGroup/AddMemberGroup';\r\nimport AddMember from  './components/masterRecord/member/AddMember';\r\nimport Member from  './components/masterRecord/member/Member';\r\nimport MemberViewDetails from  './components/masterRecord/member/MemberViewDetails';\r\nimport Scheme from  './components/groupLoan/Scheme';\r\nimport AddScheme from  './components/groupLoan/AddScheme';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport LoanApplication from  './components/groupLoan/LoanApplication';\r\nimport LoanApproval from  './components/groupLoan/LoanApproval';\r\nimport DisburseLoan from  './components/groupLoan/DisburseLoan';\r\nimport LoanApprovalDetails from  './components/groupLoan/LoanApprovalDetails';\r\nimport AllApplications from  './components/groupLoan/AllApplications';\r\nimport EmiCalculator from  './components/groupLoan/EmiCalculator';\r\nimport DueEmis from './components/emis/DueEmis';\r\nimport Village from './components/groupLoan/Village';\r\nimport AddVillage from './components/groupLoan/AddVillage';\r\nimport Expense from './components/expenses/Expense';\r\nimport AddExpense from './components/expenses/AddExpense';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ProcessingFee from './components/processing-fee/ProcessingFee';\r\nimport AddProcessingFee from './components/processing-fee/AddProcessingFee';\r\nimport Ladger from './components/dashboard/Ladger';\r\nimport RdApplications from './components/rdModule/RdApplications'\r\nimport RdDetails from './components/rdModule/RdDetails'\r\nimport openNewRdAccount from './components/rdModule/openNewRdAccount'\r\nimport RdDeposites from './components/rdModule/RdDeposites';\r\nimport CompleteLadger from './components/dashboard/CompleteLadger';\r\nfunction Routes() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n            <InnerLayout exact path=\"/\" component={Dashboard}/>\r\n            <InnerLayout exact path=\"/memberGroup\" component={MemberGroup} />\r\n            <InnerLayout exact path=\"/addMemberGroup\" component={AddMemberGroup} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/addMember\" component={AddMember} />\r\n            <InnerLayout exact path=\"/scheme\" component={Scheme} />\r\n            <InnerLayout exact path=\"/viewMemberDetail\" component={MemberViewDetails} />\r\n            <InnerLayout exact path=\"/addScheme\" component={AddScheme} />\r\n            <InnerLayout exact path=\"/loanApplication\" component={LoanApplication} />\r\n            <InnerLayout exact path=\"/loanApproval\" component={LoanApproval} />\r\n            <InnerLayout exact path=\"/disburseLoan\" component={DisburseLoan} />\r\n            <InnerLayout exact path=\"/loanApprovalDetails\" component={LoanApprovalDetails} />\r\n            <InnerLayout exact path=\"/allApplications\" component={AllApplications} />\r\n            <InnerLayout exact path=\"/emiCalculator\" component={EmiCalculator} />\r\n            <InnerLayout exact path=\"/dueEmis\" component={DueEmis} />\r\n            <InnerLayout exact path=\"/Village\" component={Village} />\r\n            <InnerLayout exact path=\"/addVillage\" component={AddVillage} />\r\n            <InnerLayout exact path=\"/expense\" component={Expense} />\r\n            <InnerLayout exact path=\"/addExpense\" component={AddExpense} />\r\n            <InnerLayout exact path=\"/processingFee\" component={ProcessingFee} />\r\n            <InnerLayout exact path=\"/addProcessingFee\" component={AddProcessingFee} />\r\n            <InnerLayout exact path=\"/addProcessingFee\" component={AddProcessingFee} />\r\n            <InnerLayout exact path=\"/ladger\" component={Ladger} />\r\n            <InnerLayout exact path=\"/rdApplications\" component={RdApplications} />\r\n            <InnerLayout exact path=\"/rdDetails\" component={RdDetails} />\r\n            <InnerLayout exact path=\"/openNewRdAccount\" component={openNewRdAccount} />\r\n            <InnerLayout exact path=\"/rdDeposites\" component={RdDeposites} />\r\n            <InnerLayout exact path=\"/CompleteLadger\" component={CompleteLadger} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <InnerLayout path=\"/member\" component={Member} />\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { store} from './store';\r\n\r\nimport Routes from './Routes';\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <div className=\"App\">\r\n      {/* <Header/> */}\r\n      <Routes/>\r\n    </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst API_ROOT = '/api';\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\n\r\nconst requests = {\r\n  // del: url =>\r\n  //   superagent.del(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody),\r\n  get: url =>\r\n    superagent.get(`${API_ROOT}${url}`).use(tokenPlugin).then(responseBody,errorBody),\r\n  // put: (url, body) =>\r\n  //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent.post(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody,errorBody)\r\n};\r\n\r\nconst Auth = {\r\n  login: (email, password) =>\r\n    requests.post('/user/login',  { email, password } ),\r\n  register: (userDetails) =>\r\n    requests.post('/user/registration',  userDetails ),\r\n};\r\n\r\nconst Order = {\r\n  getProductsByCat:(catname)=>\r\n  requests.get(`/products?category=${catname}`),\r\n  getCatgoryInitialData:()=>{\r\n    return [superagent.get(`${API_ROOT}/category`),superagent.get(`${API_ROOT}/products`)]\r\n  },\r\n  placeOrder:(data)=>{\r\n    //requests.post(\"/orders/place-order\",data)\r\n    return superagent.post(`${API_ROOT}/orders/place-order`, data).use(tokenPlugin)\r\n  },\r\n  getCategoryAdmin(){\r\n    return superagent.get(`${API_ROOT}/category`).use(tokenPlugin)\r\n  },\r\n  getOrdersHistoryAdmin(page){\r\n    return superagent.get(`${API_ROOT}/orders/admin-order-list?page=${page}`).use(tokenPlugin)\r\n  },\r\n  getOrderHistoryByUserEmail(){\r\n    return superagent.get(`${API_ROOT}/orders/get-order`).use(tokenPlugin)\r\n  },\r\n  addCategory(data){\r\n    return superagent.post(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  deleteCategory(data){\r\n    return superagent.del(`${API_ROOT}/category?name=${data}`,data).use(tokenPlugin)\r\n  },\r\n  editCategory(data){\r\n    return superagent.put(`${API_ROOT}/category`,data).use(tokenPlugin)\r\n  },\r\n  getProducts(){\r\n    return superagent.get(`${API_ROOT}/products`).use(tokenPlugin)\r\n  },\r\n  deleteProduct(data){\r\n    return superagent.del(`${API_ROOT}/products?title=${data}`,data).use(tokenPlugin)\r\n  },\r\n  addProducts(data){\r\n    return superagent.post(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  },\r\n  editProducts(data){\r\n    return superagent.put(`${API_ROOT}/products`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Payment = {\r\n  getRazorpayOrderId(data){\r\n    return superagent.post(`${API_ROOT}/payment/food-create-order-no`,data).use(tokenPlugin)\r\n  },\r\n  updatePaymentStatus(data){\r\n    return superagent.post(`${API_ROOT}/payment/updatePaymentStatus`,data).use(tokenPlugin)\r\n  }\r\n};\r\nconst Finance = {\r\n  fillItr(data){\r\n    return superagent.post(`${API_ROOT}/finance/fill-itr`,data).use(tokenPlugin)\r\n  },\r\n  getAdminItr(){\r\n    return superagent.get(`${API_ROOT}/finance/fill-itr`).use(tokenPlugin)\r\n  },\r\n  uploadForm16(data){\r\n    return superagent.post(`${API_ROOT}/finance/form16Upload`,data).use(tokenPlugin)\r\n  },\r\n  getAdminForm16(){\r\n    return superagent.get(`${API_ROOT}/finance/form16Upload`).use(tokenPlugin)\r\n  },\r\n  downloadForm16(data){\r\n    return superagent.get(`${API_ROOT}/download?fileName=${data.fileName}`).use(tokenPlugin)\r\n  }\r\n \r\n}\r\nconst Inquery = {\r\n  submitInquery(data){\r\n    return superagent.post(`${API_ROOT}/user/submitInquery`,data).use(tokenPlugin)\r\n  }\r\n}\r\nexport default {\r\n  Auth,\r\n  Order,\r\n  Payment,\r\n  Finance,\r\n  Inquery,\r\n  getToken:()=>{return token},\r\n  setToken: _token => { token = _token; }\r\n};","import superagentPromise from 'superagent-promise';\r\nimport _superagent from 'superagent';\r\n\r\nexport const superagent = superagentPromise(_superagent, global.Promise);\r\nexport const API_ROOT = window.location.hostname==\"localhost\"?\"https://dev-microfinance.herokuapp.com/api\": '/api';\r\n\r\n\r\nconst encode = encodeURIComponent;\r\nconst responseBody = res => res;\r\nconst errorBody = err =>{\r\n  return err.response\r\n} ;\r\nlet token = null;\r\nconst tokenPlugin = req => {\r\n  if (token) {\r\n    req.set('Token', token);\r\n  }\r\n}\r\nexport const requests = {\r\n    del: url =>\r\n      superagent.del(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    get: url =>\r\n      superagent.get(`${API_ROOT}${url}`).then(responseBody,errorBody),\r\n    // put: (url, body) =>\r\n    //   superagent.put(`${API_ROOT}${url}`, body).use(tokenPlugin).then(responseBody),\r\n    post: (url, body) =>\r\n      superagent.post(`${API_ROOT}${url}`, body).then(responseBody,errorBody)\r\n  };"],"sourceRoot":""}